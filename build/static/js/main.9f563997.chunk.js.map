{"version":3,"sources":["components/nav/NavStyledComponents.js","components/nav/Nav.js","components/post/Title.js","components/post/Section.js","components/post/Date.js","components/post/Num.js","components/post/Tag.js","components/post/Tags.js","components/post/Text.js","components/post/Output.js","components/post/Code.js","components/post/Post.js","components/search/Search.js","posts/classVsFunctionComponent/classVsFunctionComponent.jsx","components/post/CodeSpan.js","components/post/Link.js","posts/controlledVsUncontrolledComponent/controlledVsUncontrolledComponent.js","posts/forwardLotsOfProps/forwardLotsOfProps.js","posts/forwardRef/forwardRef.js","posts/immutableState/immutabilityOfState.js","posts/jsVsJsx/jsVsJsx.js","posts/passProps/passProps.js","posts/updateValueFromChildComponent/updateValueFromChildComponent.js","posts/toDoList/toDoList.js","posts/useStateAndInput/useStateAndInput.js","posts/whyToUseState/whyToUseState.js","posts/allPosts.js","App.js","index.js"],"names":["bg","textColor","navSize","border","NavStyled","styled","nav","NavItemStyled","ul","Icon","a","parseInt","NavItemLi","li","slideDownAnimation","keyframes","slideDownAnimationPhone","MenuContainer","div","appearAnimation","MenuLink","props","color","willOpenTopMenu","css","MenuIcon","MenuIconRight","MenuText","span","BackLink","CloseLink","appleIcon","React","createElement","FaApple","reactIcon","FaReact","redHatIcon","FaRedhat","plusIcon","AiOutlinePlus","closeIcon","IoClose","navContent","navItem","visible","icon","text","menu","id","shortid","generate","menuItems","iconLeft","NavBar","useState","openedMenuState","setOpenedMenuState","showMenuContainerState","setShowMenuContainerState","showMenu","o","console","log","isMenu","closeMenu","underNavItemId","prevMenu","changeMenu","subMenu","e","stopPropagation","pop","navKeyboardHandler","key","isNestedMenu","length","useEffect","window","addEventListener","removeEventListener","map","navObj","NavItem","href","onClick","Menu","BackItem","CloseItem","menuItem","MenuItem","subMenuExists","className","Title","H3Styled","children","h3","Section","SectionStyled","section","Date","TimeStyled","time","Num","SpanStyled","num","Tag","DivStyled","contentEditable","inputEl","document","getElementById","clonedTag","target","cloneNode","style","margin","classList","add","appendChild","append","el","childNodes","range","createRange","sel","getSelection","lastNode","setStart","collapse","removeAllRanges","addRange","focus","setCaretToEnd","scrollLeft","scroll","top","left","behavior","tag","Tags","tags","Text","PStyled","p","Output","Code","Prism","plugins","NormalizeWhitespace","setDefaults","jsxesFromPostParts","post","postParts","index","type","val","Post","title","sequentialNum","tagsArr","date","FormStyled","form","SearchPreviewContainer","SearchPreviewStyled","SearchPreviewItem","summary","TagsContainerStyled","TagsContainer","state","setState","foundTags","RemoveFoundPosts","closeFoundPostsContainer","foundPostsNum","textAlign","marginTop","position","width","fontSize","fontWeight","marginLeft","cursor","Search","returnUpdatedState","posts","inputVal","inputWords","foundPosts","inputTags","postsOnDisplay","openSearchMenu","showRemoveFoundPosts","showFoundPosts","FoundPosts","ending","searchBtnClickHandler","preventDefault","querySelector","innerText","words","context","querySelectorAll","instance","Mark","unmark","mark","highlightTextInPreview","placeholder","onFocus","updateState","onInput","callback","wait","timeout","args","clearTimeout","setTimeout","apply","this","debounce","onKeyDown","titleTxt","postTxt","btnCss","padding","ClassComponent","likes","increment","bind","decrement","Component","toRender1","FunctionComponent","setLikes","toRender2","classVsFunctionComponent","CodeSpan","Link","AStyled","link","ControlledInput","inpVal","setInpVal","value","onChange","UncontrolledInput","inpRef","useRef","ref","current","controlledVsUncontrolledComponent","ParentComponent","JSON","stringify","ChildComponent","toRender","prop1","prop2","prop3","forwardLotsOfProps","Input","forwardRef","InputWithFocus","greenCss","redCss","marginCss","StateIsImmutable","push","immutableState","jsVsJsx","disabled","alert","Component1","Component2","Component3","toRender3","passProps","Parent","background","Child","updateValueFromChildComponent","StyledContainer","ToDoApp","getToDoList","localStorage","getItem","setItem","toDoText","parse","toDoListState","setToDoListState","AddItemForm","ToDoList","inputState","setInputState","newList","toDoItem","ToDoItem","filter","toDoList","InputWithState","useStateAndInput","ComponentWithoutState","ComponentWithState","txtFromJSXOrStr","Array","join","forEach","allPosts","StyledApp","StyledMain","main","App","returnAllTagsFromArr","arr","allTags","Set","from","sort","b","localeCompare","highlightAll","returnPostsMemo","useMemo","obj","wordsArr","nodeType","Node","TEXT_NODE","data","trim","toLowerCase","split","ELEMENT_NODE","wordsArrL","textL","every","elem","includes","areWordsInText","smallArr","bigArr","smallArrL","bigArrL","areTagsInPost","StyleReset","createGlobalStyle","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9f563997.chunk.js","sourcesContent":["import styled, { keyframes, css } from 'styled-components';\r\n\r\n//#region CSS const\r\n\r\nconst bg = '#242526';\r\nconst textColor = '#dadce1';\r\nconst navSize = '60px';\r\nconst border = '1px solid #474a4d';\r\nconst borderRadius = '8px';\r\n\r\n//#endregion\r\n\r\nexport const NavStyled = styled.nav`\r\n  height: ${navSize};\r\n  /* background-color: ${bg}; */\r\n  padding: 0 1rem;\r\n  border-bottom: ${border};\r\n  position: relative;\r\n  background-image: linear-gradient(to right, #434343 0%, black 100%);\r\n`;\r\n\r\nexport const NavItemStyled = styled.ul`\r\n  max-width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nexport const Icon = styled.a`\r\n  width: ${parseInt(navSize) * 0.5}px;\r\n  height: ${parseInt(navSize) * 0.5}px;\r\n  background-color: #484a4d;\r\n  border-radius: 50%;\r\n  padding: 5px;\r\n  margin: 2px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: filter 300ms;\r\n  color: ${textColor};\r\n\r\n  svg {\r\n    fill: ${textColor};\r\n    width: 20px;\r\n    height: 20px;\r\n    margin-top: 1px;\r\n  }\r\n\r\n  &:hover {\r\n    filter: brightness(1.2);\r\n  }\r\n`;\r\n\r\nexport const NavItemLi = styled.li`\r\n  width: ${parseInt(navSize) * 0.8}px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst slideDownAnimation = keyframes`\r\n  from {\r\n    /* transform: scaleY(0) translateX(-45%); */\r\n    transform: translateY(-50%) translateX(-45%);\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    /* transform: scaleY(1) translateX(-45%); */\r\n    transform: translateY(0%) translateX(-45%);\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst slideDownAnimationPhone = keyframes`\r\n  from {\r\n    /* transform: scaleY(0); */\r\n    transform: translateY(-50%);\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    /* transform: scaleY(1); */\r\n    transform: translateY(0%);\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const MenuContainer = styled.div`\r\n  position: absolute;\r\n  top: 110%;\r\n  width: 300px;\r\n  /* width: auto; */\r\n  background-color: ${bg};\r\n  \r\n  border: ${border};\r\n  border-radius: ${borderRadius};\r\n  padding: 1rem;\r\n  overflow: hidden;\r\n  z-index: 666;\r\n\r\n  animation-name: ${slideDownAnimation};\r\n  animation-duration: 500ms;\r\n  animation-delay: 0ms;\r\n  animation-iteration-count: 1;\r\n  animation-direction: normal;\r\n  animation-timing-function: cubic-bezier(0, 1, 0.5, 1);\r\n  animation-fill-mode: forwards;\r\n  transform-origin: top;\r\n\r\n  @media screen and (max-width: 480px) {\r\n    transform: translateX(0px) !important;\r\n    left: 10px;\r\n    right: 10px;\r\n    width: auto;\r\n    animation-name: ${slideDownAnimationPhone};\r\n  }\r\n`;\r\n\r\nconst appearAnimation = keyframes`\r\n  from {\r\n    transform: translateX(-50%);\r\n  }\r\n  to {\r\n    transform: translateX(0);\r\n  }\r\n`;\r\n\r\n// todo: use props to animate only nested menu\r\n// todo: do not animate close & back\r\nexport const MenuLink = styled.a`\r\n  height: 50px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-radius: ${borderRadius};\r\n  padding: 0.5rem;\r\n  color: ${textColor};\r\n  white-space: nowrap;\r\n  /* animation: ${appearAnimation} 200ms linear; */\r\n  color: ${props => props.color};\r\n  animation: ${props =>\r\n    // @ts-ignore\r\n    props.willOpenTopMenu\r\n      ? css`none`\r\n      : css`${appearAnimation} 200ms cubic-bezier(0, 1, 0.5, 1)`\r\n  };\r\n\r\n  .left-part {\r\n    width: 100%;\r\n    display: inline-flex;\r\n    flex-direction: row;\r\n    align-content: center;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    flex-wrap: nowrap;\r\n  }\r\n\r\n  .right-part {\r\n    margin-left: 40px;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: #525357;\r\n  }\r\n`;\r\n\r\nexport const MenuIcon = styled(Icon)`\r\n  &:hover {\r\n    filter: none;\r\n  }\r\n`;\r\n\r\nexport const MenuIconRight = styled(Icon)`\r\n  background-color: transparent;\r\n  margin-right: -5px;\r\n`;\r\n\r\nexport const MenuText = styled.span`\r\n  margin-left: 10px;\r\n  text-overflow: ellipsis;\r\n  overflow:hidden;\r\n  white-space:nowrap;\r\n`;\r\n\r\nexport const BackLink = styled(MenuLink)`\r\n  color: #858383;\r\n  animation: none;\r\n`;\r\n\r\nexport const CloseLink = styled(MenuLink)`\r\n  color: #858383;\r\n  animation: none;\r\n`;\r\n","// ! how to make similar hamburger, which dynamically pop up when there is no space\r\n// ! we can not grab an el with querySelector as we do in native JS\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport shortid from 'shortid';\r\n// import styled components\r\nimport {\r\n  NavStyled,\r\n  NavItemStyled,\r\n  Icon,\r\n  NavItemLi,\r\n  MenuContainer,\r\n  MenuLink,\r\n  MenuIcon,\r\n  MenuIconRight,\r\n  MenuText,\r\n  BackLink,\r\n  CloseLink,\r\n} from './NavStyledComponents';\r\n//import './nav.css';\r\n\r\n// import & set icons\r\nimport { FaApple } from 'react-icons/fa';\r\nimport { FaReact } from 'react-icons/fa';\r\nimport { FaRedhat } from 'react-icons/fa';\r\nimport { AiOutlinePlus } from 'react-icons/ai';\r\nimport { FaChevronRight as RightArrowIcon } from 'react-icons/fa';\r\n// can use alias with 'as'\r\nimport { FaChevronLeft as LeftArrowIcon } from 'react-icons/fa';\r\nimport { IoClose } from 'react-icons/io5';\r\n\r\nconst appleIcon = React.createElement(FaApple, {});\r\nconst reactIcon = React.createElement(FaReact, {});\r\nconst redHatIcon = React.createElement(FaRedhat, {});\r\nconst plusIcon = React.createElement(AiOutlinePlus, {});\r\n// can insert component as a JS variable instead of JSX tag\r\nconst closeIcon = React.createElement(IoClose, {});\r\n\r\n// menu structure\r\nconst navContent = [\r\n  {\r\n    navItem: true,\r\n    visible: true,\r\n    icon: appleIcon,\r\n    text: '',\r\n    menu: null,\r\n    id: shortid.generate(),\r\n  },\r\n  {\r\n    navItem: true,\r\n    visible: true,\r\n    icon: reactIcon,\r\n    text: '',\r\n    menu: null,\r\n    id: shortid.generate(),\r\n  },\r\n  {\r\n    navItem: true,\r\n    visible: true,\r\n    icon: redHatIcon,\r\n    text: '',\r\n    menu: {\r\n      visible: false,\r\n      menuItems: [\r\n        {\r\n          text: 'text',\r\n          iconLeft: '😇',\r\n          menu: null,\r\n          id: shortid.generate(),\r\n        },\r\n        {\r\n          text: 'text',\r\n          iconLeft: '',\r\n          menu: null,\r\n          id: shortid.generate(),\r\n        },\r\n        {\r\n          text: 'text',\r\n          iconLeft: '😇',\r\n          menu: null,\r\n          id: shortid.generate(),\r\n        },\r\n      ],\r\n    },\r\n    id: shortid.generate(),\r\n  },\r\n  {\r\n    navItem: true,\r\n    visible: true,\r\n    icon: plusIcon,\r\n    text: '',\r\n    menu: {\r\n      visible: true,\r\n      menuItems: [\r\n        {\r\n          text: 'text',\r\n          iconLeft: '😇',\r\n          menu: {\r\n            visible: false,\r\n            menuItems: [\r\n              {\r\n                text: 'text',\r\n                iconLeft: '😎',\r\n                menu: null,\r\n                id: shortid.generate(),\r\n              },\r\n              {\r\n                text: 'text',\r\n                iconLeft: '😎',\r\n                menu: null,\r\n                id: shortid.generate(),\r\n              },\r\n              {\r\n                text: 'text',\r\n                iconLeft: '😎',\r\n                menu: {\r\n                  visible: false,\r\n                  menuItems: [\r\n                    {\r\n                      text: 'long long long long long long long long text',\r\n                      iconLeft: '🥸',\r\n                      menu: null,\r\n                      id: shortid.generate(),\r\n                    },\r\n                    {\r\n                      text: 'text',\r\n                      iconLeft: '🥸',\r\n                      menu: null,\r\n                      id: shortid.generate(),\r\n                    },\r\n                    {\r\n                      text: 'text',\r\n                      iconLeft: '🥸',\r\n                      menu: null,\r\n                      id: shortid.generate(),\r\n                    },\r\n                    {\r\n                      text: 'text',\r\n                      iconLeft: '🥸',\r\n                      menu: null,\r\n                      id: shortid.generate(),\r\n                    },\r\n                    {\r\n                      text: 'text',\r\n                      iconLeft: '🥸',\r\n                      menu: null,\r\n                      id: shortid.generate(),\r\n                    },\r\n                    {\r\n                      text: 'text',\r\n                      iconLeft: '🥸',\r\n                      menu: null,\r\n                      id: shortid.generate(),\r\n                    },\r\n                    {\r\n                      text: 'text',\r\n                      iconLeft: '🥸',\r\n                      menu: null,\r\n                      id: shortid.generate(),\r\n                    },\r\n                  ],\r\n                },\r\n                id: shortid.generate(),\r\n              },\r\n            ],\r\n          },\r\n          id: shortid.generate(),\r\n        },\r\n        {\r\n          text: 'text',\r\n          iconLeft: '😇',\r\n          menu: null,\r\n          id: shortid.generate(),\r\n        },\r\n        {\r\n          text: 'text',\r\n          iconLeft: '😇',\r\n          menu: null,\r\n          id: shortid.generate(),\r\n        },\r\n        {\r\n          text: 'text',\r\n          iconLeft: '😇',\r\n          menu: null,\r\n          id: shortid.generate(),\r\n        },\r\n        {\r\n          text: 'text',\r\n          iconLeft: '😇',\r\n          menu: null,\r\n          id: shortid.generate(),\r\n        },\r\n      ],\r\n    },\r\n    id: shortid.generate(),\r\n  },\r\n];\r\n\r\n// var\r\nlet willOpenTopMenu = true;\r\n\r\n// navbar\r\nexport function NavBar() {\r\n  // states\r\n  const [openedMenuState, setOpenedMenuState] = useState(null);\r\n  const [showMenuContainerState, setShowMenuContainerState] = useState(false);\r\n\r\n  //#region HELPER FUNCS\r\n\r\n  // ! helper funcs are in the top component\r\n  // ! wish to move them up, but they use 'state'\r\n  // ! but 'state' can be created only inside a component\r\n\r\n  // update state to show menu\r\n  function showMenu(o) {\r\n    console.log('showMenu() func fired');\r\n    const isMenu = o.menu;\r\n\r\n    if (!isMenu) {\r\n      console.log('no menu inside navItem');\r\n      // if menu container is ON, remove it\r\n      if (showMenuContainerState) {\r\n        closeMenu();\r\n        return;\r\n      }\r\n\r\n      if (!showMenuContainerState) {\r\n        console.log('no showing menu, do nothing');\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (isMenu) {\r\n      const menu = o.menu;\r\n      willOpenTopMenu = true;\r\n      setShowMenuContainerState(true);\r\n      setOpenedMenuState({\r\n        ...menu,\r\n        underNavItemId: o.id,\r\n        // just opened first menu, no previous menus exist yet\r\n        prevMenu: [],\r\n      });\r\n      console.log('showed menu');\r\n    }\r\n  }\r\n\r\n  // update state to change menu\r\n  function changeMenu(o) {\r\n    console.log('changeMenu() func fired');\r\n\r\n    const isSubMenu = o.menu;\r\n\r\n    if (!isSubMenu) {\r\n      console.log('no sub-menu');\r\n      return;\r\n    }\r\n\r\n    console.log('fall one level down in menu');\r\n    willOpenTopMenu = false;\r\n    const subMenu = o.menu;\r\n    setOpenedMenuState({\r\n      ...subMenu,\r\n      underNavItemId: openedMenuState.underNavItemId,\r\n      prevMenu: [...openedMenuState.prevMenu, openedMenuState],\r\n    });\r\n  }\r\n\r\n  // update state to close menu\r\n  function closeMenu(e) {\r\n    console.log('closeMenu() func fired');\r\n\r\n    e?.stopPropagation();\r\n\r\n    if (showMenuContainerState) {\r\n      willOpenTopMenu = false;\r\n      setShowMenuContainerState(false);\r\n      setOpenedMenuState(null);\r\n      console.log('closed existing menu');\r\n    }\r\n  }\r\n\r\n  // assign previous menu obj from array to a state to re-render it\r\n  function prevMenu(e) {\r\n    console.log('prevMenu() func fired');\r\n\r\n    e?.stopPropagation();\r\n    willOpenTopMenu = false;\r\n    setOpenedMenuState(openedMenuState.prevMenu.pop());\r\n    console.log('clicked Back');\r\n  }\r\n\r\n  // add actions for Escape, Backspace, Enter, Arrows\r\n  function navKeyboardHandler(e) {\r\n    console.log('navKeyboardHandler() func fired');\r\n\r\n    const { key } = e;\r\n    //console.log(keyCode);\r\n    if (!openedMenuState) return;\r\n    const isNestedMenu = openedMenuState?.prevMenu?.length > 0;\r\n    isNestedMenu && key === 'Backspace' && prevMenu();\r\n    !isNestedMenu && key === 'Backspace' && closeMenu();\r\n    key === 'Escape' && closeMenu();\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region EVENT LISTENERS FOR WINDOW\r\n\r\n  // use events to navigate over menu with keys\r\n  // ! we listen for keys on Window, how to do it properly no clue\r\n  // ! how to disable an event listener on menu close && activate on menu pop-up\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', navKeyboardHandler);\r\n    // ! do not understand why func is returned\r\n    return () => window.removeEventListener('keydown', navKeyboardHandler);\r\n  }, [openedMenuState]);\r\n\r\n  // close menu if click outside\r\n  // ! nice to listen for it on menu popup and stop listening when menu is off\r\n  useEffect(() => {\r\n    window.addEventListener('click', closeMenu);\r\n    return () => window.removeEventListener('click', closeMenu);\r\n  }, [openedMenuState]);\r\n\r\n  //#endregion\r\n\r\n  console.log('NavBar rendered');\r\n  return (\r\n    // ? we throw props over & over again, is there more elegant way?\r\n    <NavStyled>\r\n      <NavItemStyled>\r\n        {navContent.map(\r\n          navObj =>\r\n            navObj.visible && (\r\n              <NavItem\r\n                navObj={navObj}\r\n                openedMenuState={openedMenuState}\r\n                prevMenu={prevMenu}\r\n                closeMenu={closeMenu}\r\n                showMenu={showMenu}\r\n                changeMenu={changeMenu}\r\n                showMenuContainerState={showMenuContainerState}\r\n                willOpenTopMenu={willOpenTopMenu}\r\n                key={navObj.id}\r\n              />\r\n            )\r\n        )}\r\n      </NavItemStyled>\r\n    </NavStyled>\r\n  );\r\n}\r\n\r\n// component inside the NavBar = icons\r\nexport function NavItem({\r\n  navObj,\r\n  openedMenuState,\r\n  prevMenu,\r\n  closeMenu,\r\n  showMenu,\r\n  changeMenu,\r\n  showMenuContainerState,\r\n  willOpenTopMenu,\r\n}) {\r\n  console.log('NavItem rendered');\r\n  return (\r\n    <NavItemLi>\r\n      <Icon\r\n        href=\"#\"\r\n        onClick={e => {\r\n          e.stopPropagation();\r\n          showMenu(navObj);\r\n        }}\r\n        // onMouseEnter={() => showMenu(navItem)}\r\n        // onMouseLeave={() => closeMenu()}\r\n      >\r\n        {navObj.icon}\r\n        {navObj.text}\r\n      </Icon>\r\n\r\n      {/* show only specific menu for NavItem id, otherwise all existing menus are shown */}\r\n      {showMenuContainerState &&\r\n        openedMenuState?.underNavItemId === navObj.id && (\r\n          <Menu\r\n            openedMenuState={openedMenuState}\r\n            prevMenu={prevMenu}\r\n            closeMenu={closeMenu}\r\n            changeMenu={changeMenu}\r\n            willOpenTopMenu={willOpenTopMenu}\r\n          />\r\n        )}\r\n    </NavItemLi>\r\n  );\r\n}\r\n\r\n// menu with 'back' & 'close' buttons on top & MenuItems\r\nexport function Menu({\r\n  openedMenuState,\r\n  prevMenu,\r\n  closeMenu,\r\n  changeMenu,\r\n  willOpenTopMenu,\r\n}) {\r\n  // ! every time we press item inside MenuContainer\r\n  // ! we update the openedMenuState with changeMenu() func\r\n  // ! changeMenu() func updates openedMenuState, which triggers re-render\r\n  // ! ... and we should get new MenuContainer, but no!!!\r\n  // ! if we color els in dev tool we can see els are not touched\r\n  // ! how come?\r\n  console.log('Menu rendered');\r\n  const isNestedMenu = openedMenuState?.prevMenu?.length > 0;\r\n  return (\r\n    <MenuContainer>\r\n      {isNestedMenu && <BackItem prevMenu={prevMenu} />}\r\n      {!isNestedMenu && <CloseItem closeMenu={closeMenu} />}\r\n      {openedMenuState.menuItems.map(menuItem => (\r\n        <MenuItem\r\n          menuItem={menuItem}\r\n          changeMenu={changeMenu}\r\n          key={menuItem.id}\r\n          willOpenTopMenu={willOpenTopMenu}\r\n        />\r\n      ))}\r\n    </MenuContainer>\r\n  );\r\n}\r\n\r\n// ! MenuContainer width: auto\r\n// ! want to apply transition, which requires fixed width\r\n// ! such manipulations are done by JS, but how to grab an element in React?\r\n\r\n// item inside menu\r\nexport function MenuItem({ menuItem, changeMenu, willOpenTopMenu }) {\r\n  console.log('MenuItem rendered');\r\n  const subMenuExists = menuItem.menu;\r\n  return (\r\n    <MenuLink\r\n      href=\"#1\"\r\n      willOpenTopMenu={willOpenTopMenu}\r\n      onClick={e => {\r\n        e?.stopPropagation();\r\n        changeMenu(menuItem);\r\n      }}\r\n    >\r\n      <span className=\"left-part\">\r\n        <Icon>{menuItem.iconLeft}</Icon>\r\n        <MenuText>{menuItem.text}</MenuText>\r\n      </span>\r\n\r\n      {subMenuExists && (\r\n        <span className=\"right-part\">\r\n          <MenuIconRight>\r\n            <RightArrowIcon />\r\n          </MenuIconRight>\r\n        </span>\r\n      )}\r\n    </MenuLink>\r\n  );\r\n}\r\n\r\nexport function BackItem({ prevMenu }) {\r\n  console.log('BackItem rendered');\r\n  return (\r\n    <BackLink href=\"#1\" onClick={prevMenu}>\r\n      <span className=\"left-part\">\r\n        <MenuIcon>\r\n          <LeftArrowIcon />\r\n        </MenuIcon>\r\n        <MenuText>Back</MenuText>\r\n      </span>\r\n    </BackLink>\r\n  );\r\n}\r\n\r\nexport function CloseItem({ closeMenu }) {\r\n  console.log('CloseItem rendered');\r\n  return (\r\n    <CloseLink href=\"#1\" onClick={closeMenu}>\r\n      <span className=\"left-part\">\r\n        <MenuIcon>{closeIcon}</MenuIcon>\r\n        <MenuText>Close</MenuText>\r\n      </span>\r\n    </CloseLink>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport function Title(props) {\r\n  return <H3Styled className=\"title\">{props.children}</H3Styled>;\r\n}\r\n\r\nconst H3Styled = styled.h3`\r\n  display: block;\r\n  margin-top: 40px;\r\n  margin-bottom: 20px;\r\n  font-size: 24px;\r\n  color: black;\r\n  text-align: center;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport function Section(props) {\r\n  return <SectionStyled className=\"section\">{props.children}</SectionStyled>;\r\n}\r\n\r\nconst SectionStyled = styled.section`\r\n  display: flex;\r\n  flex-direction: column; /* direction to stack els */\r\n  flex-wrap: nowrap; /* wrap or not */\r\n  justify-content: flex-start; /* align on main-axis */\r\n  align-items: left; /* align on cross-axis */\r\n  /* align-content: stretch; align the flex lines, similar to align-items, but aligns flex lines (group els as if they were one el) */\r\n  border: 1px solid #d2d2d2;\r\n  border-radius: 6px;\r\n  margin: 0 auto;\r\n  width: 90vw;\r\n  max-width: 800px;\r\n  font-size: 14px;\r\n  padding: 20px;\r\n  background: white;\r\n  color: black;\r\n  position: relative;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n  /* box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19); */\r\n`;","import styled from 'styled-components';\r\n\r\nexport function Date(props) {\r\n  return <TimeStyled>{props.children}</TimeStyled>;\r\n}\r\n\r\nconst TimeStyled = styled.time`\r\n  font-size: 10px;\r\n  position: absolute;\r\n  bottom: 7px;\r\n  right: 7px;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport function Num(props) {\r\n  return <SpanStyled>Post #{props.num}{props.children}</SpanStyled>;\r\n}\r\n\r\nconst SpanStyled = styled.span`\r\n  position: absolute;\r\n  color: #b0b0b0;\r\n  top: -20px;\r\n  right: 5px;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport function Tag(props) {\r\n\r\n  function setCaretToEnd(el) {\r\n    if (!el.childNodes.length) return;\r\n    let range = document.createRange();\r\n    let sel = window.getSelection();\r\n    const lastNode = el.childNodes[el.childNodes.length - 1];\r\n    range.setStart(lastNode, lastNode.length);\r\n    range.collapse(true);\r\n    sel.removeAllRanges();\r\n    sel.addRange(range);\r\n    el.focus();\r\n  }\r\n\r\n  function clickHandler(e) {\r\n    \r\n    e.stopPropagation();\r\n    // add tag to search input\r\n    const inputEl = document.getElementById('input');\r\n    const tagEl = e.target;\r\n    // @ts-ignore\r\n    const clonedTag = tagEl.cloneNode(true);\r\n    clonedTag.style.margin = '0px 5px';\r\n    clonedTag.classList.add('tag');\r\n    inputEl.appendChild(clonedTag);\r\n    inputEl.append('\\u00A0');\r\n    setCaretToEnd(inputEl);\r\n    inputEl.scrollLeft = 10000;\r\n    window.scroll({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: 'smooth',\r\n    });\r\n  }\r\n\r\n  return (\r\n    <DivStyled contentEditable={false} onClick={clickHandler}>\r\n      {props.tag}\r\n    </DivStyled>\r\n  );\r\n}\r\n\r\nconst DivStyled = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  top: -3px;\r\n  padding: 3px 8px 3px 20px;\r\n  margin: 5px;\r\n  background: grey;\r\n  border-radius: 3px;\r\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\r\n  color: white;\r\n  font-size: 12px;\r\n  font-family: 'Lucida Grande', 'Lucida Sans Unicode', Verdana, sans-serif;\r\n  text-decoration: none;\r\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  vertical-align: middle;\r\n\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 10px;\r\n    left: 8px;\r\n    width: 5px;\r\n    height: 5px;\r\n    border-radius: 50%;\r\n    background: #fff;\r\n    box-shadow: -1px -1px 2px rgba(0, 0, 0, 0.4);\r\n  }\r\n\r\n  &:hover {\r\n    background: #5a5a5a;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Tag } from './Tag';\r\n\r\nexport function Tags(props) {\r\n  const { tags } = props\r\n  return (\r\n    <DivStyled>\r\n      {tags.map(tag => (\r\n        <Tag tag={tag} key={tag} />\r\n      ))}\r\n    </DivStyled>\r\n  );\r\n}\r\n\r\nconst DivStyled = styled.div`\r\n  margin-top: 20px; ;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport function Text(props) {\r\n  return <PStyled>{props.children}</PStyled>;\r\n}\r\n\r\nconst PStyled = styled.p`\r\n  margin-top: 20px;\r\n  margin-bottom: 10px;\r\n  align-self: flex-start;\r\n  color: #3a3a3a;\r\n`;","import styled from 'styled-components';\r\n\r\nexport function Output(props) {\r\n  return <DivStyled>{props.children}</DivStyled>;\r\n}\r\n\r\nconst DivStyled = styled.a`\r\n  background: #e9f4fb;\r\n  padding: 0.5em;\r\n  margin: 20px 0px;\r\n  overflow: auto;\r\n  border-radius: 4px;\r\n`;\r\n","import Prism from 'prismjs';\r\nimport { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport function Code(props) {\r\n  useEffect(() => {\r\n    Prism.plugins.NormalizeWhitespace.setDefaults({\r\n      'remove-trailing': true,\r\n      'remove-indent': true,\r\n      'left-trim': true,\r\n      'right-trim': true,\r\n      'break-lines': 600, //max number of characters in each line before break\r\n    });\r\n\r\n    // Prism.highlightAll();\r\n  }, []);\r\n\r\n  return (\r\n    <pre>\r\n      <code className=\"language-jsx\">{props.children}</code>\r\n    </pre>\r\n  );\r\n}","// import styled, { keyframes, css } from 'styled-components';\r\nimport styled from 'styled-components/macro';\r\n// import './styles.css';\r\nimport 'prismjs/components/prism-jsx';\r\nimport 'prismjs/plugins/normalize-whitespace/prism-normalize-whitespace';\r\nimport './prism.css';\r\nimport uuid from 'react-uuid';\r\nimport { Title } from './Title.js';\r\nimport { Section } from './Section.js';\r\nimport { Date } from './Date.js';\r\nimport { Num } from './Num.js';\r\nimport { Tags } from './Tags.js';\r\nimport { Text } from './Text.js';\r\nimport { Output } from './Output.js';\r\nimport { Code } from './Code.js';\r\n\r\nexport function jsxesFromPostParts(post) {\r\n  return post.postParts.map((el, index) => {\r\n    const id = post.id+'_part_'+index\r\n    if (el.type === 'text') return <Text key={id}>{el.val}</Text>;\r\n    if (el.type === 'code') return <Code key={id}>{el.val}</Code>;\r\n    if (el.type === 'output') return <Output key={id}>{el.val}</Output>;\r\n    return <div key={id}>{el.val}</div>;\r\n  });\r\n}\r\n\r\nexport function Post(props) {\r\n  const post = props.post;\r\n  const title = post.title;\r\n  const num = post.sequentialNum;\r\n  const tags = post.tagsArr;\r\n  const date = post.date;\r\n\r\n  return (\r\n    <article className=\"post\">\r\n      <Title>{title}</Title>\r\n      <Section>\r\n        {jsxesFromPostParts(post)}\r\n        <Num>{num}</Num>\r\n        <Tags tags={tags}/>\r\n        <Date>{date}</Date>\r\n      </Section>\r\n    </article>\r\n  );\r\n}","import Mark from 'mark.js';\r\nimport React, { useEffect, useState } from 'react';\r\nimport uuid from 'react-uuid';\r\nimport styled from 'styled-components';\r\nimport { Tag } from '../post/Tag';\r\n\r\nconst FormStyled = styled.form`\r\n  display: inline-flex;\r\n  justify-content: space-between;\r\n  align-items: stretch;\r\n\r\n  margin: 0 auto;\r\n  width: 90vw;\r\n\r\n  margin-top: 30px;\r\n  height: 40px;\r\n  max-width: 500px;\r\n  position: relative;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n\r\n  z-index: 1;\r\n\r\n  div#input {\r\n    flex-grow: 1;\r\n    padding: 5px;\r\n    padding-right: 40px;\r\n    font-size: 20px;\r\n    border-width: 2px;\r\n    border-color: #c0c0c0;\r\n    border-style: solid;\r\n    border-radius: 4px;\r\n    outline-style: none;\r\n    width: auto;\r\n    min-width: 0; /* for shrinking */\r\n    background-color: white;\r\n    color: black;\r\n    white-space: nowrap;\r\n    overflow-x: auto;\r\n    overflow-y: hidden;\r\n\r\n    &:hover {\r\n      border-color: grey;\r\n      transition: border-color 200ms ease;\r\n    }\r\n\r\n    &:focus {\r\n      border-color: rgba(0, 157, 214, 1);\r\n      margin: 0px;\r\n    }\r\n\r\n    &[contenteditable]:empty:before {\r\n      content: attr(placeholder);\r\n      color: #bfbfbf;\r\n    }\r\n\r\n    &::-webkit-scrollbar {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  button {\r\n    flex-grow: 0;\r\n    font-size: 20px;\r\n    border-radius: 4px;\r\n    outline-style: none;\r\n    border-style: solid;\r\n    border-color: #c0c0c0;\r\n    width: auto;\r\n    padding: 0px 10px;\r\n    margin-left: 10px;\r\n    cursor: pointer;\r\n\r\n    &:hover,\r\n    &:focus {\r\n      border-color: grey;\r\n      transition: border-color 200ms ease;\r\n    }\r\n  }\r\n\r\n  .close {\r\n    border: none;\r\n    position: absolute;\r\n    width: 32px;\r\n    height: 32px;\r\n    right: 100px;\r\n    top: 4px;\r\n    background-color: transparent;\r\n  }\r\n\r\n  .close:before,\r\n  .close:after {\r\n    content: ' ';\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    height: 20px;\r\n    width: 4px;\r\n    background-color: #dcdcdc5c;\r\n  }\r\n  .close:hover:before,\r\n  .close:hover:after {\r\n    background-color: #ff6565bd;\r\n  }\r\n\r\n  .close::before {\r\n    transform: translate(-50%, -50%) rotate(45deg);\r\n  }\r\n  .close::after {\r\n    transform: translate(-50%, -50%) rotate(-45deg);\r\n  }\r\n\r\n  .found-posts {\r\n    position: absolute;\r\n    top: 12px;\r\n    right: 0px;\r\n    left: 0px;\r\n    color: grey;\r\n    text-align: center;\r\n    cursor: pointer;\r\n    transform: translateX(-50%);\r\n    left: 50%;\r\n\r\n    &:hover {\r\n      color: #1c1c1c;\r\n    }\r\n  }\r\n`;\r\n\r\nconst SearchPreviewContainer = styled.div`\r\n  position: absolute;\r\n  top: 50px;\r\n  left: 0px;\r\n  right: 0px;\r\n  border-radius: 4px;\r\n  border-style: solid;\r\n  border-width: 1px;\r\n  border-color: #c0c0c0;\r\n  padding: 35px 10px 10px 10px;\r\n  background-color: #f6f6f6;\r\n\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n`;\r\n\r\nconst SearchPreviewStyled = styled.div`\r\n  background-color: #e8e8e8;\r\n  margin: 10px 0px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  color: black;\r\n  padding: 5px;\r\n  max-height: 92px;\r\n  overflow-y: auto;\r\n\r\n  &:hover {\r\n    background-color: lightgrey;\r\n  }\r\n\r\n  h4 {\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  summary {\r\n    color: #3f3f3f;\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nfunction SearchPreviewItem(props) {\r\n  return (\r\n    <SearchPreviewStyled className=\"post-preview\">\r\n      <h4>{props.title}</h4>\r\n      <summary>{props.summary}</summary>\r\n    </SearchPreviewStyled>\r\n  );\r\n}\r\n\r\nconst TagsContainerStyled = styled(SearchPreviewStyled)`\r\n  max-height: 110px;\r\n  height: auto;\r\n  padding: 7px;\r\n  padding-bottom: 3px;\r\n  &:hover {\r\n    background-color: #e8e8e8;\r\n  }\r\n`;\r\n\r\nfunction TagsContainer({ state, setState }) {\r\n  const { foundTags } = state;\r\n  return (\r\n    <TagsContainerStyled>\r\n      {foundTags.map(tag => (\r\n        <Tag tag = {tag} key={tag} state={state} setState={setState}>\r\n          {tag}\r\n        </Tag>\r\n      ))}\r\n    </TagsContainerStyled>\r\n  );\r\n}\r\n\r\nfunction RemoveFoundPosts({\r\n  setState,\r\n  closeFoundPostsContainer,\r\n  foundPostsNum,\r\n}) {\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        textAlign: 'center',\r\n        marginTop: '15px',\r\n        position: 'absolute',\r\n        top: '30px',\r\n        width: '100%',\r\n      }}\r\n    >\r\n      <span style={{ color: 'grey' }}>\r\n        {!!foundPostsNum && foundPostsNum} \r\n        {!!foundPostsNum && foundPostsNum && ' post'} \r\n        {!!foundPostsNum && (foundPostsNum > 1 ? 's are ' : ' is ') }\r\n        {!foundPostsNum && 'Not '}\r\n        found\r\n      </span>\r\n      <span\r\n        style={{\r\n          color: '#f99191',\r\n          fontSize: '20px',\r\n          fontWeight: 900,\r\n          marginLeft: '10px',\r\n          cursor: 'pointer',\r\n        }}\r\n        onClick={closeFoundPostsContainer}\r\n      >\r\n        ⨉\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function Search({\r\n  state,\r\n  setState,\r\n  returnUpdatedState,\r\n  ...props\r\n}) {\r\n  const {\r\n    posts,\r\n    tags,\r\n    inputVal,\r\n    inputWords,\r\n    inputTags,\r\n    foundPosts,\r\n    postsOnDisplay,\r\n    foundTags,\r\n    openSearchMenu,\r\n    showFoundPosts,\r\n    showRemoveFoundPosts,\r\n  } = state;\r\n\r\n  function highlightTextInPreview(words) {\r\n    const context = document.querySelectorAll('.post-preview');\r\n    const instance = new Mark(context);\r\n    instance.unmark();\r\n    instance.mark(words);\r\n  }\r\n\r\n  useEffect(() => {\r\n    highlightTextInPreview(inputWords);\r\n  });\r\n\r\n  function FoundPosts() {\r\n    if (foundPosts.length === 0)\r\n      return <span className=\"found-posts\">Not found</span>;\r\n    const ending = foundPosts.length !== 1 ? 's' : '';\r\n    return (\r\n      <span className=\"found-posts\" onClick={searchBtnClickHandler}>\r\n        Show {ending ? 'all' : ''} {foundPosts.length} post{ending}\r\n      </span>\r\n    );\r\n  }\r\n\r\n  function searchBtnClickHandler(e) {\r\n    e.preventDefault();\r\n\r\n    if (document.querySelector('#input').innerText.length === 0) {\r\n      closeFoundPostsContainer();\r\n      return;\r\n    }\r\n\r\n    setState({\r\n      ...state,\r\n      showRemoveFoundPosts: true,\r\n      openSearchMenu: false,\r\n      postsOnDisplay: foundPosts,\r\n    });\r\n  }\r\n\r\n  function closeFoundPostsContainer() {\r\n    document.querySelector('#input').innerText = '';\r\n    setState({\r\n      ...state,\r\n      ...returnUpdatedState(),\r\n      // showRemoveFoundPosts: false,\r\n      postsOnDisplay: posts,\r\n      openSearchMenu: false,\r\n    });\r\n  }\r\n\r\n  function debounce(callback, wait) {\r\n    let timeout;\r\n    return (...args) => {\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(function () {\r\n        callback.apply(this, args);\r\n      }, wait);\r\n    };\r\n  }\r\n\r\n  return (\r\n    <FormStyled\r\n      // do not close dropdown search menu if clicked inside\r\n      onClick={e => e.stopPropagation()}\r\n    >\r\n      <div\r\n        id=\"input\"\r\n        contentEditable={true}\r\n        placeholder=\"Search\"\r\n        onFocus={e => {\r\n          const updateState = returnUpdatedState(e);\r\n          setState({\r\n            ...state,\r\n            ...updateState,\r\n            openSearchMenu: true,\r\n          });\r\n        }}\r\n        onInput={debounce(e => {\r\n          const updateState = returnUpdatedState(e);\r\n          setState({\r\n            ...state,\r\n            ...updateState,\r\n            openSearchMenu: true,\r\n          });\r\n          e.target.scrollLeft = 10000;\r\n        }, 300)}\r\n        onKeyDown={e => {\r\n          if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            searchBtnClickHandler(e);\r\n            return;\r\n          }\r\n\r\n          if (e.key === 'Escape') {\r\n            e.preventDefault();\r\n            closeFoundPostsContainer();\r\n            return;\r\n          }\r\n        }}\r\n      ></div>\r\n\r\n      <button\r\n        className=\"close\"\r\n        onClick={e => {\r\n          e.preventDefault();\r\n          closeFoundPostsContainer();\r\n        }}\r\n      />\r\n\r\n      <button onClick={searchBtnClickHandler}>Search</button>\r\n\r\n      {showRemoveFoundPosts && (\r\n        <RemoveFoundPosts\r\n          foundPostsNum={foundPosts.length}\r\n          setState={setState}\r\n          closeFoundPostsContainer={closeFoundPostsContainer}\r\n        />\r\n      )}\r\n\r\n      {openSearchMenu && (\r\n        <SearchPreviewContainer>\r\n          <FoundPosts />\r\n          {!!foundTags.length && (\r\n            <TagsContainer state={state} setState={setState} />\r\n          )}\r\n          {!!foundPosts.length &&\r\n            inputVal &&\r\n            foundPosts.map(o => {\r\n              return (\r\n                <SearchPreviewItem\r\n                  title={o.titleTxt}\r\n                  summary={foundPosts.length < 10 && o.postTxt}\r\n                  key={o.id + '_preview'}\r\n                />\r\n              );\r\n            })}\r\n        </SearchPreviewContainer>\r\n      )}\r\n    </FormStyled>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nconst btnCss = {\r\n  padding: '5px 20px',\r\n  margin: '10px 10px 0px 0px',\r\n  cursor: 'pointer',\r\n};\r\n\r\nclass ClassComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      likes: 0,\r\n    };\r\n    this.increment = this.increment.bind(this);\r\n    this.decrement = this.decrement.bind(this);\r\n  }\r\n\r\n  increment() {\r\n    this.setState({ likes: this.state.likes + 1 });\r\n  }\r\n\r\n  decrement() {\r\n    this.setState({ likes: this.state.likes - 1 });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>{this.state.likes}</h1>\r\n        <button onClick={this.increment} style={btnCss}>\r\n          +1\r\n        </button>\r\n        <button onClick={this.decrement} style={btnCss}>\r\n          -1\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst toRender1 = <ClassComponent />\r\n\r\nfunction FunctionComponent() {\r\n  const [likes, setLikes] = useState(0);\r\n\r\n  const increment = () => setLikes(likes + 1);\r\n  const decrement = () => setLikes(likes - 1);\r\n\r\n  return (\r\n    <div>\r\n      <h1>{likes}</h1>\r\n      <button onClick={increment} style={btnCss}>\r\n        +1\r\n      </button>\r\n      <button onClick={decrement} style={btnCss}>\r\n        -1\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst toRender2 = <FunctionComponent />\r\n\r\nexport const classVsFunctionComponent = {\r\n  title: <>Class vs Function component</>,\r\n  date: '2021.09.26',\r\n  tagsArr: ['react', 'class component', 'function component', 'basics'],\r\n  postParts: [\r\n    {\r\n      type: 'text',\r\n      val: <>Class component</>,\r\n    },\r\n    {\r\n      type: 'code',\r\n      val: `\r\n        import React, { useState } from 'react';\r\n        \r\n        const btnCss = {\r\n          padding: '5px 20px',\r\n          margin: '10px 10px 0px 0px',\r\n          cursor: 'pointer',\r\n        };\r\n\r\n        class ClassComponent extends React.Component {\r\n          constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n              likes: 0,\r\n            };\r\n            this.increment = this.increment.bind(this);\r\n            this.decrement = this.decrement.bind(this);\r\n          }\r\n        \r\n          increment() {\r\n            this.setState({ likes: this.state.likes + 1 });\r\n          }\r\n        \r\n          decrement() {\r\n            this.setState({ likes: this.state.likes - 1 });\r\n          }\r\n        \r\n          render() {\r\n            return (\r\n              <div>\r\n                <h1>{this.state.likes}</h1>\r\n                <button onClick={this.increment} style={btnCss}>\r\n                  +1\r\n                </button>\r\n                <button onClick={this.decrement} style={btnCss}>\r\n                  -1\r\n                </button>\r\n              </div>\r\n            );\r\n          }\r\n        }\r\n\r\n        const toRender1 = <ClassComponent />\r\n      `\r\n    },\r\n    {\r\n      type: 'output',\r\n      val: toRender1,\r\n    },\r\n    {\r\n      type: 'text',\r\n      val: \"Function component\",\r\n    },\r\n    {\r\n      type: 'code',\r\n      val:  `\r\n        import React, { useState } from 'react';\r\n        \r\n        const btnCss = {\r\n          padding: '5px 20px',\r\n          margin: '10px 10px 0px 0px',\r\n          cursor: 'pointer',\r\n        };\r\n\r\n        function FunctionComponent() {\r\n          const [likes, setLikes] = useState(0);\r\n        \r\n          const increment = () => setLikes(likes + 1);\r\n          const decrement = () => setLikes(likes - 1);\r\n        \r\n          return (\r\n            <div>\r\n              <h1>{likes}</h1>\r\n              <button onClick={increment} style={btnCss}>\r\n                +1\r\n              </button>\r\n              <button onClick={decrement} style={btnCss}>\r\n                -1\r\n              </button>\r\n            </div>\r\n          );\r\n        }\r\n\r\n        const toRender2 = <FunctionComponent />\r\n      `\r\n    },\r\n    {\r\n      type: 'output',\r\n      val: toRender2,\r\n    },\r\n    {\r\n      type: 'text',\r\n      val: \"Function component is a modern way to write a component in react.\"\r\n    }\r\n\r\n  ],\r\n};","import styled from 'styled-components';\r\n\r\nexport function CodeSpan(props) {\r\n  return (\r\n      <code className=\"language-javascript\">{props.children}</code>\r\n  );\r\n}","import styled from 'styled-components';\r\n\r\nexport function Link(props) {\r\n  return (\r\n    <AStyled href={props.link} target=\"_blank\">\r\n      {props.text}\r\n      {props.children}\r\n    </AStyled>\r\n  );\r\n}\r\n\r\nconst AStyled = styled.a`\r\n  cursor: pointer;\r\n  color: #0098f7;\r\n  text-decoration: none;\r\n`;\r\n\r\n","import React, { useRef, useState } from 'react';\r\nimport { CodeSpan } from '../../components/post/CodeSpan';\r\nimport { Link } from '../../components/post/Link';\r\n\r\nfunction ControlledInput() {\r\n  const [inpVal, setInpVal] = useState('initial text');\r\n\r\n  return (\r\n    <>\r\n      <h1>{inpVal}</h1>\r\n      <input\r\n        type=\"text\"\r\n        value={inpVal}\r\n        onChange={e => setInpVal(e.target.value)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nconst toRender1 = <ControlledInput />\r\n\r\nfunction UncontrolledInput() {\r\n  const [inpVal, setInpVal] = useState('initial text');\r\n  const inpRef = useRef('initial text')\r\n\r\n  return (\r\n    <>\r\n      <h1>{inpVal}</h1>\r\n      <input\r\n        ref={inpRef}\r\n        type=\"text\"\r\n        value={inpVal}\r\n        onChange={() => setInpVal(inpRef.current.value)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nconst toRender2 = <UncontrolledInput />\r\n\r\nexport const controlledVsUncontrolledComponent = {\r\n  title: 'Controlled vs uncontrolled component',\r\n  date: '2021.09.26',\r\n  tagsArr: ['react', 'useRef', 'useState', 'input', 'controlled', 'uncontrolled', 'basics', 'hook', 'DOM'],\r\n  postParts: [\r\n    {\r\n      type: 'text',\r\n      val: (\r\n        <>\r\n          <strong>Controlled component</strong> data is handled \r\n          by a React component via <CodeSpan>useState()</CodeSpan> {' '}\r\n          <Link link={'https://reactjs.org/docs/hooks-reference.html#usestate'}>hook</Link>. \r\n          Event handler takes care of a state update.\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      type: 'code',\r\n      val: `\r\n        import React, { useRef, useState } from 'react';\r\n\r\n        function ControlledInput() {\r\n          const [inpVal, setInpVal] = useState('initial text');\r\n\r\n          return (\r\n            <>\r\n              <h1>{inpVal}</h1>\r\n              <input\r\n                type=\"text\"\r\n                value={inpVal}\r\n                onChange={e => setInpVal(e.target.value)}\r\n              />\r\n            </>\r\n          );\r\n        }\r\n\r\n        const toRender1 = <ControlledInput />\r\n      `,\r\n    },\r\n    {\r\n      type: 'output',\r\n      val: toRender1\r\n    },\r\n    {\r\n      type: 'text',\r\n      val: (\r\n        <>\r\n          <strong>Uncontrolled component</strong> data is handled by the DOM itself. \r\n          We need to use <CodeSpan>useRef()</CodeSpan> {' '}\r\n          <Link link={'https://reactjs.org/docs/hooks-reference.html#useref'}>hook</Link> to get form values from the DOM.\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      type: 'code',\r\n      val: `\r\n        import React, { useRef, useState } from 'react';\r\n\r\n        function UncontrolledInput() {\r\n          const [inpVal, setInpVal] = useState('initial text');\r\n          const inpRef = useRef('initial text')\r\n        \r\n          return (\r\n            <>\r\n              <h1>{inpVal}</h1>\r\n              <input\r\n                ref={inpRef}\r\n                type=\"text\"\r\n                value={inpVal}\r\n                onChange={() => setInpVal(inpRef.current.value)}\r\n              />\r\n            </>\r\n          );\r\n        }\r\n\r\n        const toRender2 = <UncontrolledInput />\r\n      `,\r\n    },\r\n    {\r\n      type: 'text',\r\n      val: (\r\n        <>\r\n          <CodeSpan>inpRef.current</CodeSpan> {' '} refers to the DOM element.\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      type: 'output',\r\n      val: toRender2\r\n    },\r\n    \r\n  ],\r\n};","import React from 'react';\r\nimport { CodeSpan } from '../../components/post/CodeSpan';\r\nimport { Link } from '../../components/post/Link';\r\n\r\nfunction ParentComponent(props) {\r\n  return (\r\n    <>\r\n      Props of parent component: {JSON.stringify(props)} <br/>\r\n      <ChildComponent {...props} />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction ChildComponent(props) {\r\n  return (\r\n    <> \r\n      Props of child component: {JSON.stringify(props)}\r\n    </>\r\n  );\r\n}\r\n\r\nconst toRender = <ParentComponent prop1='hello' prop2='my' prop3='friend' />\r\n\r\nexport const forwardLotsOfProps = {\r\n  title: 'Forward lots of props',\r\n  date: '2021.09.29',\r\n  tagsArr: ['react', 'props', 'component', 'basics'],\r\n  postParts: [\r\n    {\r\n      type: 'text',\r\n      val: \r\n        <>\r\n          Sometimes we need to pass tons of props from a component to a component.\r\n          That can create a mess.<br/><br/>\r\n          With spread {<CodeSpan>...</CodeSpan>} operator we can pass any number of props at ones.\r\n        </>\r\n      ,\r\n    },\r\n    {\r\n      type: 'code',\r\n      val: `\r\n        function ParentComponent(props) {\r\n          return (\r\n            <>\r\n              Props of parent component: {JSON.stringify(props)} <br/>\r\n              <ChildComponent {...props} />\r\n            </>\r\n          );\r\n        }\r\n        \r\n        function ChildComponent(props) {\r\n          return (\r\n            <> \r\n              Props of child component: {JSON.stringify(props)}\r\n            </>\r\n          );\r\n        }\r\n\r\n        const toRender = <ParentComponent prop1='hello' prop2='my' prop3='friend' />\r\n      `,\r\n    },\r\n    {\r\n      type: 'output',\r\n      val: toRender,\r\n    },\r\n\r\n  \r\n  ],\r\n};\r\n","import React from 'react';\r\nimport { CodeSpan } from '../../components/post/CodeSpan';\r\nimport { Link } from '../../components/post/Link';\r\n\r\nconst Input = React.forwardRef((props, ref) => (\r\n  <input ref={ref} {...props} />\r\n));\r\n\r\nfunction InputWithFocus() {\r\n  const ref = React.useRef();\r\n  const focus = () => ref.current.focus();\r\n\r\n  return (\r\n    <>\r\n      <Input\r\n        ref={ref}\r\n        placeholder=\"my input\"\r\n        style={{ padding: '5px', margin: '5px' }}\r\n      />\r\n      <button onClick={focus}>Focus</button>\r\n    </>\r\n  );\r\n}\r\n\r\nconst toRender = <InputWithFocus />\r\n\r\nexport const forwardRef = {\r\n  title: (\r\n    <>\r\n      <CodeSpan>forwardRef()</CodeSpan> & input + focus\r\n    </>\r\n  ),\r\n  date: '2021.09.26',\r\n  tagsArr: ['react', 'useRef', 'forwardRef', 'input', 'focus', 'basics', 'hook', 'DOM'],\r\n  postParts: [\r\n    {\r\n      type: 'text',\r\n      val: <>\r\n        To pass DOM element to a custom component via <CodeSpan>React.useRef()</CodeSpan> {' '}\r\n        we need to wrap a component into <CodeSpan>React.forwardRef()</CodeSpan> {' '}\r\n        <Link link={'https://reactjs.org/docs/refs-and-the-dom.html#refs-and-function-components'} text={'function'}/>.\r\n      </>,\r\n    },\r\n    {\r\n      type: 'code',\r\n      val: `\r\n        const Input = React.forwardRef((props, ref) => (\r\n          <input ref={ref} {...props} />\r\n        ));\r\n        \r\n        function InputWithFocus() {\r\n          const ref = React.useRef();\r\n          const focus = () => ref.current.focus();\r\n        \r\n          return (\r\n            <>\r\n              <Input\r\n                ref={ref}\r\n                placeholder=\"my input\"\r\n                style={{ padding: '5px', margin: '5px' }}\r\n              />\r\n              <button onClick={focus}>Focus</button>\r\n            </>\r\n          );\r\n        }\r\n\r\n        const toRender = <InputWithFocus />\r\n      `,\r\n    },\r\n    {\r\n      type: 'output',\r\n      val: toRender,\r\n    },\r\n  ],\r\n};\r\n","import React, { useState } from 'react';\r\nimport { CodeSpan } from '../../components/post/CodeSpan';\r\nimport { Link } from '../../components/post/Link';\r\n\r\nconst greenCss = { color: 'green' }\r\nconst redCss = { color: 'red' }\r\nconst marginCss = { margin: '10px' }\r\n\r\nfunction StateIsImmutable() {\r\n  const [state, setState] = useState([1, 2, 3]);\r\n  return (\r\n    <div>\r\n      <span>State value: </span> <span style={greenCss}>{JSON.stringify(state)}</span>\r\n      <div style={marginCss}>\r\n        <button\r\n          onClick={() => {\r\n            state.push(state[state.length - 1] + 1); \r\n            // incorrect\r\n            // state is updated, but not rendered\r\n\r\n            console.log(state)\r\n          }}\r\n        >\r\n          Add value directly to the state array\r\n        </button>\r\n        <span style={{...marginCss, ...redCss}}></span>\r\n      </div>\r\n      <div style={marginCss}>\r\n        <button\r\n          onClick={() => {\r\n            setState([...state, state[state.length - 1] + 1]);\r\n            console.log(state);\r\n          }}\r\n        >\r\n          Assign to the state a copy of array with additional value\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst toRender = <StateIsImmutable />\r\n\r\nexport const immutableState = {\r\n  title: 'React state is immutable',\r\n  date: '2021.09.28',\r\n  tagsArr: ['react', 'state', 'useState', 'immutable', 'basics', 'hook'],\r\n  postParts: [\r\n    {\r\n      type: 'text',\r\n      val: (\r\n        <>\r\n          If you mutate data like <CodeSpan>myData.a.b.push(10)</CodeSpan>{' '}\r\n          there is no way of determining which data has changed since the\r\n          previous copy has been overwritten\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      type: 'text',\r\n      val: (\r\n        <>\r\n          Instead, you need to create a new copy of{' '}\r\n          <CodeSpan>myData</CodeSpan>\r\n          and change only the parts of it that need to be changed. For state\r\n          data React can compare the old copy with the new one.\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      type: 'code',\r\n      val: \r\n      `\r\n        import React, { useState } from 'react';\r\n\r\n        const greenCss = { color: 'green' }\r\n        const redCss = { color: 'red' }\r\n        const marginCss = { margin: '10px' }\r\n\r\n        function StateIsImmutable() {\r\n          const [state, setState] = useState([1, 2, 3]);\r\n          return (\r\n            <div>\r\n              <span>State value: </span> <span style={greenCss}>{JSON.stringify(state)}</span>\r\n              <div style={marginCss}>\r\n                <button\r\n                  onClick={() => {\r\n                    state.push(state[state.length - 1] + 1); \r\n                    // incorrect\r\n                    // state is updated, but not rendered\r\n                    console.log(state)\r\n                  }}\r\n                >\r\n                  Add value directly to the state array\r\n                </button>\r\n                <span style={{...marginCss, ...redCss}}>state is updated, but not rendered!</span>\r\n              </div>\r\n              <div style={marginCss}>\r\n                <button\r\n                  onClick={() => {\r\n                    setState([...state, state[state.length - 1] + 1]);\r\n                    console.log(state)\r\n                  }}\r\n                >\r\n                  Assign to the state a copy of array with additional value\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        }\r\n\r\n        const toRender = <StateIsImmutable />\r\n      `,\r\n    },\r\n    {\r\n      type: 'output',\r\n      val: toRender,\r\n    },\r\n  ],\r\n};\r\n","import React from 'react';\r\nimport { CodeSpan } from '../../components/post/CodeSpan';\r\nimport { Link } from '../../components/post/Link';\r\n\r\nexport const jsVsJsx = {\r\n  title: 'JS vs JSX',\r\n  date: '2021.09.23',\r\n  tagsArr: ['react', 'jsx', 'createElement', 'basics'],\r\n  postParts: [\r\n    {\r\n      type: 'text',\r\n      val: <>\r\n        In React we generate html by javascript. We can use \r\n        <CodeSpan>React.createElement()</CodeSpan> function from the React \r\n        library to add an HTML element or we can use JSX syntax.\r\n      </>\r\n    },\r\n    { \r\n      type: 'text', \r\n      val: <>\r\n        Native <span style={{ fontWeight: 600 }}> JS </span>\r\n      </>  \r\n    },\r\n    { \r\n      type: 'code', \r\n      val: `\r\n        import React from 'react';\r\n\r\n        React.createElement('div', {},\r\n          React.createElement(\r\n            'button', \r\n            {\r\n              disabled: false,\r\n              onClick: () => {\r\n                alert('clicked')\r\n              } \r\n            }, \r\n            'Click me'\r\n          )\r\n        )\r\n      `\r\n    },\r\n    { \r\n      type: 'output', \r\n      val: React.createElement('div', {},\r\n        React.createElement(\r\n          'button', \r\n          {\r\n            disabled: false,\r\n            onClick: () => {\r\n              alert('clicked')\r\n            }\r\n          }, \r\n          'Click me'\r\n        )\r\n      ) \r\n    },\r\n    { \r\n      type: 'text', \r\n      val: 'JSX' \r\n    },\r\n    { \r\n      type: 'code', \r\n      val: `\r\n        import React from 'react';\r\n\r\n        <div>\r\n          <button \r\n            disabled={false} \r\n            onClick={() => alert('clicked')}\r\n          >\r\n            Click me\r\n          </button>\r\n        </div>\r\n      ` \r\n    },\r\n    { \r\n      type: 'output', \r\n      val: \r\n        <div>\r\n          <button \r\n            disabled={false} \r\n            onClick={() => alert('clicked')}\r\n          >\r\n            Click me\r\n          </button>\r\n        </div>\r\n    },\r\n  ],\r\n};","import React from 'react';\r\nimport { CodeSpan } from '../../components/post/CodeSpan';\r\nimport { Link } from '../../components/post/Link';\r\n\r\nfunction Component1(props) {\r\n  return (\r\n    <div>\r\n      props.prop1 = {props.prop1} <br/>\r\n      props.prop2 = {props.prop2} <br/>\r\n      props.prop3 = {props.prop3} <br/>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst toRender1 = <Component1 prop1='hello' prop2='my' prop3='friend'/>\r\n\r\nfunction Component2({ prop1, prop2, prop3 }) {\r\n  return (\r\n    <div>\r\n      prop1 = {prop1} <br/>\r\n      prop2 = {prop2} <br/>\r\n      prop3 = {prop3} <br/>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst toRender2 = <Component2 prop1='hello' prop2='my' prop3='friend'/>\r\n\r\nfunction Component3({ prop1, prop2, prop3 }) {\r\n  return (\r\n    <div>\r\n      prop1 = {prop1} <br/>\r\n      prop2 = {prop2} <br/>\r\n      prop3 = {prop3} <br/>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst userProps = {\r\n  prop1: 'Hello',\r\n  prop2: 'my',\r\n  prop3: 'friend',\r\n}\r\n\r\nconst toRender3 = <Component3 {...userProps}/>\r\n\r\nexport const passProps = {\r\n  title: 'How to pass props',\r\n  date: '2021.09.29',\r\n  tagsArr: ['react', 'props', 'component', 'basics'],\r\n  postParts: [\r\n    {\r\n      type: 'text',\r\n      val: (\r\n        <>\r\n          We can pass props into a component and take them from the <CodeSpan>props</CodeSpan> object.\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      type: 'code',\r\n      val: `\r\n        function Component1(props) {\r\n          return (\r\n            <div>\r\n              props.prop1 = {props.prop1} <br/> // hello\r\n              props.prop2 = {props.prop2} <br/> // my\r\n              props.prop3 = {props.prop3} <br/> // friend\r\n            </div>\r\n          );\r\n        }\r\n\r\n        const toRender1 = <Component1 prop1='hello' prop2='my' prop3='friend'/>\r\n      `,\r\n    },\r\n    {\r\n      type: 'code',\r\n      val: `\r\n        <Component1 prop1='hello' prop2='my' prop3='friend' />\r\n      `,\r\n    },\r\n    {\r\n      type: 'output',\r\n      val: toRender1,\r\n    },\r\n\r\n    {\r\n      type: 'text',\r\n      val: (\r\n        <>\r\n          <CodeSpan>props</CodeSpan> object can be destructured in a component.\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      type: 'code',\r\n      val: `\r\n        function Component2({ prop1, prop2, prop3 }) {\r\n          return (\r\n            <div>\r\n              prop1 = {prop1} <br/> // hello\r\n              prop2 = {prop2} <br/> // my\r\n              prop3 = {prop3} <br/> // friend\r\n            </div>\r\n          );\r\n        }\r\n\r\n        const toRender2 = <Component2 prop1='hello' prop2='my' prop3='friend'/>\r\n      `,\r\n    },\r\n    {\r\n      type: 'code',\r\n      val: `\r\n        <Component2 prop1='hello' prop2='my' prop3='friend'/>\r\n      `,\r\n    },\r\n    {\r\n      type: 'output',\r\n      val: toRender2,\r\n    },\r\n    {\r\n      type: 'text',\r\n      val: (\r\n        <>\r\n          We can pass wrapped props at ones using spread operator\r\n          <CodeSpan>{'{...props}'}</CodeSpan>\r\n          .\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      type: 'code',\r\n      val: `\r\n        function Component3({ prop1, prop2, prop3 }) {\r\n          return (\r\n            <div>\r\n              prop1 = {prop1} <br/>\r\n              prop2 = {prop2} <br/>\r\n              prop3 = {prop3} <br/>\r\n            </div>\r\n          );\r\n        }\r\n        \r\n        const userProps = {\r\n          prop1: 'Hello',\r\n          prop2: 'my',\r\n          prop3: 'friend',\r\n        }\r\n        \r\n        const toRender3 = <Component3 {...userProps}/>\r\n      `,\r\n    },\r\n    {\r\n      type: 'output',\r\n      val: toRender3,\r\n    },\r\n  ],\r\n};\r\n","import React from 'react';\r\nimport { CodeSpan } from '../../components/post/CodeSpan';\r\nimport { Link } from '../../components/post/Link';\r\n\r\nfunction Parent() {\r\n  const [state, setState] = React.useState(0);\r\n\r\n  return (\r\n    <div style={{ background: 'lightyellow', padding: '20px' }}>\r\n      <h1>Parent Component</h1>\r\n      <br />\r\n      <div>Count state variable: {state}</div>\r\n      <br />\r\n      <Child state={state} setState={setState} />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Child(props) {\r\n  return (\r\n    <div style={{ background: 'lightgrey', padding: '20px' }}>\r\n      <h1>Child Component</h1>\r\n      <br />\r\n      <button onClick={() => props.setState(props.state + 1)}>\r\n        Update from child component\r\n      </button>\r\n      <br />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst toRender = <Parent />;\r\n\r\nexport const updateValueFromChildComponent = {\r\n  title: 'Update value from a child component',\r\n  date: '2021.09.29',\r\n  tagsArr: ['react', 'props', 'state', 'useState', 'component', 'child', 'parent', 'basics'],\r\n  postParts: [\r\n    {\r\n      type: 'text',\r\n      val: <>To update the state in a Parent component from a Child component we need to pass <CodeSpan>setState</CodeSpan> function via props to a child component.</>,\r\n    },\r\n    {\r\n      type: 'code',\r\n      val: `\r\n        function Parent() {\r\n          const [state, setState] = React.useState(0);\r\n        \r\n          return (\r\n            <div style={{ background: 'lightyellow', padding: '20px' }}>\r\n              <h1>Parent Component</h1>\r\n              <br />\r\n              <div>Count state variable: {state}</div>\r\n              <br />\r\n              <Child state={state} setState={setState} />\r\n            </div>\r\n          );\r\n        }\r\n        \r\n        function Child(props) {\r\n          return (\r\n            <div style={{ background: 'lightgrey', padding: '20px' }}>\r\n              <h1>Child Component</h1>\r\n              <br />\r\n              <button onClick={() => props.setState(props.state + 1)}>\r\n                Update from child component\r\n              </button>\r\n              <br />\r\n            </div>\r\n          );\r\n        }\r\n        \r\n        const toRender = <Parent />;\r\n      `,\r\n    },\r\n    {\r\n      type: 'output',\r\n      val: toRender,\r\n    },\r\n  ],\r\n};\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport shortid from 'shortid';\r\n\r\nconst StyledContainer = styled.div`\r\n  width: 90%;\r\n  border: 1px solid grey;\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  margin: 0px auto;\r\n  padding: 5px;\r\n\r\n  form {\r\n    margin: 10px;\r\n    text-align: center;\r\n\r\n    input {\r\n      padding: 3px;\r\n    }\r\n\r\n    button {\r\n      margin-left: 10px;\r\n      width: 50px;\r\n      padding: 3px;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  .toDoItem {\r\n    margin: 5px 0px;\r\n    padding: 5px;\r\n    border-bottom: 1px dotted grey;\r\n\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  .delBtn {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nfunction ToDoApp() {\r\n  function getToDoList() {\r\n    if (!localStorage.getItem('toDoArr')) {\r\n      localStorage.setItem(\r\n        'toDoArr',\r\n        JSON.stringify([\r\n          {\r\n            toDoText: 'wipe the dust',\r\n            id: shortid(),\r\n          },\r\n          {\r\n            toDoText: 'walk the dog out',\r\n            id: shortid(),\r\n          },\r\n          {\r\n            toDoText: 'call parents',\r\n            id: shortid(),\r\n          },\r\n        ])\r\n      );\r\n    }\r\n\r\n    return JSON.parse(localStorage.getItem('toDoArr'));\r\n  }\r\n\r\n  const [toDoListState, setToDoListState] = useState(getToDoList);\r\n\r\n  return (\r\n    <StyledContainer>\r\n      <AddItemForm\r\n        toDoListState={toDoListState}\r\n        setToDoListState={setToDoListState}\r\n        getToDoList={getToDoList}\r\n      />\r\n      <ToDoList\r\n        toDoListState={toDoListState}\r\n        setToDoListState={setToDoListState}\r\n        getToDoList={getToDoList}\r\n      />\r\n    </StyledContainer>\r\n  );\r\n}\r\n\r\nfunction AddItemForm({ toDoListState, setToDoListState, getToDoList }) {\r\n  const [inputState, setInputState] = useState('');\r\n\r\n  function addNewItem(e) {\r\n    e.preventDefault();\r\n    if (!inputState) return;\r\n    const newList = [\r\n      {\r\n        toDoText: inputState,\r\n        id: shortid(),\r\n      },\r\n      ...toDoListState,\r\n    ];\r\n    localStorage.setItem('toDoArr', JSON.stringify(newList));\r\n    setToDoListState(getToDoList());\r\n    setInputState('');\r\n  }\r\n\r\n  return (\r\n    <form>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"what to do?\"\r\n        value={inputState}\r\n        onChange={e => setInputState(e.target.value)}\r\n      />\r\n      <button onClick={addNewItem}>Add</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nfunction ToDoList({ setToDoListState, toDoListState, getToDoList }) {\r\n  return (\r\n    <div className=\"toDoList\">\r\n      {toDoListState.map(toDoItem => (\r\n        <ToDoItem\r\n          toDoText={toDoItem.toDoText}\r\n          key={toDoItem.id}\r\n          id={toDoItem.id}\r\n          toDoListState={toDoListState}\r\n          setToDoListState={setToDoListState}\r\n          getToDoList={getToDoList}\r\n        ></ToDoItem>\r\n      ))}\r\n      {toDoListState.length === 0 ? 'Nothing to do' : ''}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ToDoItem({\r\n  toDoText,\r\n  id,\r\n  toDoListState,\r\n  setToDoListState,\r\n  getToDoList,\r\n}) {\r\n  function removeItem() {\r\n    const newList = toDoListState.filter(o => o.id !== id);\r\n    localStorage.setItem('toDoArr', JSON.stringify(newList));\r\n    setToDoListState(getToDoList());\r\n  }\r\n\r\n  return (\r\n    <div className=\"toDoItem\">\r\n      <div className=\"toDoText\">{toDoText}</div>\r\n      <button className=\"delBtn\" onClick={removeItem}>\r\n        Remove\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst toRender = <ToDoApp />\r\n\r\nexport const toDoList = {\r\n  title: 'ToDo app',\r\n  date: '2021.09.26',\r\n  tagsArr: ['react', 'ToDo', 'basics'],\r\n  postParts: [\r\n    {\r\n      type: 'text',\r\n      val: `Let's make the simplest todo list with local data storage.`,\r\n    },\r\n    {\r\n      type: 'code',\r\n      val: `\r\n        import React, { useState } from 'react';\r\n        import './styles.css';\r\n\r\n        function ToDoApp() {\r\n          function getToDoList() {\r\n            if (!localStorage.getItem('toDoArr')) {\r\n              localStorage.setItem(\r\n                'toDoArr',\r\n                JSON.stringify([\r\n                  {\r\n                    toDoText: 'wipe the dust',\r\n                    id: shortid(),\r\n                  },\r\n                  {\r\n                    toDoText: 'walk the dog out',\r\n                    id: shortid(),\r\n                  },\r\n                  {\r\n                    toDoText: 'call parents',\r\n                    id: shortid(),\r\n                  },\r\n                ])\r\n              );\r\n            }\r\n\r\n            return JSON.parse(localStorage.getItem('toDoArr'));\r\n          }\r\n\r\n          const [toDoListState, setToDoListState] = useState(getToDoList);\r\n\r\n          return (\r\n            <div className=\"toDoApp\">\r\n              <AddItemForm\r\n                toDoListState={toDoListState}\r\n                setToDoListState={setToDoListState}\r\n                getToDoList={getToDoList}\r\n              ></AddItemForm>\r\n              <ToDoList\r\n                toDoListState={toDoListState}\r\n                setToDoListState={setToDoListState}\r\n                getToDoList={getToDoList}\r\n              ></ToDoList>\r\n            </div>\r\n          );\r\n        }\r\n\r\n        function AddItemForm({ toDoListState, setToDoListState, getToDoList }) {\r\n          const [inputState, setInputState] = useState('');\r\n\r\n          function addNewItem(e) {\r\n            e.preventDefault();\r\n            if (!inputState) return;\r\n            const newList = [\r\n              {\r\n                toDoText: inputState,\r\n                id: shortid(),\r\n              },\r\n              ...toDoListState,\r\n            ];\r\n            localStorage.setItem('toDoArr', JSON.stringify(newList));\r\n            setToDoListState(getToDoList());\r\n            setInputState('');\r\n          }\r\n\r\n          return (\r\n            <form>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"what to do?\"\r\n                value={inputState}\r\n                onChange={e => setInputState(e.target.value)}\r\n              />\r\n              <button onClick={addNewItem}>Add</button>\r\n            </form>\r\n          );\r\n        }\r\n\r\n        function ToDoList({ setToDoListState, toDoListState, getToDoList }) {\r\n          return (\r\n            <div className=\"toDoList\">\r\n              {toDoListState.map(toDoItem => (\r\n                <ToDoItem\r\n                  toDoText={toDoItem.toDoText}\r\n                  key={toDoItem.id}\r\n                  id={toDoItem.id}\r\n                  toDoListState={toDoListState}\r\n                  setToDoListState={setToDoListState}\r\n                  getToDoList={getToDoList}\r\n                ></ToDoItem>\r\n              ))}\r\n              {toDoListState.length === 0 ? 'Nothing to do' : ''}\r\n            </div>\r\n          );\r\n        }\r\n\r\n        function ToDoItem({\r\n          toDoText,\r\n          id,\r\n          toDoListState,\r\n          setToDoListState,\r\n          getToDoList,\r\n        }) {\r\n          function removeItem() {\r\n            const newList = toDoListState.filter(o => o.id !== id);\r\n            localStorage.setItem('toDoArr', JSON.stringify(newList));\r\n            setToDoListState(getToDoList());\r\n          }\r\n\r\n          return (\r\n            <div className=\"toDoItem\">\r\n              <div className=\"toDoText\">{toDoText}</div>\r\n              <button className=\"delBtn\" onClick={removeItem}>\r\n                Remove\r\n              </button>\r\n            </div>\r\n          );\r\n        }\r\n\r\n        const toRender = <ToDoApp />\r\n      `,\r\n    },\r\n    {\r\n      type: 'output',\r\n      val: toRender\r\n    },\r\n  ],\r\n};\r\n","import React, { useState } from 'react';\r\nimport { CodeSpan } from '../../components/post/CodeSpan';\r\nimport { Link } from '../../components/post/Link';\r\n\r\nfunction InputWithState() {\r\n  const [inpVal, setInpVal] = useState('initial text');\r\n\r\n  return (\r\n    <>\r\n      <h1>{inpVal}</h1>\r\n      <input\r\n        type=\"text\"\r\n        value={inpVal}\r\n        onChange={e => setInpVal(e.target.value)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nconst toRender = <InputWithState />\r\n\r\nexport const useStateAndInput = {\r\n  title: (\r\n    <>\r\n      <CodeSpan>useState()</CodeSpan> & input\r\n    </>\r\n  ),\r\n  date: '2021.09.26',\r\n  tagsArr: ['react', 'state', 'useState', 'input', 'basics', 'hook'],\r\n  postParts: [\r\n    {\r\n      type: 'text',\r\n      val: (\r\n        <>\r\n          We have to use <CodeSpan>useState()</CodeSpan> to be able to see\r\n          an input changes on the screen.\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      type: 'text',\r\n      val: 'Otherwise react does not know what to render.',\r\n    },\r\n    {\r\n      type: 'code',\r\n      val: `\r\n        import React, { useState } from 'react';\r\n\r\n        function InputWithState() {\r\n          const [inpVal, setInpVal] = useState('initial text');\r\n\r\n          return (\r\n            <>\r\n              <h1>{inpVal}</h1>\r\n              <input\r\n                type=\"text\"\r\n                value={inpVal}\r\n                onChange={e => setInpVal(e.target.value)}\r\n              />\r\n            </>\r\n          );\r\n        }\r\n\r\n        const toRender = <InputWithState />\r\n      `,\r\n    },\r\n    {\r\n      type: 'output',\r\n      val: toRender\r\n    },\r\n  ],\r\n};\r\n","import React, { useState } from 'react';\r\nimport { CodeSpan } from '../../components/post/CodeSpan';\r\nimport { Link } from '../../components/post/Link';\r\n\r\nconst btnCss = {padding: '5px 20px', margin: '10px 10px 0px 0px', cursor: 'pointer',}\r\n\r\nfunction ComponentWithoutState() {\r\n  let likes = 0;\r\n\r\n  function increment() {\r\n    likes += 1\r\n    alert(likes)\r\n  }\r\n\r\n  function decrement() {\r\n    likes -= 1\r\n    alert(likes)\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <h1>{likes}</h1>\r\n      <button onClick={increment} style={btnCss}>+1</button>\r\n      <button onClick={decrement} style={btnCss}>-1</button>\r\n    </>\r\n  )\r\n}\r\n\r\nconst toRender1 = <ComponentWithoutState />\r\n\r\nfunction ComponentWithState() {\r\n\r\n  const [likes, setLikes] = useState(0)\r\n\r\n  function increment() {\r\n    setLikes(likes + 1) \r\n  }\r\n  \r\n  function decrement() {\r\n    setLikes(likes - 1) \r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>{likes}</h1>\r\n      <button onClick={increment} style={btnCss}>+1</button>\r\n      <button onClick={decrement} style={btnCss}>-1</button>\r\n    </>\r\n  )\r\n}\r\n\r\nconst toRender2 = <ComponentWithState/>\r\n\r\nexport const whyToUseState = {\r\n  title: <>Why to use <CodeSpan>useState()</CodeSpan></>,\r\n  date: '2021.09.25',\r\n  tagsArr: ['react', 'state', 'useState', 'basics', 'hook'],\r\n  postParts: [\r\n    {\r\n      type: 'text',\r\n      val: <>Let's create an incrementor.</>,\r\n    }, \r\n    {\r\n      type: 'code',\r\n      val: `\r\n        import React from 'react'\r\n        const btnCss = {padding: '5px 20px', margin: '10px 10px 0px 0px', cursor: 'pointer',}\r\n\r\n        function ComponentWithoutState() {\r\n          let likes = 0;\r\n        \r\n          function increment() {\r\n            likes += 1\r\n            alert(likes)\r\n          }\r\n        \r\n          function decrement() {\r\n            likes -= 1\r\n            alert(likes)\r\n          }\r\n          \r\n          return (\r\n            <>\r\n              <h1>{likes}</h1>\r\n              <button onClick={increment} style={btnCss}>+1</button>\r\n              <button onClick={decrement} style={btnCss}>-1</button>\r\n            </>\r\n          )\r\n        }\r\n\r\n        const toRender1 = <ComponentWithoutState/>\r\n      `\r\n    },\r\n    {\r\n      type: 'text',\r\n      val: `We can see value change in alert, but not on the screen.`,\r\n    },\r\n    {\r\n      type: 'output',\r\n      val: toRender1\r\n    },\r\n    {\r\n      type: 'text',\r\n      val: <>As far as react renders only changes in virtual DOM, we need \r\n      to tell him about changes. It can be done with <CodeSpan>useState()</CodeSpan>  \r\n      {' '} <Link link={'https://reactjs.org/docs/hooks-state.html'}>hook</Link>.</>,\r\n    },\r\n    {\r\n      type: 'code',\r\n      val: `\r\n        import React, { useState } from 'react'\r\n        const btnCss = {padding: '5px 20px', marginRight: '10px', cursor: 'pointer',}\r\n\r\n        const [count, setCount] = useState(0)\r\n\r\n        function ComponentWithState() {\r\n\r\n          const [likes, setLikes] = useState(0)\r\n        \r\n          function increment() {\r\n            setLikes(likes + 1) \r\n          }\r\n          \r\n          function decrement() {\r\n            setLikes(likes - 1) \r\n          }\r\n        \r\n          return (\r\n            <>\r\n              <h1>{likes}</h1>\r\n              <button onClick={increment} style={btnCss}>+1</button>\r\n              <button onClick={decrement} style={btnCss}>-1</button>\r\n            </>\r\n          )\r\n        }\r\n\r\n        const toRender2 = <ComponentWithState/>\r\n      `\r\n    },\r\n    {\r\n      type: 'output',\r\n      val: toRender2,\r\n    },\r\n    {\r\n      type: 'text',\r\n      val: (<>\r\n        We initialize <CodeSpan>likes</CodeSpan> state by <CodeSpan>const [likes, setLikes] = useState(0)</CodeSpan>\r\n      </>)\r\n    },\r\n    {\r\n      type: 'text',\r\n      val: (<>\r\n        <CodeSpan>setLikes</CodeSpan> is a function to change a state value.\r\n      </>)\r\n    },\r\n    {\r\n      type: 'text',\r\n      val: (<>\r\n        We pass a new state value as an argument <CodeSpan>setLikes(likes + 1)</CodeSpan>\r\n      </>)\r\n    },\r\n    {\r\n      type: 'text',\r\n      val: (<>\r\n        Initial state <CodeSpan>0</CodeSpan> is passed as an argument in <CodeSpan>useState(0)</CodeSpan> \r\n      </>)\r\n    }\r\n\r\n  ],\r\n};\r\n","import { classVsFunctionComponent } from './classVsFunctionComponent/classVsFunctionComponent'\r\nimport { controlledVsUncontrolledComponent } from './controlledVsUncontrolledComponent/controlledVsUncontrolledComponent'\r\nimport { forwardLotsOfProps } from './forwardLotsOfProps/forwardLotsOfProps'\r\nimport { forwardRef } from './forwardRef/forwardRef'\r\nimport { immutableState } from './immutableState/immutabilityOfState'\r\nimport { jsVsJsx } from './jsVsJsx/jsVsJsx'\r\nimport { passProps } from './passProps/passProps'\r\nimport { updateValueFromChildComponent } from './updateValueFromChildComponent/updateValueFromChildComponent'\r\nimport { toDoList } from './toDoList/toDoList'\r\nimport { useStateAndInput } from './useStateAndInput/useStateAndInput'\r\nimport { whyToUseState } from './whyToUseState/whyToUseState'\r\nimport shortid from 'shortid';\r\n\r\nconst posts = [\r\n  updateValueFromChildComponent,\r\n  forwardRef,\r\n  controlledVsUncontrolledComponent,\r\n  forwardLotsOfProps,\r\n  passProps,\r\n  immutableState,\r\n  toDoList,\r\n  classVsFunctionComponent,\r\n  useStateAndInput,\r\n  whyToUseState,\r\n  jsVsJsx,\r\n]\r\n\r\n// enumerate posts\r\nposts.forEach((o, index) => o.sequentialNum = posts.length - index)\r\n\r\n// add id to posts\r\nposts.forEach((o, index) => o.id = shortid())\r\n\r\n// add properties titleTxt & postTxt with pure text\r\nfunction txtFromJSXOrStr(el) {\r\n  if (!el) return '';\r\n  if (typeof el === 'string') return el;\r\n  const children = el.props && el.props.children;\r\n  if (children instanceof Array)\r\n    return children.map(txtFromJSXOrStr).join('');\r\n  return txtFromJSXOrStr(children);\r\n}\r\n\r\n// add pure text in addition to title and post jsxes\r\nconst postsWithoutJSX = posts.map(el => ({\r\n  ...el,\r\n  titleTxt: txtFromJSXOrStr(el.title), \r\n  postTxt: el.postParts.map(el => txtFromJSXOrStr(el.val)).join('')\r\n}))\r\n\r\nexport const allPosts = postsWithoutJSX\r\nconsole.log(allPosts)","import Mark from 'mark.js';\r\nimport Prism from 'prismjs';\r\nimport React, { useEffect, useRef, useState, useMemo } from 'react';\r\nimport uuid from 'react-uuid';\r\n//import './App.css';\r\nimport styled from 'styled-components';\r\nimport { NavBar } from './components/nav/Nav.js';\r\nimport { Post } from './components/post/Post.js';\r\nimport Search from './components/search/Search.js';\r\nimport { allPosts } from './posts/allPosts.js';\r\n// console.log(allPosts);\r\n\r\nconst StyledApp = styled.div`\r\n  text-align: left;\r\n  /* background-image: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\r\n  background-image: linear-gradient(to top, #e6e9f0 0%, #eef1f5 100%); */\r\n\r\n  background: #c9ccd3;\r\n  background-image: linear-gradient(\r\n    -180deg,\r\n    rgba(255, 255, 255, 0.5) 0%,\r\n    rgba(0, 0, 0, 0.5) 100%\r\n  );\r\n  background-blend-mode: lighten;\r\n\r\n  min-height: 100vh;\r\n  color: whitesmoke;\r\n`;\r\n\r\nconst StyledMain = styled.main`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding-bottom: 30px;\r\n`;\r\n\r\nfunction App() {\r\n  console.log('App rendered');\r\n\r\n  const [state, setState] = useState({\r\n    posts: allPosts,\r\n    tags: returnAllTagsFromArr(allPosts),\r\n    inputVal: '',\r\n    inputWords: [],\r\n    inputTags: [],\r\n    foundPosts: allPosts,\r\n    postsOnDisplay: allPosts,\r\n    foundTags: returnAllTagsFromArr(allPosts),\r\n    openSearchMenu: false,\r\n    showFoundPosts: false,\r\n    showRemoveFoundPosts: false,\r\n  });\r\n\r\n  function returnAllTagsFromArr(arr) {\r\n    const allTags = new Set();\r\n    arr.forEach(o => o.tagsArr.forEach(tag => allTags.add(tag)));\r\n    return Array.from(allTags).sort((a, b) => a.localeCompare(b));\r\n  }\r\n\r\n  function returnUpdatedState(e) {\r\n    const obj = { ...state };\r\n\r\n    // input text\r\n    obj.inputVal =\r\n      // @ts-ignore\r\n      e?.target?.innerText || document.querySelector('#input').innerText;\r\n\r\n    // nodes in input (text + tag divs)\r\n    const wordsArr = [];\r\n    const tagsArr = [];\r\n    const inputNodes =\r\n      e?.target?.childNodes || document.querySelector('#input').childNodes;\r\n    inputNodes.forEach(function (el) {\r\n      if (el.nodeType === Node.TEXT_NODE)\r\n        wordsArr.push(...el.data.trim().toLowerCase().split(/\\s+/));\r\n      if (el.nodeType === Node.ELEMENT_NODE)\r\n        tagsArr.push(el.innerText.toLowerCase());\r\n    });\r\n\r\n    // get words and tags from nodes\r\n    obj.inputWords = [...new Set(wordsArr)].filter(el => el !== '');\r\n    obj.inputTags = [...new Set(tagsArr)];\r\n\r\n    // found posts based on words & tags\r\n    function areWordsInText(wordsArr, text) {\r\n      const wordsArrL = wordsArr.map(el => el.toLowerCase());\r\n      const textL = text.toLowerCase();\r\n      return wordsArrL.every(elem => textL.includes(elem));\r\n    }\r\n\r\n    function areTagsInPost(smallArr, bigArr) {\r\n      const smallArrL = smallArr.map(el => el.toLowerCase());\r\n      const bigArrL = bigArr.map(el => el.toLowerCase());\r\n      return smallArrL.every(elem => bigArrL.includes(elem));\r\n    }\r\n\r\n    obj.foundPosts = allPosts\r\n      .filter(el => areWordsInText(obj.inputWords, el.titleTxt + el.postTxt))\r\n      .filter(el => areTagsInPost(obj.inputTags, el.tagsArr));\r\n\r\n    // all tags\r\n    obj.foundTags = returnAllTagsFromArr(obj.foundPosts);\r\n\r\n    //\r\n    obj.showRemoveFoundPosts = false;\r\n    if (obj.showFoundPosts) obj.showRemoveFoundPosts = true;\r\n\r\n    return obj;\r\n  }\r\n\r\n  Prism.plugins.NormalizeWhitespace.setDefaults({\r\n    'remove-trailing': true,\r\n    'remove-indent': true,\r\n    'left-trim': true,\r\n    'right-trim': true,\r\n    'break-lines': 600, //max number of characters in a line\r\n  });\r\n\r\n  useEffect(() => {\r\n    Prism.highlightAll();\r\n  }, [state.postsOnDisplay]); // [] - run only on load\r\n\r\n  useEffect(() => {\r\n    // highlight found words\r\n    var context = document.querySelector('main');\r\n    var instance = new Mark(context);\r\n    instance.unmark();\r\n    instance.mark(state.inputWords);\r\n  }, [state.postsOnDisplay]);\r\n\r\n  function returnPosts() {\r\n    return state.postsOnDisplay.map(o => (\r\n      <Post post={o} key={o.id} state={state} setState={setState} />\r\n    ));\r\n  }\r\n\r\n  // do not re-render posts on screen when search dropdown menu toggles\r\n  const returnPostsMemo = useMemo(() => {\r\n    return returnPosts();\r\n  }, [state.postsOnDisplay]);\r\n\r\n  return (\r\n    <StyledApp\r\n      // close search dropdown menu if clicked outside\r\n      onClick={() => setState({ ...state, openSearchMenu: false })}\r\n    >\r\n      <NavBar />\r\n      <Search\r\n        state={state}\r\n        setState={setState}\r\n        returnUpdatedState={returnUpdatedState}\r\n      />\r\n\r\n      <StyledMain>{returnPostsMemo}</StyledMain>\r\n    </StyledApp>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './index.css';\r\nimport App from './App';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nconst StyleReset = createGlobalStyle`\r\n  * {\r\n    box-sizing: border-box;\r\n    margin: 0px;\r\n    padding: 0px;\r\n\r\n    &::-webkit-scrollbar {\r\n      /* display: none; */\r\n      width: 5px;\r\n      height: 5px;\r\n    }\r\n\r\n    &::-webkit-scrollbar-thumb {\r\n      background: #f1f1f1;\r\n      border-radius: 5px;\r\n      -webkit-box-shadow: inset 0 0 6px #19191980;\r\n      box-shadow: inset 0 0 6px #19191980;\r\n    }\r\n\r\n    &::-webkit-scrollbar-track {\r\n      background: #f5f5f5;\r\n    }\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n\r\n  body {\r\n    margin: 0;\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n      sans-serif;\r\n    \r\n    font-family: -apple-system, system-ui, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Ubuntu, Arial, sans-serif;\r\n\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n\r\n  code {\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\r\n      monospace;\r\n  }\r\n`;\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <StyleReset />\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}