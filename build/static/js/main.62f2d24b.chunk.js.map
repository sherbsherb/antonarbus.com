{"version":3,"sources":["components/nav/NavStyledComponents.js","components/nav/Nav.js","components/post components/Post.js","posts/classVsFunctionComponent/classVsFunctionComponent.jsx","posts/controlledVsUncontrolledComponent/controlledVsUncontrolledComponent.js","posts/forwardLotsOfProps/forwardLotsOfProps.js","posts/forwardRef/forwardRef.js","posts/immutableState/immutabilityOfState.js","posts/jsVsJsx/jsVsJsx.js","posts/passProps/passProps.js","posts/toDoArticle/toDoArticle.js","posts/useStateAndInput/useStateAndInput.js","posts/whyToUseState/whyToUseState.js","posts/allPosts.js","App.js","index.js"],"names":["bg","textColor","navSize","border","NavStyled","styled","nav","NavItemStyled","ul","Icon","a","parseInt","NavItemLi","li","slideDownAnimation","keyframes","slideDownAnimationPhone","MenuContainer","div","appearAnimation","MenuLink","props","color","willOpenTopMenu","css","MenuIcon","MenuIconRight","MenuText","span","BackLink","CloseLink","appleIcon","React","createElement","FaApple","reactIcon","FaReact","redHatIcon","FaRedhat","plusIcon","AiOutlinePlus","closeIcon","IoClose","navContent","navItem","visible","icon","text","menu","id","shortid","generate","menuItems","iconLeft","NavBar","useState","openedMenuState","setOpenedMenuState","showMenuContainerState","setShowMenuContainerState","showMenu","o","console","log","isMenu","closeMenu","underNavItemId","prevMenu","changeMenu","subMenu","e","stopPropagation","pop","navKeyboardHandler","key","isNestedMenu","length","useEffect","window","addEventListener","removeEventListener","map","navObj","NavItem","href","onClick","Menu","BackItem","CloseItem","menuItem","MenuItem","subMenuExists","className","Post","Title","post","title","StyledSection","Article","arr","articlesArr","el","index","type","Text","val","uuid","Code","Output","Tags","tagsArr","date","StyledTitle","h3","children","section","article","StyledText","p","Prism","plugins","NormalizeWhitespace","setDefaults","highlightAll","StyledTags","tag","StyledTag","StyledDate","time","Date","StyledOutput","StyleLink","Link","link","target","StyleCode","code","CodeInline","btnCss","padding","margin","cursor","ClassComponent","state","likes","increment","bind","decrement","this","setState","style","Component","FunctionComponent","setLikes","classVsFunctionComponent","abstract","ControlledInput","inpVal","setInpVal","value","onChange","UncontrolledInput","inpRef","useRef","ref","current","controlledVsUncontrolledComponent","ParentComponent","JSON","stringify","ChildComponent","forwardLotsOfProps","prop1","prop2","prop3","Input","forwardRef","InputWithFocus","placeholder","focus","inputWithFocus","greenCss","redCss","marginCss","StateIsImmutable","push","immutableState","jsVsJsx","fontWeight","disabled","alert","Component1","Component2","Component3","passProps","ToDoApp","getToDoList","localStorage","getItem","setItem","toDoText","Math","random","parse","toDoListState","setToDoListState","AddItemForm","ToDoList","inputState","setInputState","preventDefault","newList","toDoItem","ToDoItem","filter","toDoArticle","InputWithState","useStateAndInput","ComponentWithoutState","ComponentWithState","allPosts","StyledApp","StyledMain","main","App","item","StyleReset","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62f2d24b.chunk.js","sourcesContent":["import styled, { keyframes, css } from 'styled-components';\n\n//#region CSS const\n\nconst bg = '#242526';\nconst textColor = '#dadce1';\nconst navSize = '60px';\nconst border = '1px solid #474a4d';\nconst borderRadius = '8px';\n\n//#endregion\n\nexport const NavStyled = styled.nav`\n  height: ${navSize};\n  /* background-color: ${bg}; */\n  padding: 0 1rem;\n  border-bottom: ${border};\n  position: relative;\n  background-image: linear-gradient(to right, #434343 0%, black 100%);\n`;\n\nexport const NavItemStyled = styled.ul`\n  max-width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: flex-end;\n\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const Icon = styled.a`\n  width: ${parseInt(navSize) * 0.5}px;\n  height: ${parseInt(navSize) * 0.5}px;\n  background-color: #484a4d;\n  border-radius: 50%;\n  padding: 5px;\n  margin: 2px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: filter 300ms;\n  color: ${textColor};\n\n  svg {\n    fill: ${textColor};\n    width: 20px;\n    height: 20px;\n    margin-top: 1px;\n  }\n\n  &:hover {\n    filter: brightness(1.2);\n  }\n`;\n\nexport const NavItemLi = styled.li`\n  width: ${parseInt(navSize) * 0.8}px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst slideDownAnimation = keyframes`\n  from {\n    /* transform: scaleY(0) translateX(-45%); */\n    transform: translateY(-50%) translateX(-45%);\n    opacity: 0;\n  }\n  to {\n    /* transform: scaleY(1) translateX(-45%); */\n    transform: translateY(0%) translateX(-45%);\n    opacity: 1;\n  }\n`;\n\nconst slideDownAnimationPhone = keyframes`\n  from {\n    /* transform: scaleY(0); */\n    transform: translateY(-50%);\n    opacity: 0;\n  }\n  to {\n    /* transform: scaleY(1); */\n    transform: translateY(0%);\n    opacity: 1;\n  }\n`;\n\nexport const MenuContainer = styled.div`\n  position: absolute;\n  top: 110%;\n  width: 300px;\n  /* width: auto; */\n  background-color: ${bg};\n  \n  border: ${border};\n  border-radius: ${borderRadius};\n  padding: 1rem;\n  overflow: hidden;\n  z-index: 666;\n\n  animation-name: ${slideDownAnimation};\n  animation-duration: 500ms;\n  animation-delay: 0ms;\n  animation-iteration-count: 1;\n  animation-direction: normal;\n  animation-timing-function: cubic-bezier(0, 1, 0.5, 1);\n  animation-fill-mode: forwards;\n  transform-origin: top;\n\n  @media screen and (max-width: 480px) {\n    transform: translateX(0px) !important;\n    left: 10px;\n    right: 10px;\n    width: auto;\n    animation-name: ${slideDownAnimationPhone};\n  }\n`;\n\nconst appearAnimation = keyframes`\n  from {\n    transform: translateX(-50%);\n  }\n  to {\n    transform: translateX(0);\n  }\n`;\n\n// todo: use props to animate only nested menu\n// todo: do not animate close & back\nexport const MenuLink = styled.a`\n  height: 50px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-radius: ${borderRadius};\n  padding: 0.5rem;\n  color: ${textColor};\n  white-space: nowrap;\n  /* animation: ${appearAnimation} 200ms linear; */\n  color: ${props => props.color};\n  animation: ${props =>\n    // @ts-ignore\n    props.willOpenTopMenu\n      ? css`none`\n      : css`${appearAnimation} 200ms cubic-bezier(0, 1, 0.5, 1)`\n  };\n\n  .left-part {\n    width: 100%;\n    display: inline-flex;\n    flex-direction: row;\n    align-content: center;\n    justify-content: flex-start;\n    align-items: center;\n    flex-wrap: nowrap;\n  }\n\n  .right-part {\n    margin-left: 40px;\n  }\n\n  &:hover {\n    background-color: #525357;\n  }\n`;\n\nexport const MenuIcon = styled(Icon)`\n  &:hover {\n    filter: none;\n  }\n`;\n\nexport const MenuIconRight = styled(Icon)`\n  background-color: transparent;\n  margin-right: -5px;\n`;\n\nexport const MenuText = styled.span`\n  margin-left: 10px;\n  text-overflow: ellipsis;\n  overflow:hidden;\n  white-space:nowrap;\n`;\n\nexport const BackLink = styled(MenuLink)`\n  color: #858383;\n  animation: none;\n`;\n\nexport const CloseLink = styled(MenuLink)`\n  color: #858383;\n  animation: none;\n`;\n","// ! how to make similar hamburger, which dynamically pop up when there is no space\n// ! we can not grab an el with querySelector as we do in native JS\n\nimport React, { useState, useEffect } from 'react';\nimport shortid from 'shortid';\n// import styled components\nimport {\n  NavStyled,\n  NavItemStyled,\n  Icon,\n  NavItemLi,\n  MenuContainer,\n  MenuLink,\n  MenuIcon,\n  MenuIconRight,\n  MenuText,\n  BackLink,\n  CloseLink,\n} from './NavStyledComponents';\n//import './nav.css';\n\n// import & set icons\nimport { FaApple } from 'react-icons/fa';\nimport { FaReact } from 'react-icons/fa';\nimport { FaRedhat } from 'react-icons/fa';\nimport { AiOutlinePlus } from 'react-icons/ai';\nimport { FaChevronRight as RightArrowIcon } from 'react-icons/fa';\n// can use alias with 'as'\nimport { FaChevronLeft as LeftArrowIcon } from 'react-icons/fa';\nimport { IoClose } from 'react-icons/io5';\n\nconst appleIcon = React.createElement(FaApple, {});\nconst reactIcon = React.createElement(FaReact, {});\nconst redHatIcon = React.createElement(FaRedhat, {});\nconst plusIcon = React.createElement(AiOutlinePlus, {});\n// can insert component as a JS variable instead of JSX tag\nconst closeIcon = React.createElement(IoClose, {});\n\n// menu structure\nconst navContent = [\n  {\n    navItem: true,\n    visible: true,\n    icon: appleIcon,\n    text: '',\n    menu: null,\n    id: shortid.generate(),\n  },\n  {\n    navItem: true,\n    visible: true,\n    icon: reactIcon,\n    text: '',\n    menu: null,\n    id: shortid.generate(),\n  },\n  {\n    navItem: true,\n    visible: true,\n    icon: redHatIcon,\n    text: '',\n    menu: {\n      visible: false,\n      menuItems: [\n        {\n          text: 'text',\n          iconLeft: '😇',\n          menu: null,\n          id: shortid.generate(),\n        },\n        {\n          text: 'text',\n          iconLeft: '',\n          menu: null,\n          id: shortid.generate(),\n        },\n        {\n          text: 'text',\n          iconLeft: '😇',\n          menu: null,\n          id: shortid.generate(),\n        },\n      ],\n    },\n    id: shortid.generate(),\n  },\n  {\n    navItem: true,\n    visible: true,\n    icon: plusIcon,\n    text: '',\n    menu: {\n      visible: true,\n      menuItems: [\n        {\n          text: 'text',\n          iconLeft: '😇',\n          menu: {\n            visible: false,\n            menuItems: [\n              {\n                text: 'text',\n                iconLeft: '😎',\n                menu: null,\n                id: shortid.generate(),\n              },\n              {\n                text: 'text',\n                iconLeft: '😎',\n                menu: null,\n                id: shortid.generate(),\n              },\n              {\n                text: 'text',\n                iconLeft: '😎',\n                menu: {\n                  visible: false,\n                  menuItems: [\n                    {\n                      text: 'long long long long long long long long text',\n                      iconLeft: '🥸',\n                      menu: null,\n                      id: shortid.generate(),\n                    },\n                    {\n                      text: 'text',\n                      iconLeft: '🥸',\n                      menu: null,\n                      id: shortid.generate(),\n                    },\n                    {\n                      text: 'text',\n                      iconLeft: '🥸',\n                      menu: null,\n                      id: shortid.generate(),\n                    },\n                    {\n                      text: 'text',\n                      iconLeft: '🥸',\n                      menu: null,\n                      id: shortid.generate(),\n                    },\n                    {\n                      text: 'text',\n                      iconLeft: '🥸',\n                      menu: null,\n                      id: shortid.generate(),\n                    },\n                    {\n                      text: 'text',\n                      iconLeft: '🥸',\n                      menu: null,\n                      id: shortid.generate(),\n                    },\n                    {\n                      text: 'text',\n                      iconLeft: '🥸',\n                      menu: null,\n                      id: shortid.generate(),\n                    },\n                  ],\n                },\n                id: shortid.generate(),\n              },\n            ],\n          },\n          id: shortid.generate(),\n        },\n        {\n          text: 'text',\n          iconLeft: '😇',\n          menu: null,\n          id: shortid.generate(),\n        },\n        {\n          text: 'text',\n          iconLeft: '😇',\n          menu: null,\n          id: shortid.generate(),\n        },\n        {\n          text: 'text',\n          iconLeft: '😇',\n          menu: null,\n          id: shortid.generate(),\n        },\n        {\n          text: 'text',\n          iconLeft: '😇',\n          menu: null,\n          id: shortid.generate(),\n        },\n      ],\n    },\n    id: shortid.generate(),\n  },\n];\n\n// var\nlet willOpenTopMenu = true;\n\n// navbar\nexport function NavBar() {\n  // states\n  const [openedMenuState, setOpenedMenuState] = useState(null);\n  const [showMenuContainerState, setShowMenuContainerState] = useState(false);\n\n  //#region HELPER FUNCS\n\n  // ! helper funcs are in the top component\n  // ! wish to move them up, but they use 'state'\n  // ! but 'state' can be created only inside a component\n\n  // update state to show menu\n  function showMenu(o) {\n    console.log('showMenu() func fired');\n    const isMenu = o.menu;\n\n    if (!isMenu) {\n      console.log('no menu inside navItem');\n      // if menu container is ON, remove it\n      if (showMenuContainerState) {\n        closeMenu();\n        return;\n      }\n\n      if (!showMenuContainerState) {\n        console.log('no showing menu, do nothing');\n        return;\n      }\n    }\n\n    if (isMenu) {\n      const menu = o.menu;\n      willOpenTopMenu = true;\n      setShowMenuContainerState(true);\n      setOpenedMenuState({\n        ...menu,\n        underNavItemId: o.id,\n        // just opened first menu, no previous menus exist yet\n        prevMenu: [],\n      });\n      console.log('showed menu');\n    }\n  }\n\n  // update state to change menu\n  function changeMenu(o) {\n    console.log('changeMenu() func fired');\n\n    const isSubMenu = o.menu;\n\n    if (!isSubMenu) {\n      console.log('no sub-menu');\n      return;\n    }\n\n    console.log('fall one level down in menu');\n    willOpenTopMenu = false;\n    const subMenu = o.menu;\n    setOpenedMenuState({\n      ...subMenu,\n      underNavItemId: openedMenuState.underNavItemId,\n      prevMenu: [...openedMenuState.prevMenu, openedMenuState],\n    });\n  }\n\n  // update state to close menu\n  function closeMenu(e) {\n    console.log('closeMenu() func fired');\n\n    e?.stopPropagation();\n\n    if (showMenuContainerState) {\n      willOpenTopMenu = false;\n      setShowMenuContainerState(false);\n      setOpenedMenuState(null);\n      console.log('closed existing menu');\n    }\n  }\n\n  // assign previous menu obj from array to a state to re-render it\n  function prevMenu(e) {\n    console.log('prevMenu() func fired');\n\n    e?.stopPropagation();\n    willOpenTopMenu = false;\n    setOpenedMenuState(openedMenuState.prevMenu.pop());\n    console.log('clicked Back');\n  }\n\n  // add actions for Escape, Backspace, Enter, Arrows\n  function navKeyboardHandler(e) {\n    console.log('navKeyboardHandler() func fired');\n\n    const { key } = e;\n    //console.log(keyCode);\n    if (!openedMenuState) return;\n    const isNestedMenu = openedMenuState?.prevMenu?.length > 0;\n    isNestedMenu && key === 'Backspace' && prevMenu();\n    !isNestedMenu && key === 'Backspace' && closeMenu();\n    key === 'Escape' && closeMenu();\n  }\n\n  //#endregion\n\n  //#region EVENT LISTENERS FOR WINDOW\n\n  // use events to navigate over menu with keys\n  // ! we listen for keys on Window, how to do it properly no clue\n  // ! how to disable an event listener on menu close && activate on menu pop-up\n  useEffect(() => {\n    window.addEventListener('keydown', navKeyboardHandler);\n    // ! do not understand why func is returned\n    return () => window.removeEventListener('keydown', navKeyboardHandler);\n  }, [openedMenuState]);\n\n  // close menu if click outside\n  // ! nice to listen for it on menu popup and stop listening when menu is off\n  useEffect(() => {\n    window.addEventListener('click', closeMenu);\n    return () => window.removeEventListener('click', closeMenu);\n  }, [openedMenuState]);\n\n  //#endregion\n\n  console.log('NavBar rendered');\n  return (\n    // ? we throw props over & over again, is there more elegant way?\n    <NavStyled>\n      <NavItemStyled>\n        {navContent.map(\n          navObj =>\n            navObj.visible && (\n              <NavItem\n                navObj={navObj}\n                openedMenuState={openedMenuState}\n                prevMenu={prevMenu}\n                closeMenu={closeMenu}\n                showMenu={showMenu}\n                changeMenu={changeMenu}\n                showMenuContainerState={showMenuContainerState}\n                willOpenTopMenu={willOpenTopMenu}\n                key={navObj.id}\n              />\n            )\n        )}\n      </NavItemStyled>\n    </NavStyled>\n  );\n}\n\n// component inside the NavBar = icons\nexport function NavItem({\n  navObj,\n  openedMenuState,\n  prevMenu,\n  closeMenu,\n  showMenu,\n  changeMenu,\n  showMenuContainerState,\n  willOpenTopMenu,\n}) {\n  console.log('NavItem rendered');\n  return (\n    <NavItemLi>\n      <Icon\n        href=\"#\"\n        onClick={e => {\n          e.stopPropagation();\n          showMenu(navObj);\n        }}\n        // onMouseEnter={() => showMenu(navItem)}\n        // onMouseLeave={() => closeMenu()}\n      >\n        {navObj.icon}\n        {navObj.text}\n      </Icon>\n\n      {/* show only specific menu for NavItem id, otherwise all existing menus are shown */}\n      {showMenuContainerState &&\n        openedMenuState?.underNavItemId === navObj.id && (\n          <Menu\n            openedMenuState={openedMenuState}\n            prevMenu={prevMenu}\n            closeMenu={closeMenu}\n            changeMenu={changeMenu}\n            willOpenTopMenu={willOpenTopMenu}\n          />\n        )}\n    </NavItemLi>\n  );\n}\n\n// menu with 'back' & 'close' buttons on top & MenuItems\nexport function Menu({\n  openedMenuState,\n  prevMenu,\n  closeMenu,\n  changeMenu,\n  willOpenTopMenu,\n}) {\n  // ! every time we press item inside MenuContainer\n  // ! we update the openedMenuState with changeMenu() func\n  // ! changeMenu() func updates openedMenuState, which triggers re-render\n  // ! ... and we should get new MenuContainer, but no!!!\n  // ! if we color els in dev tool we can see els are not touched\n  // ! how come?\n  console.log('Menu rendered');\n  const isNestedMenu = openedMenuState?.prevMenu?.length > 0;\n  return (\n    <MenuContainer>\n      {isNestedMenu && <BackItem prevMenu={prevMenu} />}\n      {!isNestedMenu && <CloseItem closeMenu={closeMenu} />}\n      {openedMenuState.menuItems.map(menuItem => (\n        <MenuItem\n          menuItem={menuItem}\n          changeMenu={changeMenu}\n          key={menuItem.id}\n          willOpenTopMenu={willOpenTopMenu}\n        />\n      ))}\n    </MenuContainer>\n  );\n}\n\n// ! MenuContainer width: auto\n// ! want to apply transition, which requires fixed width\n// ! such manipulations are done by JS, but how to grab an element in React?\n\n// item inside menu\nexport function MenuItem({ menuItem, changeMenu, willOpenTopMenu }) {\n  console.log('MenuItem rendered');\n  const subMenuExists = menuItem.menu;\n  return (\n    <MenuLink\n      href=\"#1\"\n      willOpenTopMenu={willOpenTopMenu}\n      onClick={e => {\n        e?.stopPropagation();\n        changeMenu(menuItem);\n      }}\n    >\n      <span className=\"left-part\">\n        <Icon>{menuItem.iconLeft}</Icon>\n        <MenuText>{menuItem.text}</MenuText>\n      </span>\n\n      {subMenuExists && (\n        <span className=\"right-part\">\n          <MenuIconRight>\n            <RightArrowIcon />\n          </MenuIconRight>\n        </span>\n      )}\n    </MenuLink>\n  );\n}\n\nexport function BackItem({ prevMenu }) {\n  console.log('BackItem rendered');\n  return (\n    <BackLink href=\"#1\" onClick={prevMenu}>\n      <span className=\"left-part\">\n        <MenuIcon>\n          <LeftArrowIcon />\n        </MenuIcon>\n        <MenuText>Back</MenuText>\n      </span>\n    </BackLink>\n  );\n}\n\nexport function CloseItem({ closeMenu }) {\n  console.log('CloseItem rendered');\n  return (\n    <CloseLink href=\"#1\" onClick={closeMenu}>\n      <span className=\"left-part\">\n        <MenuIcon>{closeIcon}</MenuIcon>\n        <MenuText>Close</MenuText>\n      </span>\n    </CloseLink>\n  );\n}\n","import React, { useEffect } from 'react';\n// import styled, { keyframes, css } from 'styled-components';\nimport styled from 'styled-components/macro';\n// import './styles.css';\nimport Prism from 'prismjs';\nimport './../../../node_modules/prismjs/components/prism-jsx.js';\nimport './../../../node_modules/prismjs/plugins/normalize-whitespace/prism-normalize-whitespace.js';\nimport './prism.css';\nimport uuid from 'react-uuid';\n\nexport function returnArrOfJsx(arr) {\n  return arr.map((el, index) => {\n    if (el.type === 'text') return <Text key={uuid()}>{el.val}</Text>;\n    if (el.type === 'code') return <Code key={uuid()}>{el.val}</Code>;\n    if (el.type === 'output') return <Output key={uuid()}>{el.val}</Output>;\n    return <div key={uuid()}>{el.val}</div>;\n  });\n}\n\nexport function returnArrOfTags(tagsArr) {\n  return tagsArr.map((tag, index) => {\n    return <StyledTag key={uuid()}>{tag}</StyledTag>;\n  });\n}\n\nexport function Post(props) {\n  return (\n    <>\n      <Title>{props.post.title}</Title>\n      <StyledSection>\n        <Article>{returnArrOfJsx(props.post.articlesArr)}</Article>\n        <Tags>{props.post.tagsArr}</Tags>\n        <Date>{props.post.date}</Date>\n      </StyledSection>\n    </>\n  );\n}\n\nconst StyledTitle = styled.h3`\n  display: block;\n  margin-top: 40px;\n  margin-bottom: 10px;\n  font-size: 24px;\n  color: black;\n  text-align: center;\n`;\n\nexport function Title(props) {\n  return <StyledTitle>{props.children}</StyledTitle>;\n}\n\nexport const StyledSection = styled.section`\n  display: flex;\n  flex-direction: column; /* direction to stack els */\n  flex-wrap: nowrap; /* wrap or not */\n  justify-content: flex-start; /* align on main-axis */\n  align-items: left; /* align on cross-axis */\n  /* align-content: stretch; align the flex lines, similar to align-items, but aligns flex lines (group els as if they were one el) */\n  border: 1px solid #d2d2d2;\n  border-radius: 6px;\n  margin: 0 auto;\n  width: 90vw;\n  max-width: 800px;\n  font-size: 14px;\n  padding: 20px;\n  background: white;\n  color: black;\n  position: relative;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n  /* box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19); */\n`;\n\nexport const Article = styled.article`\n  display: block;\n  width: 100%;\n`;\n\nconst StyledText = styled.p`\n  margin-top: 20px;\n  margin-bottom: 10px;\n  align-self: flex-start;\n  color: #3a3a3a;\n`;\n\nexport function Text(props) {\n  return <StyledText>{props.children}</StyledText>;\n}\n\nexport function Code(props) {\n  useEffect(() => {\n    Prism.plugins.NormalizeWhitespace.setDefaults({\n      'remove-trailing': true,\n      'remove-indent': true,\n      'left-trim': true,\n      'right-trim': true,\n      'break-lines': 600, //max number of characters in each line before break\n    });\n\n    Prism.highlightAll();\n  }, []);\n\n  return (\n    <pre>\n      <code className=\"language-jsx\">{props.children}</code>\n    </pre>\n  );\n}\n\nexport const StyledTags = styled.div`\n  margin-top: 20px;\n`;\n\nexport function Tags(props) {\n  return <StyledTags>{returnArrOfTags(props.children)}</StyledTags>;\n}\n\nconst StyledTag = styled.div`\n  display: inline-block;\n  position: relative;\n  padding: 3px 8px 3px 20px;\n  margin-bottom: 8px;\n  margin-right: 15px;\n  background: grey;\n  border-radius: 3px;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\n  color: white;\n  font-size: 12px;\n  font-family: 'Lucida Grande', 'Lucida Sans Unicode', Verdana, sans-serif;\n  text-decoration: none;\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\n  font-weight: bold;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 8px;\n    left: 8px;\n    width: 5px;\n    height: 5px;\n    border-radius: 50%;\n    background: #fff;\n    box-shadow: -1px -1px 2px rgba(0, 0, 0, 0.4);\n  }\n`;\n\nconst StyledDate = styled.time`\n  font-size: 10px;\n  position: absolute;\n  bottom: 7px;\n  right: 7px;\n`;\n\nexport function Date(props) {\n  return <StyledDate>{props.children}</StyledDate>;\n}\n\nconst StyledOutput = styled.div`\n  background: #e9f4fb;\n  padding: 0.5em;\n  margin: 20px 0px;\n  overflow: auto;\n  border-radius: 4px;\n\n`;\n\nexport function Output(props) {\n  return (\n    <StyledOutput>\n      {props.children}\n    </StyledOutput>\n  );\n}\n\nconst StyleLink = styled.a`\n  cursor: pointer;\n  color: #0098f7;\n  text-decoration: none;\n`;\n\nexport function Link(props) {\n  return (\n    <StyleLink href={props.link} target=\"_blank\">\n      {props.text}\n      {props.children}\n    </StyleLink>\n  );\n}\n\nconst StyleCode = styled.code`\n`;\n\nexport function CodeInline(props) {\n  return (\n    <StyleCode>\n      <code className=\"language-javascript\">{props.children}</code>\n    </StyleCode>\n  );\n}\n","import React, { useState } from 'react';\n\nconst btnCss = {\n  padding: '5px 20px',\n  margin: '10px 10px 0px 0px',\n  cursor: 'pointer',\n};\n\nclass ClassComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      likes: 0,\n    };\n    this.increment = this.increment.bind(this);\n    this.decrement = this.decrement.bind(this);\n  }\n\n  increment() {\n    this.setState({ likes: this.state.likes + 1 });\n  }\n\n  decrement() {\n    this.setState({ likes: this.state.likes - 1 });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>{this.state.likes}</h1>\n        <button onClick={this.increment} style={btnCss}>\n          +1\n        </button>\n        <button onClick={this.decrement} style={btnCss}>\n          -1\n        </button>\n      </div>\n    );\n  }\n}\n\nfunction FunctionComponent() {\n  const [likes, setLikes] = useState(0);\n\n  const increment = () => setLikes(likes + 1);\n  const decrement = () => setLikes(likes - 1);\n\n  return (\n    <div>\n      <h1>{likes}</h1>\n      <button onClick={increment} style={btnCss}>\n        +1\n      </button>\n      <button onClick={decrement} style={btnCss}>\n        -1\n      </button>\n    </div>\n  );\n}\n\nexport const classVsFunctionComponent = {\n  title: <>Class vs Function component</>,\n  date: '2021.09.26',\n  tagsArr: ['react', 'class component', 'function component', 'basics'],\n  abstract: 'abstract from the article',\n  articlesArr: [\n    {\n      type: 'text',\n      val: <>Class component</>,\n    },\n    {\n      type: 'code',\n      val: `\n        import React, { useState } from 'react';\n        \n        const btnCss = {\n          padding: '5px 20px',\n          margin: '10px 10px 0px 0px',\n          cursor: 'pointer',\n        };\n\n        class ClassComponent extends React.Component {\n          constructor(props) {\n            super(props);\n            this.state = {\n              likes: 0,\n            };\n            this.increment = this.increment.bind(this);\n            this.decrement = this.decrement.bind(this);\n          }\n        \n          increment() {\n            this.setState({ likes: this.state.likes + 1 });\n          }\n        \n          decrement() {\n            this.setState({ likes: this.state.likes - 1 });\n          }\n        \n          render() {\n            return (\n              <div>\n                <h1>{this.state.likes}</h1>\n                <button onClick={this.increment} style={btnCss}>\n                  +1\n                </button>\n                <button onClick={this.decrement} style={btnCss}>\n                  -1\n                </button>\n              </div>\n            );\n          }\n        }\n      `\n    },\n    {\n      type: 'output',\n      val: (\n        <ClassComponent/>\n      ),\n    },\n    {\n      type: 'text',\n      val: \"Function component\",\n    },\n    {\n      type: 'code',\n      val:  `\n        import React, { useState } from 'react';\n        \n        const btnCss = {\n          padding: '5px 20px',\n          margin: '10px 10px 0px 0px',\n          cursor: 'pointer',\n        };\n\n        function FunctionComponent() {\n          const [likes, setLikes] = useState(0);\n        \n          const increment = () => setLikes(likes + 1);\n          const decrement = () => setLikes(likes - 1);\n        \n          return (\n            <div>\n              <h1>{likes}</h1>\n              <button onClick={increment} style={btnCss}>\n                +1\n              </button>\n              <button onClick={decrement} style={btnCss}>\n                -1\n              </button>\n            </div>\n          );\n        }\n      `\n    },\n    {\n      type: 'output',\n      val: (\n        <FunctionComponent/>\n      ),\n    },\n    {\n      type: 'text',\n      val: \"Function component is a modern way to write a component in react.\"\n    }\n\n  ],\n};","import React, { useRef, useState } from 'react';\nimport { Link, CodeInline } from '../../components/post components/Post';\n\nfunction ControlledInput() {\n  const [inpVal, setInpVal] = useState('initial text');\n\n  return (\n    <>\n      <h1>{inpVal}</h1>\n      <input\n        type=\"text\"\n        value={inpVal}\n        onChange={e => setInpVal(e.target.value)}\n      />\n    </>\n  );\n}\n\nfunction UncontrolledInput() {\n  const [inpVal, setInpVal] = useState('initial text');\n  const inpRef = useRef('initial text')\n\n  return (\n    <>\n      <h1>{inpVal}</h1>\n      <input\n        ref={inpRef}\n        type=\"text\"\n        value={inpVal}\n        onChange={() => setInpVal(inpRef.current.value)}\n      />\n    </>\n  );\n}\n\nexport const controlledVsUncontrolledComponent = {\n  title: 'Controlled vs uncontrolled component',\n  date: '2021.09.26',\n  tagsArr: ['react', 'useRef', 'useState', 'input', 'controlled', 'uncontrolled', 'basics', 'hook', 'DOM'],\n  abstract: 'abstract from the article',\n  articlesArr: [\n    {\n      type: 'text',\n      val: (\n        <>\n          <strong>Controlled component</strong> data is handled \n          by a React component via <CodeInline>useState()</CodeInline> {' '}\n          <Link link={'https://reactjs.org/docs/hooks-reference.html#usestate'}>hook</Link>. \n          Event handler takes care of a state update.\n        </>\n      ),\n    },\n    {\n      type: 'code',\n      val: `\n        import React, { useRef, useState } from 'react';\n\n        function ControlledInput() {\n          const [inpVal, setInpVal] = useState('initial text');\n\n          return (\n            <>\n              <h1>{inpVal}</h1>\n              <input\n                type=\"text\"\n                value={inpVal}\n                onChange={e => setInpVal(e.target.value)}\n              />\n            </>\n          );\n        }\n      `,\n    },\n    {\n      type: 'output',\n      val: <ControlledInput></ControlledInput>,\n    },\n    {\n      type: 'text',\n      val: (\n        <>\n          <strong>Uncontrolled component</strong> data is handled by the DOM itself. \n          We need to use <CodeInline>useRef()</CodeInline> {' '}\n          <Link link={'https://reactjs.org/docs/hooks-reference.html#useref'}>hook</Link> to get form values from the DOM.\n        </>\n      ),\n    },\n    {\n      type: 'code',\n      val: `\n        import React, { useRef, useState } from 'react';\n\n        function UncontrolledInput() {\n          const [inpVal, setInpVal] = useState('initial text');\n          const inpRef = useRef('initial text')\n        \n          return (\n            <>\n              <h1>{inpVal}</h1>\n              <input\n                ref={inpRef}\n                type=\"text\"\n                value={inpVal}\n                onChange={() => setInpVal(inpRef.current.value)}\n              />\n            </>\n          );\n        }\n      `,\n    },\n    {\n      type: 'text',\n      val: (\n        <>\n          <CodeInline>inpRef.current</CodeInline> {' '} refers to the DOM element.\n        </>\n      ),\n    },\n    {\n      type: 'output',\n      val: <UncontrolledInput></UncontrolledInput>,\n    },\n    \n  ],\n};","import React from 'react';\nimport { CodeInline } from '../../components/post components/Post';\n\nfunction ParentComponent(props) {\n  return (\n    <>\n      Props of parent component: {JSON.stringify(props)} <br/>\n      <ChildComponent {...props} />\n    </>\n  );\n}\n\nfunction ChildComponent(props) {\n  return (\n    <> \n      Props of child component: {JSON.stringify(props)}\n    </>\n  );\n}\n\nexport const forwardLotsOfProps = {\n  title: 'Forward lots of props',\n  date: '2021.09.29',\n  tagsArr: ['react', 'props', 'component', 'basics'],\n  abstract: 'abstract from the article',\n  articlesArr: [\n    {\n      type: 'text',\n      val: \n        <>\n          Sometimes we need to pass tons of props from a component to a component.\n          That can create a mess.<br/><br/>\n          With spread {<CodeInline>...</CodeInline>} operator we can pass any number of props at ones.\n        </>\n      ,\n    },\n    {\n      type: 'code',\n      val: `\n        function ParentComponent(props) {\n          return (\n            <>\n              Props of parent component: {JSON.stringify(props)} <br/>\n              <ChildComponent {...props} />\n            </>\n          );\n        }\n        \n        function ChildComponent(props) {\n          return (\n            <> \n              Props of child component: {JSON.stringify(props)}\n            </>\n          );\n        }\n      `,\n    },\n    {\n      type: 'output',\n      val: (\n        <ParentComponent prop1='hello' prop2='my' prop3='friend' />\n      ),\n    },\n\n  \n  ],\n};\n","import React from 'react';\nimport { CodeInline } from '../../components/post components/Post';\n\nconst Input = React.forwardRef((props, ref) => (\n  <input ref={ref} {...props} />\n));\n\nfunction InputWithFocus() {\n  const ref = React.useRef();\n  const focus = () => ref.current.focus();\n\n  return (\n    <>\n      <Input\n        ref={ref}\n        placeholder=\"my input\"\n        style={{ padding: '5px', margin: '5px' }}\n      />\n      <button onClick={focus}>Focus</button>\n    </>\n  );\n}\n\nexport const inputWithFocus = {\n  title: (\n    <>\n      <CodeInline>forwardRef()</CodeInline> & input + focus\n    </>\n  ),\n  date: '2021.09.26',\n  tagsArr: ['react', 'useRef', 'forwardRef', 'input', 'focus', 'basics', 'hook', 'DOM'],\n  abstract: 'abstract from the article',\n  articlesArr: [\n    {\n      type: 'text',\n      val: <>\n        To pass DOM element to a custom component via <CodeInline>React.useRef()</CodeInline> {' '}\n        we need to wrap a component into <CodeInline>React.forwardRef()</CodeInline> {' '}\n      </>,\n    },\n    {\n      type: 'code',\n      val: `\n        const Input = React.forwardRef((props, ref) => (\n          <input ref={ref} {...props} />\n        ));\n        \n        function InputWithFocus() {\n          const ref = React.useRef();\n          const focus = () => ref.current.focus();\n        \n          return (\n            <>\n              <Input\n                ref={ref}\n                placeholder=\"my input\"\n                style={{ padding: '5px', margin: '5px' }}\n              />\n              <button onClick={focus}>Focus</button>\n            </>\n          );\n        }\n      `,\n    },\n    {\n      type: 'output',\n      val: <InputWithFocus></InputWithFocus>,\n    },\n  ],\n};\n","import React, { useState } from 'react';\nimport { CodeInline } from '../../components/post components/Post';\n\nconst greenCss = { color: 'green' }\nconst redCss = { color: 'red' }\nconst marginCss = { margin: '10px' }\n\nfunction StateIsImmutable() {\n  const [state, setState] = useState([1, 2, 3]);\n  return (\n    <div>\n      <span>State value: </span> <span style={greenCss}>{JSON.stringify(state)}</span>\n      <div style={marginCss}>\n        <button\n          onClick={() => {\n            state.push(state[state.length - 1] + 1); \n            // incorrect\n            // state is updated, but not rendered\n\n            console.log(state)\n          }}\n        >\n          Add value directly to the state array\n        </button>\n        <span style={{...marginCss, ...redCss}}>ç</span>\n      </div>\n      <div style={marginCss}>\n        <button\n          onClick={() => {\n            setState([...state, state[state.length - 1] + 1]);\n            console.log(state);\n          }}\n        >\n          Assign to the state a new array with additional value.\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport const immutableState = {\n  title: 'React state is immutable',\n  date: '2021.09.28',\n  tagsArr: ['react', 'state', 'useState', 'immutable', 'basics', 'hook'],\n  abstract: 'abstract from the article',\n  articlesArr: [\n    {\n      type: 'text',\n      val: (\n        <>\n          If you mutate data like <CodeInline>myData.a.b.push(10)</CodeInline>{' '}\n          there is no way of determining which data has changed since the\n          previous copy has been overwritten\n        </>\n      ),\n    },\n    {\n      type: 'text',\n      val: (\n        <>\n          Instead, you need to create a new copy of{' '}\n          <CodeInline>myData</CodeInline>\n          and change only the parts of it that need to be changed. For state\n          data React can compare the old copy with the new one.\n        </>\n      ),\n    },\n    {\n      type: 'code',\n      val: \n      `\n      import React, { useState } from 'react';\n\n      const greenCss = { color: 'green' }\n      const redCss = { color: 'red' }\n      const marginCss = { margin: '10px' }\n\n      function StateIsImmutable() {\n        const [state, setState] = useState([1, 2, 3]);\n        return (\n          <div>\n            <span>State value: </span> <span style={greenCss}>{JSON.stringify(state)}</span>\n            <div style={marginCss}>\n              <button\n                onClick={() => {\n                  state.push(state[state.length - 1] + 1); \n                  // incorrect\n                  // state is updated, but not rendered\n                  console.log(state)\n                }}\n              >\n                Add value directly to the state array\n              </button>\n              <span style={{...marginCss, ...redCss}}>state is updated, but not rendered!</span>\n            </div>\n            <div style={marginCss}>\n              <button\n                onClick={() => {\n                  setState([...state, state[state.length - 1] + 1]);\n                  console.log(state)\n                }}\n              >\n                Assign to the state a new array with additional value.\n              </button>\n            </div>\n          </div>\n        );\n      }\n      `,\n    },\n    {\n      type: 'output',\n      val: <StateIsImmutable></StateIsImmutable>,\n    },\n  ],\n};\n","import React from 'react';\nimport { CodeInline } from '../../components/post components/Post';\n\nexport const jsVsJsx = {\n  title: 'JS vs JSX',\n  date: '2021.09.23',\n  tagsArr: ['react', 'jsx', 'createElement', 'basics'],\n  abstract: 'abstract from the article',\n  articlesArr: [\n    {\n      type: 'text',\n      val: <>\n        In React we generate html by javascript. We can use <CodeInline>React.createElement()</CodeInline> function from the React library to add an HTML element or we can use JSX syntax.\n      </>\n    },\n    { \n      type: 'text', \n      val: <>\n        Native <span style={{ fontWeight: 600 }}> JS </span>\n      </>  \n    },\n    { \n      type: 'code', \n      val: `\n        import React from 'react';\n\n        React.createElement('div', {},\n          React.createElement(\n            'button', \n            {\n              disabled: false,\n              onClick: () => {\n                alert('clicked')\n              } \n            }, \n            'Click me'\n          )\n        )\n      `\n    },\n    { \n      type: 'output', \n      val: React.createElement('div', {},\n        React.createElement(\n          'button', \n          {\n            disabled: false,\n            onClick: () => {\n              alert('clicked')\n            }\n          }, \n          'Click me'\n        )\n      ) \n    },\n    { \n      type: 'text', \n      val: 'JSX' \n    },\n    { \n      type: 'code', \n      val: `\n        import React from 'react';\n\n        <div>\n          <button \n            disabled={false} \n            onClick={() => alert('clicked')}\n          >\n            Click me\n          </button>\n        </div>\n      ` \n    },\n    { \n      type: 'output', \n      val: \n        <div>\n          <button \n            disabled={false} \n            onClick={() => alert('clicked')}\n          >\n            Click me\n          </button>\n        </div>\n    },\n  ],\n};","import React from 'react';\nimport { CodeInline } from '../../components/post components/Post';\n\nfunction Component1(props) {\n  return (\n    <div>\n      props.prop1 = {props.prop1} <br/>\n      props.prop2 = {props.prop2} <br/>\n      props.prop3 = {props.prop3} <br/>\n    </div>\n  );\n}\n\nfunction Component2({ prop1, prop2, prop3 }) {\n  return (\n    <div>\n      prop1 = {prop1} <br/>\n      prop2 = {prop2} <br/>\n      prop3 = {prop3} <br/>\n    </div>\n  );\n}\n\nfunction Component3({ prop1, prop2, prop3 }) {\n  return (\n    <div>\n      prop1 = {prop1} <br/>\n      prop2 = {prop2} <br/>\n      prop3 = {prop3} <br/>\n    </div>\n  );\n}\n\nconst userProps = {\n  prop1: 'Hello',\n  prop2: 'my',\n  prop3: 'friend',\n}\n\nexport const passProps = {\n  title: 'How to pass props',\n  date: '2021.09.29',\n  tagsArr: ['react', 'props', 'component', 'basics'],\n  abstract: 'abstract from the article',\n  articlesArr: [\n    {\n      type: 'text',\n      val: (\n        <>\n          We can pass props into a component and take them from the <CodeInline>props</CodeInline> object.\n        </>\n      ),\n    },\n    {\n      type: 'code',\n      val: `\n        function Component1(props) {\n          return (\n            <div>\n              props.prop1 = {props.prop1} <br/> // hello\n              props.prop2 = {props.prop2} <br/> // my\n              props.prop3 = {props.prop3} <br/> // friend\n            </div>\n          );\n        }\n      `,\n    },\n    {\n      type: 'code',\n      val: `\n        <Component1 prop1='hello' prop2='my' prop3='friend' />\n      `,\n    },\n    {\n      type: 'output',\n      val: (\n        <Component1 prop1='hello' prop2='my' prop3='friend' />\n      ),\n    },\n\n    {\n      type: 'text',\n      val: (\n        <>\n          <CodeInline>props</CodeInline> object can be destructured in a component.\n        </>\n      ),\n    },\n    {\n      type: 'code',\n      val: `\n        function Component2({ prop1, prop2, prop3 }) {\n          return (\n            <div>\n              prop1 = {prop1} <br/> // hello\n              prop2 = {prop2} <br/> // my\n              prop3 = {prop3} <br/> // friend\n            </div>\n          );\n        }\n      `,\n    },\n    {\n      type: 'code',\n      val: `\n        <Component2 prop1='hello' prop2='my' prop3='friend'/>\n      `,\n    },\n    {\n      type: 'output',\n      val: (\n        <Component2 prop1='hello' prop2='my' prop3='friend'/>\n      ),\n    },\n    {\n      type: 'text',\n      val: (\n        <>\n          We can pass wrapped props at ones using spread operator\n          <CodeInline>{'{...props}'}</CodeInline>\n          .\n        </>\n      ),\n    },\n    {\n      type: 'code',\n      val: `\n        function Component3({ prop1, prop2, prop3 }) {\n          return (\n            <div>\n              prop1 = {prop1} <br/> // hello\n              prop2 = {prop2} <br/> // my\n              prop3 = {prop3} <br/> // friend\n            </div>\n          );\n        }\n      `,\n    },\n    {\n      type: 'code',\n      val: `\n        const userProps = {\n          prop1: 'Hello',\n          prop2: 'my',\n          prop3: 'friend',\n        }\n      `\n    },\n    {\n      type: 'code',\n      val: `\n        <Component3 {...userProps} />\n      `,\n    },\n    {\n      type: 'output',\n      val: (\n        <Component3 {...userProps} />\n      ),\n    },\n  ],\n};\n","import React, { useState } from 'react';\nimport './styles.css';\n\nfunction ToDoApp() {\n  function getToDoList() {\n    if (!localStorage.getItem('toDoArr')) {\n      localStorage.setItem(\n        'toDoArr',\n        JSON.stringify([\n          {\n            toDoText: 'wipe the dust',\n            id: Math.random(),\n          },\n          {\n            toDoText: 'walk the dog out',\n            id: Math.random(),\n          },\n          {\n            toDoText: 'call parents',\n            id: Math.random(),\n          },\n        ])\n      );\n    }\n\n    return JSON.parse(localStorage.getItem('toDoArr'));\n  }\n\n  const [toDoListState, setToDoListState] = useState(getToDoList);\n\n  return (\n    <div className=\"toDoApp\">\n      <AddItemForm\n        toDoListState={toDoListState}\n        setToDoListState={setToDoListState}\n        getToDoList={getToDoList}\n      />\n      <ToDoList\n        toDoListState={toDoListState}\n        setToDoListState={setToDoListState}\n        getToDoList={getToDoList}\n      />\n    </div>\n  );\n}\n\nfunction AddItemForm({ toDoListState, setToDoListState, getToDoList }) {\n  const [inputState, setInputState] = useState('');\n\n  function addNewItem(e) {\n    e.preventDefault();\n    if (!inputState) return;\n    const newList = [\n      {\n        toDoText: inputState,\n        id: Math.random(),\n      },\n      ...toDoListState,\n    ];\n    localStorage.setItem('toDoArr', JSON.stringify(newList));\n    setToDoListState(getToDoList());\n    setInputState('');\n  }\n\n  return (\n    <form>\n      <input\n        type=\"text\"\n        placeholder=\"what to do?\"\n        value={inputState}\n        onChange={e => setInputState(e.target.value)}\n      />\n      <button onClick={addNewItem}>Add</button>\n    </form>\n  );\n}\n\nfunction ToDoList({ setToDoListState, toDoListState, getToDoList }) {\n  return (\n    <div className=\"toDoList\">\n      {toDoListState.map(toDoItem => (\n        <ToDoItem\n          toDoText={toDoItem.toDoText}\n          key={toDoItem.id}\n          id={toDoItem.id}\n          toDoListState={toDoListState}\n          setToDoListState={setToDoListState}\n          getToDoList={getToDoList}\n        ></ToDoItem>\n      ))}\n    </div>\n  );\n}\n\nfunction ToDoItem({\n  toDoText,\n  id,\n  toDoListState,\n  setToDoListState,\n  getToDoList,\n}) {\n  function removeItem() {\n    const newList = toDoListState.filter(o => o.id !== id);\n    localStorage.setItem('toDoArr', JSON.stringify(newList));\n    setToDoListState(getToDoList());\n  }\n\n  return (\n    <div className=\"toDoItem\">\n      <div className=\"toDoText\">{toDoText}</div>\n      <button className=\"delBtn\" onClick={removeItem}>\n        Remove\n      </button>\n    </div>\n  );\n}\n\nexport const toDoArticle = {\n  title: 'ToDo app',\n  date: '2021.09.26',\n  tagsArr: ['react', 'ToDo', 'basics'],\n  abstract: 'abstract from the article',\n  articlesArr: [\n    {\n      type: 'text',\n      val: `Let's make the simplest todo list with local data storage.`,\n    },\n    {\n      type: 'code',\n      val: `\n        import React, { useState } from 'react';\n        import './styles.css';\n\n        function ToDoApp() {\n          function getToDoList() {\n            if (!localStorage.getItem('toDoArr')) {\n              localStorage.setItem(\n                'toDoArr',\n                JSON.stringify([\n                  {\n                    toDoText: 'wipe the dust',\n                    id: Math.random(),\n                  },\n                  {\n                    toDoText: 'walk the dog out',\n                    id: Math.random(),\n                  },\n                  {\n                    toDoText: 'call parents',\n                    id: Math.random(),\n                  },\n                ])\n              );\n            }\n\n            return JSON.parse(localStorage.getItem('toDoArr'));\n          }\n\n          const [toDoListState, setToDoListState] = useState(getToDoList);\n\n          return (\n            <div className=\"toDoApp\">\n              <AddItemForm\n                toDoListState={toDoListState}\n                setToDoListState={setToDoListState}\n                getToDoList={getToDoList}\n              ></AddItemForm>\n              <ToDoList\n                toDoListState={toDoListState}\n                setToDoListState={setToDoListState}\n                getToDoList={getToDoList}\n              ></ToDoList>\n            </div>\n          );\n        }\n\n        function AddItemForm({ toDoListState, setToDoListState, getToDoList }) {\n          const [inputState, setInputState] = useState('');\n\n          function addNewItem(e) {\n            e.preventDefault();\n            if (!inputState) return;\n            const newList = [\n              {\n                toDoText: inputState,\n                id: Math.random(),\n              },\n              ...toDoListState,\n            ];\n            localStorage.setItem('toDoArr', JSON.stringify(newList));\n            setToDoListState(getToDoList());\n            setInputState('');\n          }\n\n          return (\n            <form>\n              <input\n                type=\"text\"\n                placeholder=\"what to do?\"\n                value={inputState}\n                onChange={e => setInputState(e.target.value)}\n              />\n              <button onClick={addNewItem}>Add</button>\n            </form>\n          );\n        }\n\n        function ToDoList({ setToDoListState, toDoListState, getToDoList }) {\n          return (\n            <div className=\"toDoList\">\n              {toDoListState.map(toDoItem => (\n                <ToDoItem\n                  toDoText={toDoItem.toDoText}\n                  key={toDoItem.id}\n                  id={toDoItem.id}\n                  toDoListState={toDoListState}\n                  setToDoListState={setToDoListState}\n                  getToDoList={getToDoList}\n                ></ToDoItem>\n              ))}\n            </div>\n          );\n        }\n\n        function ToDoItem({\n          toDoText,\n          id,\n          toDoListState,\n          setToDoListState,\n          getToDoList,\n        }) {\n          function removeItem() {\n            const newList = toDoListState.filter(o => o.id !== id);\n            localStorage.setItem('toDoArr', JSON.stringify(newList));\n            setToDoListState(getToDoList());\n          }\n\n          return (\n            <div className=\"toDoItem\">\n              <div className=\"toDoText\">{toDoText}</div>\n              <button className=\"delBtn\" onClick={removeItem}>\n                Remove\n              </button>\n            </div>\n          );\n        }\n      `,\n    },\n    {\n      type: 'output',\n      val: <ToDoApp></ToDoApp>,\n    },\n  ],\n};\n","import React, { useState } from 'react';\nimport { CodeInline } from '../../components/post components/Post';\n\nfunction InputWithState() {\n  const [inpVal, setInpVal] = useState('initial text');\n\n  return (\n    <>\n      <h1>{inpVal}</h1>\n      <input\n        type=\"text\"\n        value={inpVal}\n        onChange={e => setInpVal(e.target.value)}\n      />\n    </>\n  );\n}\n\nexport const useStateAndInput = {\n  title: (\n    <>\n      <CodeInline>useState()</CodeInline> & input\n    </>\n  ),\n  date: '2021.09.26',\n  tagsArr: ['react', 'state', 'useState', 'input', 'basics', 'hook'],\n  abstract: 'abstract from the article',\n  articlesArr: [\n    {\n      type: 'text',\n      val: (\n        <>\n          We have to use <CodeInline>useState()</CodeInline> to be able to see\n          an input changes on the screen.\n        </>\n      ),\n    },\n    {\n      type: 'text',\n      val: 'Otherwise react does not know what to render.',\n    },\n    {\n      type: 'code',\n      val: `\n        import React, { useState } from 'react';\n\n        function InputWithState() {\n          const [inpVal, setInpVal] = useState('initial text');\n\n          return (\n            <>\n              <h1>{inpVal}</h1>\n              <input\n                type=\"text\"\n                value={inpVal}\n                onChange={e => setInpVal(e.target.value)}\n              />\n            </>\n          );\n        }\n      `,\n    },\n    {\n      type: 'output',\n      val: <InputWithState></InputWithState>,\n    },\n  ],\n};\n","import React, { useState } from 'react';\nimport { Link, CodeInline } from '../../components/post components/Post';\n\nconst btnCss = {padding: '5px 20px', margin: '10px 10px 0px 0px', cursor: 'pointer',}\n\nfunction ComponentWithoutState() {\n  let likes = 0;\n\n  function increment() {\n    likes += 1\n    alert(likes)\n  }\n\n  function decrement() {\n    likes -= 1\n    alert(likes)\n  }\n  \n  return (\n    <>\n      <h1>{likes}</h1>\n      <button onClick={increment} style={btnCss}>+1</button>\n      <button onClick={decrement} style={btnCss}>-1</button>\n    </>\n  )\n}\n\nfunction ComponentWithState() {\n\n  const [likes, setLikes] = useState(0)\n\n  function increment() {\n    setLikes(likes + 1) \n  }\n  \n  function decrement() {\n    setLikes(likes - 1) \n  }\n\n  \n\n  return (\n    <>\n      <h1>{likes}</h1>\n      <button onClick={increment} style={btnCss}>+1</button>\n      <button onClick={decrement} style={btnCss}>-1</button>\n    </>\n  )\n}\n\nexport const whyToUseState = {\n  title: <>Why to use <CodeInline>useState()</CodeInline></>,\n  date: '2021.09.25',\n  tagsArr: ['react', 'state', 'useState', 'basics', 'hook'],\n  abstract: 'abstract from the article',\n  articlesArr: [\n    {\n      type: 'text',\n      val: <>Let's create an incrementor.</>,\n    }, \n    {\n      type: 'code',\n      val: `\n        import React from 'react'\n        const btnCss = {padding: '5px 20px', margin: '10px 10px 0px 0px', cursor: 'pointer',}\n\n        function ComponentWithoutState() {\n          let likes = 0;\n        \n          function increment() {\n            likes += 1\n            alert(likes)\n          }\n        \n          function decrement() {\n            likes -= 1\n            alert(likes)\n          }\n          \n          return (\n            <>\n              <h1>{likes}</h1>\n              <button onClick={increment} style={btnCss}>+1</button>\n              <button onClick={decrement} style={btnCss}>-1</button>\n            </>\n          )\n        }\n      `\n    },\n    {\n      type: 'text',\n      val: `We can see value change in alert, but not on the screen.`,\n    },\n    {\n      type: 'output',\n      val: (\n        <ComponentWithoutState/>\n      ),\n    },\n    {\n      type: 'text',\n      val: <>As far as react renders only changes in virtual DOM, we need \n      to tell him about changes. It can be done with <CodeInline>useState()</CodeInline>  \n      {' '} <Link link={'https://reactjs.org/docs/hooks-state.html'}>hook</Link>.</>,\n    },\n    {\n      type: 'code',\n      val: `\n        import React, { useState } from 'react'\n        const btnCss = {padding: '5px 20px', marginRight: '10px', cursor: 'pointer',}\n\n        const [count, setCount] = useState(0)\n\n        function ComponentWithState() {\n\n          const [likes, setLikes] = useState(0)\n        \n          function increment() {\n            setLikes(likes + 1) \n          }\n          \n          function decrement() {\n            setLikes(likes - 1) \n          }\n        \n          return (\n            <>\n              <h1>{likes}</h1>\n              <button onClick={increment} style={btnCss}>+1</button>\n              <button onClick={decrement} style={btnCss}>-1</button>\n            </>\n          )\n        }\n\n      `\n    },\n    {\n      type: 'output',\n      val: (\n        <ComponentWithState/>\n      ),\n    },\n    {\n      type: 'text',\n      val: (<>\n        We initialize <CodeInline>likes</CodeInline> state by <CodeInline>const [likes, setLikes] = useState(0)</CodeInline>\n      </>)\n    },\n    {\n      type: 'text',\n      val: (<>\n        <CodeInline>setLikes</CodeInline> is a function to change a state value.\n      </>)\n    },\n    {\n      type: 'text',\n      val: (<>\n        We pass a new state value as an argument <CodeInline>setLikes(likes + 1)</CodeInline>\n      </>)\n    },\n    {\n      type: 'text',\n      val: (<>\n        Initial state <CodeInline>0</CodeInline> is passed as an argument in <CodeInline>useState(0)</CodeInline> \n      </>)\n    }\n\n  ],\n};\n","// import React, { useState, useEffect } from 'react'\nimport { classVsFunctionComponent } from './classVsFunctionComponent/classVsFunctionComponent'\nimport { controlledVsUncontrolledComponent } from './controlledVsUncontrolledComponent/controlledVsUncontrolledComponent'\nimport { forwardLotsOfProps } from './forwardLotsOfProps/forwardLotsOfProps'\nimport { inputWithFocus } from './forwardRef/forwardRef'\nimport { immutableState } from './immutableState/immutabilityOfState'\nimport { jsVsJsx } from './jsVsJsx/jsVsJsx'\nimport { passProps } from './passProps/passProps'\nimport { toDoArticle } from './toDoArticle/toDoArticle'\nimport { useStateAndInput } from './useStateAndInput/useStateAndInput'\nimport { whyToUseState } from './whyToUseState/whyToUseState'\n\nexport const allPosts = [\n  inputWithFocus,\n  controlledVsUncontrolledComponent,\n  forwardLotsOfProps,\n  passProps,\n  immutableState,\n  toDoArticle,\n  classVsFunctionComponent,\n  useStateAndInput,\n  whyToUseState,\n  jsVsJsx,\n]","import React from 'react';\nimport uuid from 'react-uuid';\n//import './App.css';\nimport styled from 'styled-components';\nimport { NavBar } from './components/nav/Nav.js';\nimport { Post } from './components/post components/Post.js';\nimport { allPosts } from './posts/allPosts.js';\n\nconst StyledApp = styled.div`\n  text-align: left;\n  /* background-image: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\n  background-image: linear-gradient(to top, #e6e9f0 0%, #eef1f5 100%); */\n\n  background: #c9ccd3;\n  background-image: linear-gradient(\n    -180deg,\n    rgba(255, 255, 255, 0.5) 0%,\n    rgba(0, 0, 0, 0.5) 100%\n  );\n  background-blend-mode: lighten;\n\n  min-height: 100vh;\n  color: whitesmoke;\n`;\n\nconst StyledMain = styled.main`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding-bottom: 30px;\n`;\n\nfunction App() {\n  console.log('App rendered');\n  console.log(allPosts);\n\n  return (\n    <StyledApp>\n      <NavBar />\n      <StyledMain>\n        {allPosts.map(item => (\n          <Post post={item} key={uuid()} />\n        ))}\n      </StyledMain>\n    </StyledApp>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport {createGlobalStyle} from 'styled-components'\n\nconst StyleReset = createGlobalStyle `\n  * {\n    box-sizing: border-box;\n    margin: 0px;\n    padding: 0px;\n  }\n\n  \n  a {\n    text-decoration: none;\n  }\n\n\n  body {\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n      monospace;\n  }\n`\n\nReactDOM.render(\n  <React.StrictMode>\n    <StyleReset />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}