{"version":3,"sources":["components/nav/NavStyledComponents.js","components/nav/Nav.js","components/post components/Post.js","components/search/Search.js","posts/classVsFunctionComponent/classVsFunctionComponent.jsx","posts/controlledVsUncontrolledComponent/controlledVsUncontrolledComponent.js","posts/forwardLotsOfProps/forwardLotsOfProps.js","posts/forwardRef/forwardRef.js","posts/immutableState/immutabilityOfState.js","posts/jsVsJsx/jsVsJsx.js","posts/passProps/passProps.js","posts/updateValueFromChildComponent/updateValueFromChildComponent.js","posts/toDoList/toDoList.js","posts/useStateAndInput/useStateAndInput.js","posts/whyToUseState/whyToUseState.js","posts/allPosts.js","App.js","index.js"],"names":["bg","textColor","navSize","border","NavStyled","styled","nav","NavItemStyled","ul","Icon","a","parseInt","NavItemLi","li","slideDownAnimation","keyframes","slideDownAnimationPhone","MenuContainer","div","appearAnimation","MenuLink","props","color","willOpenTopMenu","css","MenuIcon","MenuIconRight","MenuText","span","BackLink","CloseLink","appleIcon","React","createElement","FaApple","reactIcon","FaReact","redHatIcon","FaRedhat","plusIcon","AiOutlinePlus","closeIcon","IoClose","navContent","navItem","visible","icon","text","menu","id","shortid","generate","menuItems","iconLeft","NavBar","useState","openedMenuState","setOpenedMenuState","showMenuContainerState","setShowMenuContainerState","showMenu","o","console","log","isMenu","closeMenu","underNavItemId","prevMenu","changeMenu","subMenu","e","stopPropagation","pop","navKeyboardHandler","key","isNestedMenu","length","useEffect","window","addEventListener","removeEventListener","map","navObj","NavItem","href","onClick","Menu","BackItem","CloseItem","menuItem","MenuItem","subMenuExists","className","Post","Title","post","title","StyledSection","Article","arr","articlesArr","el","index","type","Text","val","uuid","Code","Output","ArticleNum","num","sequentialNum","Tags","tagsArr","date","StyledTitle","h3","children","section","article","StyledText","p","Prism","plugins","NormalizeWhitespace","setDefaults","StyledTags","tag","StyledTag","StyledDate","time","Date","StyledOutput","StyleLink","Link","link","target","StyleCode","code","CodeInline","StyleArticleNum","FormStyled","form","SearchPreviewContainer","SearchPreviewStyled","SearchPreviewItem","summary","PostsOnScreen","style","textAlign","marginTop","position","top","width","foundPostsNumState","fontSize","fontWeight","marginLeft","cursor","setFilterFoundPostsState","setPostsOnScreenState","allPosts","setSearchValState","Search","setFoundPostsNumState","foundPostsArrState","setFoundPostsArrState","filterFoundPostsState","txtFromJSXOrStr","Array","join","FoundPosts","ending","searchBtnClickHandler","splitWithDelimiter","str","delimiter","toLowerCase","indexOf","push","strBeforeDelimiter","substring","delimiterAsInStr","slice","articleWithHighlight","searchStr","allText","forEach","background","preventDefault","searchValState","setShowFoundContainerState","name","value","placeholder","autoComplete","onChange","inputVal","updateSearchValState","filteredPostsAfterSearchArr","filter","item","includes","some","returnFilteredPostsArrAfterSearch","showFoundContainerState","btnCss","padding","margin","ClassComponent","state","likes","increment","bind","decrement","this","setState","Component","toRender1","FunctionComponent","setLikes","toRender2","classVsFunctionComponent","abstract","ControlledInput","inpVal","setInpVal","UncontrolledInput","inpRef","useRef","ref","current","controlledVsUncontrolledComponent","ParentComponent","JSON","stringify","ChildComponent","toRender","prop1","prop2","prop3","forwardLotsOfProps","Input","forwardRef","InputWithFocus","focus","greenCss","redCss","marginCss","StateIsImmutable","immutableState","jsVsJsx","disabled","alert","Component1","Component2","Component3","toRender3","passProps","Parent","Child","updateValueFromChildComponent","StyledContainer","ToDoApp","getToDoList","localStorage","getItem","setItem","toDoText","Math","random","parse","toDoListState","setToDoListState","AddItemForm","ToDoList","inputState","setInputState","newList","toDoItem","ToDoItem","toDoList","InputWithState","useStateAndInput","ComponentWithoutState","ComponentWithState","posts","StyledApp","StyledMain","main","App","postsOnScreenState","highlightAll","context","document","querySelector","instance","Mark","unmark","mark","returnPostsMemo","useMemo","StyleReset","createGlobalStyle","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.eb25a23c.chunk.js","sourcesContent":["import styled, { keyframes, css } from 'styled-components';\r\n\r\n//#region CSS const\r\n\r\nconst bg = '#242526';\r\nconst textColor = '#dadce1';\r\nconst navSize = '60px';\r\nconst border = '1px solid #474a4d';\r\nconst borderRadius = '8px';\r\n\r\n//#endregion\r\n\r\nexport const NavStyled = styled.nav`\r\n  height: ${navSize};\r\n  /* background-color: ${bg}; */\r\n  padding: 0 1rem;\r\n  border-bottom: ${border};\r\n  position: relative;\r\n  background-image: linear-gradient(to right, #434343 0%, black 100%);\r\n`;\r\n\r\nexport const NavItemStyled = styled.ul`\r\n  max-width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nexport const Icon = styled.a`\r\n  width: ${parseInt(navSize) * 0.5}px;\r\n  height: ${parseInt(navSize) * 0.5}px;\r\n  background-color: #484a4d;\r\n  border-radius: 50%;\r\n  padding: 5px;\r\n  margin: 2px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: filter 300ms;\r\n  color: ${textColor};\r\n\r\n  svg {\r\n    fill: ${textColor};\r\n    width: 20px;\r\n    height: 20px;\r\n    margin-top: 1px;\r\n  }\r\n\r\n  &:hover {\r\n    filter: brightness(1.2);\r\n  }\r\n`;\r\n\r\nexport const NavItemLi = styled.li`\r\n  width: ${parseInt(navSize) * 0.8}px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst slideDownAnimation = keyframes`\r\n  from {\r\n    /* transform: scaleY(0) translateX(-45%); */\r\n    transform: translateY(-50%) translateX(-45%);\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    /* transform: scaleY(1) translateX(-45%); */\r\n    transform: translateY(0%) translateX(-45%);\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst slideDownAnimationPhone = keyframes`\r\n  from {\r\n    /* transform: scaleY(0); */\r\n    transform: translateY(-50%);\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    /* transform: scaleY(1); */\r\n    transform: translateY(0%);\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const MenuContainer = styled.div`\r\n  position: absolute;\r\n  top: 110%;\r\n  width: 300px;\r\n  /* width: auto; */\r\n  background-color: ${bg};\r\n  \r\n  border: ${border};\r\n  border-radius: ${borderRadius};\r\n  padding: 1rem;\r\n  overflow: hidden;\r\n  z-index: 666;\r\n\r\n  animation-name: ${slideDownAnimation};\r\n  animation-duration: 500ms;\r\n  animation-delay: 0ms;\r\n  animation-iteration-count: 1;\r\n  animation-direction: normal;\r\n  animation-timing-function: cubic-bezier(0, 1, 0.5, 1);\r\n  animation-fill-mode: forwards;\r\n  transform-origin: top;\r\n\r\n  @media screen and (max-width: 480px) {\r\n    transform: translateX(0px) !important;\r\n    left: 10px;\r\n    right: 10px;\r\n    width: auto;\r\n    animation-name: ${slideDownAnimationPhone};\r\n  }\r\n`;\r\n\r\nconst appearAnimation = keyframes`\r\n  from {\r\n    transform: translateX(-50%);\r\n  }\r\n  to {\r\n    transform: translateX(0);\r\n  }\r\n`;\r\n\r\n// todo: use props to animate only nested menu\r\n// todo: do not animate close & back\r\nexport const MenuLink = styled.a`\r\n  height: 50px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-radius: ${borderRadius};\r\n  padding: 0.5rem;\r\n  color: ${textColor};\r\n  white-space: nowrap;\r\n  /* animation: ${appearAnimation} 200ms linear; */\r\n  color: ${props => props.color};\r\n  animation: ${props =>\r\n    // @ts-ignore\r\n    props.willOpenTopMenu\r\n      ? css`none`\r\n      : css`${appearAnimation} 200ms cubic-bezier(0, 1, 0.5, 1)`\r\n  };\r\n\r\n  .left-part {\r\n    width: 100%;\r\n    display: inline-flex;\r\n    flex-direction: row;\r\n    align-content: center;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    flex-wrap: nowrap;\r\n  }\r\n\r\n  .right-part {\r\n    margin-left: 40px;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: #525357;\r\n  }\r\n`;\r\n\r\nexport const MenuIcon = styled(Icon)`\r\n  &:hover {\r\n    filter: none;\r\n  }\r\n`;\r\n\r\nexport const MenuIconRight = styled(Icon)`\r\n  background-color: transparent;\r\n  margin-right: -5px;\r\n`;\r\n\r\nexport const MenuText = styled.span`\r\n  margin-left: 10px;\r\n  text-overflow: ellipsis;\r\n  overflow:hidden;\r\n  white-space:nowrap;\r\n`;\r\n\r\nexport const BackLink = styled(MenuLink)`\r\n  color: #858383;\r\n  animation: none;\r\n`;\r\n\r\nexport const CloseLink = styled(MenuLink)`\r\n  color: #858383;\r\n  animation: none;\r\n`;\r\n","// ! how to make similar hamburger, which dynamically pop up when there is no space\r\n// ! we can not grab an el with querySelector as we do in native JS\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport shortid from 'shortid';\r\n// import styled components\r\nimport {\r\n  NavStyled,\r\n  NavItemStyled,\r\n  Icon,\r\n  NavItemLi,\r\n  MenuContainer,\r\n  MenuLink,\r\n  MenuIcon,\r\n  MenuIconRight,\r\n  MenuText,\r\n  BackLink,\r\n  CloseLink,\r\n} from './NavStyledComponents';\r\n//import './nav.css';\r\n\r\n// import & set icons\r\nimport { FaApple } from 'react-icons/fa';\r\nimport { FaReact } from 'react-icons/fa';\r\nimport { FaRedhat } from 'react-icons/fa';\r\nimport { AiOutlinePlus } from 'react-icons/ai';\r\nimport { FaChevronRight as RightArrowIcon } from 'react-icons/fa';\r\n// can use alias with 'as'\r\nimport { FaChevronLeft as LeftArrowIcon } from 'react-icons/fa';\r\nimport { IoClose } from 'react-icons/io5';\r\n\r\nconst appleIcon = React.createElement(FaApple, {});\r\nconst reactIcon = React.createElement(FaReact, {});\r\nconst redHatIcon = React.createElement(FaRedhat, {});\r\nconst plusIcon = React.createElement(AiOutlinePlus, {});\r\n// can insert component as a JS variable instead of JSX tag\r\nconst closeIcon = React.createElement(IoClose, {});\r\n\r\n// menu structure\r\nconst navContent = [\r\n  {\r\n    navItem: true,\r\n    visible: true,\r\n    icon: appleIcon,\r\n    text: '',\r\n    menu: null,\r\n    id: shortid.generate(),\r\n  },\r\n  {\r\n    navItem: true,\r\n    visible: true,\r\n    icon: reactIcon,\r\n    text: '',\r\n    menu: null,\r\n    id: shortid.generate(),\r\n  },\r\n  {\r\n    navItem: true,\r\n    visible: true,\r\n    icon: redHatIcon,\r\n    text: '',\r\n    menu: {\r\n      visible: false,\r\n      menuItems: [\r\n        {\r\n          text: 'text',\r\n          iconLeft: '😇',\r\n          menu: null,\r\n          id: shortid.generate(),\r\n        },\r\n        {\r\n          text: 'text',\r\n          iconLeft: '',\r\n          menu: null,\r\n          id: shortid.generate(),\r\n        },\r\n        {\r\n          text: 'text',\r\n          iconLeft: '😇',\r\n          menu: null,\r\n          id: shortid.generate(),\r\n        },\r\n      ],\r\n    },\r\n    id: shortid.generate(),\r\n  },\r\n  {\r\n    navItem: true,\r\n    visible: true,\r\n    icon: plusIcon,\r\n    text: '',\r\n    menu: {\r\n      visible: true,\r\n      menuItems: [\r\n        {\r\n          text: 'text',\r\n          iconLeft: '😇',\r\n          menu: {\r\n            visible: false,\r\n            menuItems: [\r\n              {\r\n                text: 'text',\r\n                iconLeft: '😎',\r\n                menu: null,\r\n                id: shortid.generate(),\r\n              },\r\n              {\r\n                text: 'text',\r\n                iconLeft: '😎',\r\n                menu: null,\r\n                id: shortid.generate(),\r\n              },\r\n              {\r\n                text: 'text',\r\n                iconLeft: '😎',\r\n                menu: {\r\n                  visible: false,\r\n                  menuItems: [\r\n                    {\r\n                      text: 'long long long long long long long long text',\r\n                      iconLeft: '🥸',\r\n                      menu: null,\r\n                      id: shortid.generate(),\r\n                    },\r\n                    {\r\n                      text: 'text',\r\n                      iconLeft: '🥸',\r\n                      menu: null,\r\n                      id: shortid.generate(),\r\n                    },\r\n                    {\r\n                      text: 'text',\r\n                      iconLeft: '🥸',\r\n                      menu: null,\r\n                      id: shortid.generate(),\r\n                    },\r\n                    {\r\n                      text: 'text',\r\n                      iconLeft: '🥸',\r\n                      menu: null,\r\n                      id: shortid.generate(),\r\n                    },\r\n                    {\r\n                      text: 'text',\r\n                      iconLeft: '🥸',\r\n                      menu: null,\r\n                      id: shortid.generate(),\r\n                    },\r\n                    {\r\n                      text: 'text',\r\n                      iconLeft: '🥸',\r\n                      menu: null,\r\n                      id: shortid.generate(),\r\n                    },\r\n                    {\r\n                      text: 'text',\r\n                      iconLeft: '🥸',\r\n                      menu: null,\r\n                      id: shortid.generate(),\r\n                    },\r\n                  ],\r\n                },\r\n                id: shortid.generate(),\r\n              },\r\n            ],\r\n          },\r\n          id: shortid.generate(),\r\n        },\r\n        {\r\n          text: 'text',\r\n          iconLeft: '😇',\r\n          menu: null,\r\n          id: shortid.generate(),\r\n        },\r\n        {\r\n          text: 'text',\r\n          iconLeft: '😇',\r\n          menu: null,\r\n          id: shortid.generate(),\r\n        },\r\n        {\r\n          text: 'text',\r\n          iconLeft: '😇',\r\n          menu: null,\r\n          id: shortid.generate(),\r\n        },\r\n        {\r\n          text: 'text',\r\n          iconLeft: '😇',\r\n          menu: null,\r\n          id: shortid.generate(),\r\n        },\r\n      ],\r\n    },\r\n    id: shortid.generate(),\r\n  },\r\n];\r\n\r\n// var\r\nlet willOpenTopMenu = true;\r\n\r\n// navbar\r\nexport function NavBar() {\r\n  // states\r\n  const [openedMenuState, setOpenedMenuState] = useState(null);\r\n  const [showMenuContainerState, setShowMenuContainerState] = useState(false);\r\n\r\n  //#region HELPER FUNCS\r\n\r\n  // ! helper funcs are in the top component\r\n  // ! wish to move them up, but they use 'state'\r\n  // ! but 'state' can be created only inside a component\r\n\r\n  // update state to show menu\r\n  function showMenu(o) {\r\n    console.log('showMenu() func fired');\r\n    const isMenu = o.menu;\r\n\r\n    if (!isMenu) {\r\n      console.log('no menu inside navItem');\r\n      // if menu container is ON, remove it\r\n      if (showMenuContainerState) {\r\n        closeMenu();\r\n        return;\r\n      }\r\n\r\n      if (!showMenuContainerState) {\r\n        console.log('no showing menu, do nothing');\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (isMenu) {\r\n      const menu = o.menu;\r\n      willOpenTopMenu = true;\r\n      setShowMenuContainerState(true);\r\n      setOpenedMenuState({\r\n        ...menu,\r\n        underNavItemId: o.id,\r\n        // just opened first menu, no previous menus exist yet\r\n        prevMenu: [],\r\n      });\r\n      console.log('showed menu');\r\n    }\r\n  }\r\n\r\n  // update state to change menu\r\n  function changeMenu(o) {\r\n    console.log('changeMenu() func fired');\r\n\r\n    const isSubMenu = o.menu;\r\n\r\n    if (!isSubMenu) {\r\n      console.log('no sub-menu');\r\n      return;\r\n    }\r\n\r\n    console.log('fall one level down in menu');\r\n    willOpenTopMenu = false;\r\n    const subMenu = o.menu;\r\n    setOpenedMenuState({\r\n      ...subMenu,\r\n      underNavItemId: openedMenuState.underNavItemId,\r\n      prevMenu: [...openedMenuState.prevMenu, openedMenuState],\r\n    });\r\n  }\r\n\r\n  // update state to close menu\r\n  function closeMenu(e) {\r\n    console.log('closeMenu() func fired');\r\n\r\n    e?.stopPropagation();\r\n\r\n    if (showMenuContainerState) {\r\n      willOpenTopMenu = false;\r\n      setShowMenuContainerState(false);\r\n      setOpenedMenuState(null);\r\n      console.log('closed existing menu');\r\n    }\r\n  }\r\n\r\n  // assign previous menu obj from array to a state to re-render it\r\n  function prevMenu(e) {\r\n    console.log('prevMenu() func fired');\r\n\r\n    e?.stopPropagation();\r\n    willOpenTopMenu = false;\r\n    setOpenedMenuState(openedMenuState.prevMenu.pop());\r\n    console.log('clicked Back');\r\n  }\r\n\r\n  // add actions for Escape, Backspace, Enter, Arrows\r\n  function navKeyboardHandler(e) {\r\n    console.log('navKeyboardHandler() func fired');\r\n\r\n    const { key } = e;\r\n    //console.log(keyCode);\r\n    if (!openedMenuState) return;\r\n    const isNestedMenu = openedMenuState?.prevMenu?.length > 0;\r\n    isNestedMenu && key === 'Backspace' && prevMenu();\r\n    !isNestedMenu && key === 'Backspace' && closeMenu();\r\n    key === 'Escape' && closeMenu();\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region EVENT LISTENERS FOR WINDOW\r\n\r\n  // use events to navigate over menu with keys\r\n  // ! we listen for keys on Window, how to do it properly no clue\r\n  // ! how to disable an event listener on menu close && activate on menu pop-up\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', navKeyboardHandler);\r\n    // ! do not understand why func is returned\r\n    return () => window.removeEventListener('keydown', navKeyboardHandler);\r\n  }, [openedMenuState]);\r\n\r\n  // close menu if click outside\r\n  // ! nice to listen for it on menu popup and stop listening when menu is off\r\n  useEffect(() => {\r\n    window.addEventListener('click', closeMenu);\r\n    return () => window.removeEventListener('click', closeMenu);\r\n  }, [openedMenuState]);\r\n\r\n  //#endregion\r\n\r\n  console.log('NavBar rendered');\r\n  return (\r\n    // ? we throw props over & over again, is there more elegant way?\r\n    <NavStyled>\r\n      <NavItemStyled>\r\n        {navContent.map(\r\n          navObj =>\r\n            navObj.visible && (\r\n              <NavItem\r\n                navObj={navObj}\r\n                openedMenuState={openedMenuState}\r\n                prevMenu={prevMenu}\r\n                closeMenu={closeMenu}\r\n                showMenu={showMenu}\r\n                changeMenu={changeMenu}\r\n                showMenuContainerState={showMenuContainerState}\r\n                willOpenTopMenu={willOpenTopMenu}\r\n                key={navObj.id}\r\n              />\r\n            )\r\n        )}\r\n      </NavItemStyled>\r\n    </NavStyled>\r\n  );\r\n}\r\n\r\n// component inside the NavBar = icons\r\nexport function NavItem({\r\n  navObj,\r\n  openedMenuState,\r\n  prevMenu,\r\n  closeMenu,\r\n  showMenu,\r\n  changeMenu,\r\n  showMenuContainerState,\r\n  willOpenTopMenu,\r\n}) {\r\n  console.log('NavItem rendered');\r\n  return (\r\n    <NavItemLi>\r\n      <Icon\r\n        href=\"#\"\r\n        onClick={e => {\r\n          e.stopPropagation();\r\n          showMenu(navObj);\r\n        }}\r\n        // onMouseEnter={() => showMenu(navItem)}\r\n        // onMouseLeave={() => closeMenu()}\r\n      >\r\n        {navObj.icon}\r\n        {navObj.text}\r\n      </Icon>\r\n\r\n      {/* show only specific menu for NavItem id, otherwise all existing menus are shown */}\r\n      {showMenuContainerState &&\r\n        openedMenuState?.underNavItemId === navObj.id && (\r\n          <Menu\r\n            openedMenuState={openedMenuState}\r\n            prevMenu={prevMenu}\r\n            closeMenu={closeMenu}\r\n            changeMenu={changeMenu}\r\n            willOpenTopMenu={willOpenTopMenu}\r\n          />\r\n        )}\r\n    </NavItemLi>\r\n  );\r\n}\r\n\r\n// menu with 'back' & 'close' buttons on top & MenuItems\r\nexport function Menu({\r\n  openedMenuState,\r\n  prevMenu,\r\n  closeMenu,\r\n  changeMenu,\r\n  willOpenTopMenu,\r\n}) {\r\n  // ! every time we press item inside MenuContainer\r\n  // ! we update the openedMenuState with changeMenu() func\r\n  // ! changeMenu() func updates openedMenuState, which triggers re-render\r\n  // ! ... and we should get new MenuContainer, but no!!!\r\n  // ! if we color els in dev tool we can see els are not touched\r\n  // ! how come?\r\n  console.log('Menu rendered');\r\n  const isNestedMenu = openedMenuState?.prevMenu?.length > 0;\r\n  return (\r\n    <MenuContainer>\r\n      {isNestedMenu && <BackItem prevMenu={prevMenu} />}\r\n      {!isNestedMenu && <CloseItem closeMenu={closeMenu} />}\r\n      {openedMenuState.menuItems.map(menuItem => (\r\n        <MenuItem\r\n          menuItem={menuItem}\r\n          changeMenu={changeMenu}\r\n          key={menuItem.id}\r\n          willOpenTopMenu={willOpenTopMenu}\r\n        />\r\n      ))}\r\n    </MenuContainer>\r\n  );\r\n}\r\n\r\n// ! MenuContainer width: auto\r\n// ! want to apply transition, which requires fixed width\r\n// ! such manipulations are done by JS, but how to grab an element in React?\r\n\r\n// item inside menu\r\nexport function MenuItem({ menuItem, changeMenu, willOpenTopMenu }) {\r\n  console.log('MenuItem rendered');\r\n  const subMenuExists = menuItem.menu;\r\n  return (\r\n    <MenuLink\r\n      href=\"#1\"\r\n      willOpenTopMenu={willOpenTopMenu}\r\n      onClick={e => {\r\n        e?.stopPropagation();\r\n        changeMenu(menuItem);\r\n      }}\r\n    >\r\n      <span className=\"left-part\">\r\n        <Icon>{menuItem.iconLeft}</Icon>\r\n        <MenuText>{menuItem.text}</MenuText>\r\n      </span>\r\n\r\n      {subMenuExists && (\r\n        <span className=\"right-part\">\r\n          <MenuIconRight>\r\n            <RightArrowIcon />\r\n          </MenuIconRight>\r\n        </span>\r\n      )}\r\n    </MenuLink>\r\n  );\r\n}\r\n\r\nexport function BackItem({ prevMenu }) {\r\n  console.log('BackItem rendered');\r\n  return (\r\n    <BackLink href=\"#1\" onClick={prevMenu}>\r\n      <span className=\"left-part\">\r\n        <MenuIcon>\r\n          <LeftArrowIcon />\r\n        </MenuIcon>\r\n        <MenuText>Back</MenuText>\r\n      </span>\r\n    </BackLink>\r\n  );\r\n}\r\n\r\nexport function CloseItem({ closeMenu }) {\r\n  console.log('CloseItem rendered');\r\n  return (\r\n    <CloseLink href=\"#1\" onClick={closeMenu}>\r\n      <span className=\"left-part\">\r\n        <MenuIcon>{closeIcon}</MenuIcon>\r\n        <MenuText>Close</MenuText>\r\n      </span>\r\n    </CloseLink>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\n// import styled, { keyframes, css } from 'styled-components';\r\nimport styled from 'styled-components/macro';\r\n// import './styles.css';\r\nimport Prism from 'prismjs';\r\nimport './../../../node_modules/prismjs/components/prism-jsx.js';\r\nimport './../../../node_modules/prismjs/plugins/normalize-whitespace/prism-normalize-whitespace.js';\r\nimport './prism.css';\r\nimport uuid from 'react-uuid';\r\n\r\nexport function returnArrOfJsx(arr) {\r\n  return arr.map((el, index) => {\r\n    if (el.type === 'text') return <Text key={uuid()}>{el.val}</Text>;\r\n    if (el.type === 'code') return <Code key={uuid()}>{el.val}</Code>;\r\n    if (el.type === 'output') return <Output key={uuid()}>{el.val}</Output>;\r\n    return <div key={uuid()}>{el.val}</div>;\r\n  });\r\n}\r\n\r\nexport function returnArrOfTags(tagsArr) {\r\n  return tagsArr.map((tag, index) => {\r\n    return <StyledTag key={uuid()}>{tag}</StyledTag>;\r\n  });\r\n}\r\n\r\nexport function Post(props) {\r\n  return (\r\n    <>\r\n      <Title>{props.post.title}</Title>\r\n      <StyledSection>\r\n        <Article>{returnArrOfJsx(props.post.articlesArr)}</Article>\r\n        <ArticleNum num={props.post.sequentialNum} />\r\n        <Tags>{props.post.tagsArr}</Tags>\r\n        <Date>{props.post.date}</Date>\r\n      </StyledSection>\r\n    </>\r\n  );\r\n}\r\n\r\nconst StyledTitle = styled.h3`\r\n  display: block;\r\n  margin-top: 40px;\r\n  margin-bottom: 20px;\r\n  font-size: 24px;\r\n  color: black;\r\n  text-align: center;\r\n`;\r\n\r\nexport function Title(props) {\r\n  return <StyledTitle>{props.children}</StyledTitle>;\r\n}\r\n\r\nexport const StyledSection = styled.section`\r\n  display: flex;\r\n  flex-direction: column; /* direction to stack els */\r\n  flex-wrap: nowrap; /* wrap or not */\r\n  justify-content: flex-start; /* align on main-axis */\r\n  align-items: left; /* align on cross-axis */\r\n  /* align-content: stretch; align the flex lines, similar to align-items, but aligns flex lines (group els as if they were one el) */\r\n  border: 1px solid #d2d2d2;\r\n  border-radius: 6px;\r\n  margin: 0 auto;\r\n  width: 90vw;\r\n  max-width: 800px;\r\n  font-size: 14px;\r\n  padding: 20px;\r\n  background: white;\r\n  color: black;\r\n  position: relative;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n  /* box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19); */\r\n`;\r\n\r\nexport const Article = styled.article`\r\n  display: block;\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledText = styled.p`\r\n  margin-top: 20px;\r\n  margin-bottom: 10px;\r\n  align-self: flex-start;\r\n  color: #3a3a3a;\r\n`;\r\n\r\nexport function Text(props) {\r\n  return <StyledText>{props.children}</StyledText>;\r\n}\r\n\r\nexport function Code(props) {\r\n  useEffect(() => {\r\n    Prism.plugins.NormalizeWhitespace.setDefaults({\r\n      'remove-trailing': true,\r\n      'remove-indent': true,\r\n      'left-trim': true,\r\n      'right-trim': true,\r\n      'break-lines': 600, //max number of characters in each line before break\r\n    });\r\n\r\n    // Prism.highlightAll();\r\n  }, []);\r\n\r\n  return (\r\n    <pre>\r\n      <code className=\"language-jsx\">{props.children}</code>\r\n    </pre>\r\n  );\r\n}\r\n\r\nexport const StyledTags = styled.div`\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport function Tags(props) {\r\n  return <StyledTags>{returnArrOfTags(props.children)}</StyledTags>;\r\n}\r\n\r\nconst StyledTag = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  padding: 3px 8px 3px 20px;\r\n  margin-bottom: 8px;\r\n  margin-right: 15px;\r\n  background: grey;\r\n  border-radius: 3px;\r\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\r\n  color: white;\r\n  font-size: 12px;\r\n  font-family: 'Lucida Grande', 'Lucida Sans Unicode', Verdana, sans-serif;\r\n  text-decoration: none;\r\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\r\n  font-weight: bold;\r\n\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 8px;\r\n    left: 8px;\r\n    width: 5px;\r\n    height: 5px;\r\n    border-radius: 50%;\r\n    background: #fff;\r\n    box-shadow: -1px -1px 2px rgba(0, 0, 0, 0.4);\r\n  }\r\n`;\r\n\r\nconst StyledDate = styled.time`\r\n  font-size: 10px;\r\n  position: absolute;\r\n  bottom: 7px;\r\n  right: 7px;\r\n`;\r\n\r\nexport function Date(props) {\r\n  return <StyledDate>{props.children}</StyledDate>;\r\n}\r\n\r\nconst StyledOutput = styled.div`\r\n  background: #e9f4fb;\r\n  padding: 0.5em;\r\n  margin: 20px 0px;\r\n  overflow: auto;\r\n  border-radius: 4px;\r\n`;\r\n\r\nexport function Output(props) {\r\n  return <StyledOutput>{props.children}</StyledOutput>;\r\n}\r\n\r\nconst StyleLink = styled.a`\r\n  cursor: pointer;\r\n  color: #0098f7;\r\n  text-decoration: none;\r\n`;\r\n\r\nexport function Link(props) {\r\n  return (\r\n    <StyleLink href={props.link} target=\"_blank\">\r\n      {props.text}\r\n      {props.children}\r\n    </StyleLink>\r\n  );\r\n}\r\n\r\nconst StyleCode = styled.code``;\r\n\r\nexport function CodeInline(props) {\r\n  return (\r\n    <StyleCode>\r\n      <code className=\"language-javascript\">{props.children}</code>\r\n    </StyleCode>\r\n  );\r\n}\r\n\r\nconst StyleArticleNum = styled.span`\r\n  position: absolute;\r\n  color: #b0b0b0;\r\n  top: -20px;\r\n  right: 5px;\r\n`;\r\n\r\nexport function ArticleNum(props) {\r\n  return <StyleArticleNum>Article #{props.num}</StyleArticleNum>;\r\n}","import React, { useEffect, useState } from 'react';\r\nimport uuid from 'react-uuid';\r\nimport styled from 'styled-components';\r\nimport { Post } from '../post components/Post';\r\n\r\nconst FormStyled = styled.form`\r\n  display: inline-flex;\r\n  justify-content: space-between;\r\n  align-items: stretch;\r\n\r\n  margin: 0 auto;\r\n  width: 90vw;\r\n\r\n  margin-top: 30px;\r\n  height: 40px;\r\n  max-width: 400px;\r\n  position: relative;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n\r\n  z-index: 666;\r\n\r\n  input {\r\n    flex-grow: 1;\r\n    padding: 5px;\r\n    font-size: 20px;\r\n    border-color: #c0c0c0;\r\n    border-style: solid;\r\n    border-radius: 4px;\r\n    outline-style: none;\r\n    width: auto;\r\n    min-width: 0; /* for shrinking */\r\n\r\n    &:hover {\r\n      border-color: grey;\r\n      transition: border-color 200ms ease;\r\n    }\r\n\r\n    &:focus {\r\n      border-color: rgba(0, 157, 214, 1);\r\n      margin: 0px;\r\n    }\r\n\r\n    &:not(:placeholder-shown) {\r\n      border-color: rgba(0, 157, 214, 1);\r\n      margin: 0px;\r\n    }\r\n\r\n    /* show cancel icon not only on hover, but on focus */\r\n    &::-webkit-search-cancel-button {\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  button {\r\n    flex-grow: 0;\r\n    font-size: 20px;\r\n    border-radius: 4px;\r\n    outline-style: none;\r\n    border-style: solid;\r\n    border-color: #c0c0c0;\r\n    width: auto;\r\n    padding: 0px 10px;\r\n    margin-left: 10px;\r\n    cursor: pointer;\r\n\r\n    &:hover,\r\n    &:focus {\r\n      border-color: grey;\r\n      transition: border-color 200ms ease;\r\n    }\r\n  }\r\n\r\n  .found-posts {\r\n    position: absolute;\r\n    top: 12px;\r\n    right: 0px;\r\n    left: 0px;\r\n    color: grey;\r\n    text-align: center;\r\n    cursor: pointer;\r\n    transform: translateX(-50%);\r\n    left: 50%;\r\n\r\n    &:hover {\r\n      color: #1c1c1c;\r\n    }\r\n  }\r\n`;\r\n\r\nconst SearchPreviewContainer = styled.div`\r\n  position: absolute;\r\n  top: 50px;\r\n  left: 0px;\r\n  right: 0px;\r\n  border-radius: 4px;\r\n  border-style: solid;\r\n  border-width: 1px;\r\n  border-color: #c0c0c0;\r\n  padding: 35px 10px 10px 10px;\r\n  background-color: #f6f6f6;\r\n\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n`;\r\n\r\nconst SearchPreviewStyled = styled.div`\r\n  background-color: #e8e8e8;\r\n  margin: 5px 0px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  color: black;\r\n  padding: 5px;\r\n\r\n  &:hover {\r\n    background-color: lightgrey;\r\n  }\r\n\r\n  h4 {\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  summary {\r\n    color: #3f3f3f;\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nfunction SearchPreviewItem(props) {\r\n  return (\r\n    <SearchPreviewStyled>\r\n      <h4>{props.title}</h4>\r\n      <summary>{props.summary}</summary>\r\n    </SearchPreviewStyled>\r\n  );\r\n}\r\n\r\nfunction PostsOnScreen(props) {\r\n  return (\r\n    <div\r\n      style={{\r\n        textAlign: 'center',\r\n        marginTop: '15px',\r\n        position: 'absolute',\r\n        top: '30px',\r\n        width: '100%',\r\n      }}\r\n    >\r\n      <span style={{ color: 'grey' }}>\r\n        {props.foundPostsNumState} post\r\n        {props.foundPostsNumState > 1 ? 's are' : ' is'} found\r\n      </span>\r\n      <span\r\n        style={{\r\n          color: '#f99191',\r\n          fontSize: '20px',\r\n          fontWeight: 900,\r\n          marginLeft: '10px',\r\n          cursor: 'pointer',\r\n        }}\r\n        onClick={() => {\r\n          props.setFilterFoundPostsState(false);\r\n          props.setPostsOnScreenState(props.allPosts);\r\n          props.setSearchValState('')\r\n        }}\r\n      >\r\n        ⨉\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function Search(props) {\r\n  // const [searchValState, setSearchValState] = useState('');\r\n  const [foundPostsNumState, setFoundPostsNumState] = useState(\r\n    props.allPosts.length\r\n  );\r\n  const [foundPostsArrState, setFoundPostsArrState] = useState([]);\r\n  const [filterFoundPostsState, setFilterFoundPostsState] = useState(false);\r\n\r\n  function updateSearchValState(e) {\r\n    const inputVal = e.target.value;\r\n    console.log(inputVal);\r\n    props.setSearchValState(inputVal);\r\n  }\r\n\r\n  function returnFilteredPostsArrAfterSearch(e) {\r\n    const inputVal = e.target.value;\r\n    const filteredPosts = props.allPosts.filter((item, index) => {\r\n      if (inputVal === '') return false;\r\n      return (\r\n        txtFromJSXOrStr(item.title)\r\n          .toLowerCase()\r\n          .includes(inputVal.toLowerCase()) ||\r\n        item.articlesArr.some(article => {\r\n          return txtFromJSXOrStr(article.val)\r\n            .toLowerCase()\r\n            .includes(inputVal.toLowerCase());\r\n        })\r\n      );\r\n    });\r\n\r\n    return filteredPosts;\r\n  }\r\n\r\n  function txtFromJSXOrStr(el) {\r\n    if (!el) return '';\r\n    if (typeof el === 'string') return el;\r\n    const children = el.props && el.props.children;\r\n    if (children instanceof Array)\r\n      return children.map(txtFromJSXOrStr).join('');\r\n    return txtFromJSXOrStr(children);\r\n  }\r\n\r\n  function FoundPosts(props) {\r\n    if (props.foundPostsNumState === 0)\r\n      return <span className=\"found-posts\">Not found</span>;\r\n    let ending = '';\r\n    if (props.foundPostsNumState !== 1) ending = 's';\r\n    return (\r\n      <span className=\"found-posts\" onClick={searchBtnClickHandler}>\r\n        Show {ending ? 'all' : ''} {props.foundPostsNumState} post{ending}\r\n      </span>\r\n    );\r\n  }\r\n\r\n  function returnArrWithTitlesAndArticle() {\r\n    return foundPostsArrState.map(post => {\r\n      return { title: post.title, summary: post.title, key: uuid() };\r\n    });\r\n  }\r\n\r\n  function splitWithDelimiter(str, delimiter, arr = []) {\r\n    if (!delimiter) return [str];\r\n    if (str.length === 0) return arr;\r\n    const index = str.toLowerCase().indexOf(delimiter.toLowerCase());\r\n    if (index === -1) {\r\n      arr.push(str);\r\n      return arr;\r\n    }\r\n    const strBeforeDelimiter = str.substring(0, index);\r\n    if (index !== 0) arr.push(strBeforeDelimiter);\r\n    const delimiterAsInStr = str.slice(index, index + delimiter.length);\r\n    arr.push(delimiterAsInStr);\r\n    str = str.slice(strBeforeDelimiter.length + delimiter.length, str.length);\r\n    splitWithDelimiter(str, delimiter, arr);\r\n    return arr;\r\n  }\r\n\r\n  function titleWithHighlight(el, searchStr) {\r\n    const str = txtFromJSXOrStr(el);\r\n    const arrWithSplittedText = splitWithDelimiter(str, searchStr);\r\n    const arrWithJSX = arrWithSplittedText.map(el => {\r\n      if (el.toLowerCase() === searchStr.toLowerCase())\r\n        return (\r\n          <span style={{ background: 'yellow' }} key={uuid()}>\r\n            {el}\r\n          </span>\r\n        );\r\n      return <span key={uuid()}>{el}</span>;\r\n    });\r\n    return arrWithJSX;\r\n  }\r\n\r\n  function articleWithHighlight(articlesArr, searchStr) {\r\n    let allText = '';\r\n    articlesArr.forEach(function (el) {\r\n      allText = allText + txtFromJSXOrStr(el.val);\r\n    });\r\n\r\n    const arrWithSplittedText = splitWithDelimiter(allText, searchStr);\r\n\r\n    const arrWithJSX = arrWithSplittedText.map(el => {\r\n      if (el.toLowerCase() === searchStr.toLowerCase())\r\n        return (\r\n          <span style={{ background: 'yellow' }} key={uuid()}>\r\n            {el}\r\n          </span>\r\n        );\r\n      return <span key={uuid()}>{el}</span>;\r\n    });\r\n    return arrWithJSX;\r\n  }\r\n\r\n  console.log(returnArrWithTitlesAndArticle());\r\n\r\n  function searchBtnClickHandler(e) {\r\n    e.preventDefault();\r\n    if (props.searchValState === '') {\r\n      props.setPostsOnScreenState(props.allPosts);\r\n      setFilterFoundPostsState(false);\r\n      return;\r\n    }\r\n    props.setShowFoundContainerState(false);\r\n    props.setPostsOnScreenState(foundPostsArrState);\r\n    setFilterFoundPostsState(true);\r\n  }\r\n\r\n  return (\r\n    <FormStyled\r\n      onClick={e => e.stopPropagation()} // do not close dropdown search menu if clicked inside\r\n    >\r\n      <input\r\n        type=\"search\"\r\n        name=\"search\"\r\n        value={props.searchValState}\r\n        placeholder=\"Search\"\r\n        autoComplete=\"off\"\r\n        onChange={e => {\r\n          updateSearchValState(e);\r\n          const filteredPostsAfterSearchArr =\r\n            returnFilteredPostsArrAfterSearch(e);\r\n          setFoundPostsNumState(filteredPostsAfterSearchArr.length);\r\n          setFoundPostsArrState(filteredPostsAfterSearchArr);\r\n          props.setShowFoundContainerState(\r\n            !!filteredPostsAfterSearchArr.length\r\n          );\r\n          if (e.target.value === '') {\r\n            props.setPostsOnScreenState(props.allPosts);\r\n            setFilterFoundPostsState(false);\r\n          }\r\n        }}\r\n      />\r\n      <button onClick={searchBtnClickHandler}>Search</button>\r\n      {filterFoundPostsState && (\r\n        <PostsOnScreen\r\n          foundPostsNumState={foundPostsNumState}\r\n          setFilterFoundPostsState={setFilterFoundPostsState}\r\n          setPostsOnScreenState={props.setPostsOnScreenState}\r\n          allPosts={props.allPosts}\r\n          setSearchValState={props.setSearchValState}\r\n        ></PostsOnScreen>\r\n      )}\r\n      {props.showFoundContainerState && (\r\n        <SearchPreviewContainer>\r\n          {<FoundPosts foundPostsNumState={foundPostsNumState} />}\r\n          {foundPostsArrState.map(o => {\r\n            return (\r\n              <SearchPreviewItem\r\n                title={titleWithHighlight(o.title, props.searchValState)}\r\n                summary={articleWithHighlight(\r\n                  o.articlesArr,\r\n                  props.searchValState\r\n                )}\r\n                key={uuid()}\r\n              />\r\n            );\r\n          })}\r\n\r\n          {/* <Post post={foundPostsArrState[0]} key={'xghdfgh'} /> */}\r\n        </SearchPreviewContainer>\r\n      )}\r\n    </FormStyled>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nconst btnCss = {\r\n  padding: '5px 20px',\r\n  margin: '10px 10px 0px 0px',\r\n  cursor: 'pointer',\r\n};\r\n\r\nclass ClassComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      likes: 0,\r\n    };\r\n    this.increment = this.increment.bind(this);\r\n    this.decrement = this.decrement.bind(this);\r\n  }\r\n\r\n  increment() {\r\n    this.setState({ likes: this.state.likes + 1 });\r\n  }\r\n\r\n  decrement() {\r\n    this.setState({ likes: this.state.likes - 1 });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>{this.state.likes}</h1>\r\n        <button onClick={this.increment} style={btnCss}>\r\n          +1\r\n        </button>\r\n        <button onClick={this.decrement} style={btnCss}>\r\n          -1\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst toRender1 = <ClassComponent />\r\n\r\nfunction FunctionComponent() {\r\n  const [likes, setLikes] = useState(0);\r\n\r\n  const increment = () => setLikes(likes + 1);\r\n  const decrement = () => setLikes(likes - 1);\r\n\r\n  return (\r\n    <div>\r\n      <h1>{likes}</h1>\r\n      <button onClick={increment} style={btnCss}>\r\n        +1\r\n      </button>\r\n      <button onClick={decrement} style={btnCss}>\r\n        -1\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst toRender2 = <FunctionComponent />\r\n\r\nexport const classVsFunctionComponent = {\r\n  title: <>Class vs Function component</>,\r\n  date: '2021.09.26',\r\n  id: '4eretg',\r\n  tagsArr: ['react', 'class component', 'function component', 'basics'],\r\n  abstract: 'abstract from the article',\r\n  articlesArr: [\r\n    {\r\n      type: 'text',\r\n      val: <>Class component</>,\r\n    },\r\n    {\r\n      type: 'code',\r\n      val: `\r\n        import React, { useState } from 'react';\r\n        \r\n        const btnCss = {\r\n          padding: '5px 20px',\r\n          margin: '10px 10px 0px 0px',\r\n          cursor: 'pointer',\r\n        };\r\n\r\n        class ClassComponent extends React.Component {\r\n          constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n              likes: 0,\r\n            };\r\n            this.increment = this.increment.bind(this);\r\n            this.decrement = this.decrement.bind(this);\r\n          }\r\n        \r\n          increment() {\r\n            this.setState({ likes: this.state.likes + 1 });\r\n          }\r\n        \r\n          decrement() {\r\n            this.setState({ likes: this.state.likes - 1 });\r\n          }\r\n        \r\n          render() {\r\n            return (\r\n              <div>\r\n                <h1>{this.state.likes}</h1>\r\n                <button onClick={this.increment} style={btnCss}>\r\n                  +1\r\n                </button>\r\n                <button onClick={this.decrement} style={btnCss}>\r\n                  -1\r\n                </button>\r\n              </div>\r\n            );\r\n          }\r\n        }\r\n\r\n        const toRender1 = <ClassComponent />\r\n      `\r\n    },\r\n    {\r\n      type: 'output',\r\n      val: toRender1,\r\n    },\r\n    {\r\n      type: 'text',\r\n      val: \"Function component\",\r\n    },\r\n    {\r\n      type: 'code',\r\n      val:  `\r\n        import React, { useState } from 'react';\r\n        \r\n        const btnCss = {\r\n          padding: '5px 20px',\r\n          margin: '10px 10px 0px 0px',\r\n          cursor: 'pointer',\r\n        };\r\n\r\n        function FunctionComponent() {\r\n          const [likes, setLikes] = useState(0);\r\n        \r\n          const increment = () => setLikes(likes + 1);\r\n          const decrement = () => setLikes(likes - 1);\r\n        \r\n          return (\r\n            <div>\r\n              <h1>{likes}</h1>\r\n              <button onClick={increment} style={btnCss}>\r\n                +1\r\n              </button>\r\n              <button onClick={decrement} style={btnCss}>\r\n                -1\r\n              </button>\r\n            </div>\r\n          );\r\n        }\r\n\r\n        const toRender2 = <FunctionComponent />\r\n      `\r\n    },\r\n    {\r\n      type: 'output',\r\n      val: toRender2,\r\n    },\r\n    {\r\n      type: 'text',\r\n      val: \"Function component is a modern way to write a component in react.\"\r\n    }\r\n\r\n  ],\r\n};","import React, { useRef, useState } from 'react';\r\nimport { Link, CodeInline } from '../../components/post components/Post';\r\n\r\nfunction ControlledInput() {\r\n  const [inpVal, setInpVal] = useState('initial text');\r\n\r\n  return (\r\n    <>\r\n      <h1>{inpVal}</h1>\r\n      <input\r\n        type=\"text\"\r\n        value={inpVal}\r\n        onChange={e => setInpVal(e.target.value)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nconst toRender1 = <ControlledInput />\r\n\r\nfunction UncontrolledInput() {\r\n  const [inpVal, setInpVal] = useState('initial text');\r\n  const inpRef = useRef('initial text')\r\n\r\n  return (\r\n    <>\r\n      <h1>{inpVal}</h1>\r\n      <input\r\n        ref={inpRef}\r\n        type=\"text\"\r\n        value={inpVal}\r\n        onChange={() => setInpVal(inpRef.current.value)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nconst toRender2 = <UncontrolledInput />\r\n\r\nexport const controlledVsUncontrolledComponent = {\r\n  title: 'Controlled vs uncontrolled component',\r\n  date: '2021.09.26',\r\n  id: '6de34',\r\n  tagsArr: ['react', 'useRef', 'useState', 'input', 'controlled', 'uncontrolled', 'basics', 'hook', 'DOM'],\r\n  abstract: 'abstract from the article',\r\n  articlesArr: [\r\n    {\r\n      type: 'text',\r\n      val: (\r\n        <>\r\n          <strong>Controlled component</strong> data is handled \r\n          by a React component via <CodeInline>useState()</CodeInline> {' '}\r\n          <Link link={'https://reactjs.org/docs/hooks-reference.html#usestate'}>hook</Link>. \r\n          Event handler takes care of a state update.\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      type: 'code',\r\n      val: `\r\n        import React, { useRef, useState } from 'react';\r\n\r\n        function ControlledInput() {\r\n          const [inpVal, setInpVal] = useState('initial text');\r\n\r\n          return (\r\n            <>\r\n              <h1>{inpVal}</h1>\r\n              <input\r\n                type=\"text\"\r\n                value={inpVal}\r\n                onChange={e => setInpVal(e.target.value)}\r\n              />\r\n            </>\r\n          );\r\n        }\r\n\r\n        const toRender1 = <ControlledInput />\r\n      `,\r\n    },\r\n    {\r\n      type: 'output',\r\n      val: toRender1\r\n    },\r\n    {\r\n      type: 'text',\r\n      val: (\r\n        <>\r\n          <strong>Uncontrolled component</strong> data is handled by the DOM itself. \r\n          We need to use <CodeInline>useRef()</CodeInline> {' '}\r\n          <Link link={'https://reactjs.org/docs/hooks-reference.html#useref'}>hook</Link> to get form values from the DOM.\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      type: 'code',\r\n      val: `\r\n        import React, { useRef, useState } from 'react';\r\n\r\n        function UncontrolledInput() {\r\n          const [inpVal, setInpVal] = useState('initial text');\r\n          const inpRef = useRef('initial text')\r\n        \r\n          return (\r\n            <>\r\n              <h1>{inpVal}</h1>\r\n              <input\r\n                ref={inpRef}\r\n                type=\"text\"\r\n                value={inpVal}\r\n                onChange={() => setInpVal(inpRef.current.value)}\r\n              />\r\n            </>\r\n          );\r\n        }\r\n\r\n        const toRender2 = <UncontrolledInput />\r\n      `,\r\n    },\r\n    {\r\n      type: 'text',\r\n      val: (\r\n        <>\r\n          <CodeInline>inpRef.current</CodeInline> {' '} refers to the DOM element.\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      type: 'output',\r\n      val: toRender2\r\n    },\r\n    \r\n  ],\r\n};","import React from 'react';\r\nimport { CodeInline } from '../../components/post components/Post';\r\n\r\nfunction ParentComponent(props) {\r\n  return (\r\n    <>\r\n      Props of parent component: {JSON.stringify(props)} <br/>\r\n      <ChildComponent {...props} />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction ChildComponent(props) {\r\n  return (\r\n    <> \r\n      Props of child component: {JSON.stringify(props)}\r\n    </>\r\n  );\r\n}\r\n\r\nconst toRender = <ParentComponent prop1='hello' prop2='my' prop3='friend' />\r\n\r\nexport const forwardLotsOfProps = {\r\n  title: 'Forward lots of props',\r\n  date: '2021.09.29',\r\n  id: 'fhjdtrwe',\r\n  tagsArr: ['react', 'props', 'component', 'basics'],\r\n  abstract: 'abstract from the article',\r\n  articlesArr: [\r\n    {\r\n      type: 'text',\r\n      val: \r\n        <>\r\n          Sometimes we need to pass tons of props from a component to a component.\r\n          That can create a mess.<br/><br/>\r\n          With spread {<CodeInline>...</CodeInline>} operator we can pass any number of props at ones.\r\n        </>\r\n      ,\r\n    },\r\n    {\r\n      type: 'code',\r\n      val: `\r\n        function ParentComponent(props) {\r\n          return (\r\n            <>\r\n              Props of parent component: {JSON.stringify(props)} <br/>\r\n              <ChildComponent {...props} />\r\n            </>\r\n          );\r\n        }\r\n        \r\n        function ChildComponent(props) {\r\n          return (\r\n            <> \r\n              Props of child component: {JSON.stringify(props)}\r\n            </>\r\n          );\r\n        }\r\n\r\n        const toRender = <ParentComponent prop1='hello' prop2='my' prop3='friend' />\r\n      `,\r\n    },\r\n    {\r\n      type: 'output',\r\n      val: toRender,\r\n    },\r\n\r\n  \r\n  ],\r\n};\r\n","import React from 'react';\r\nimport { CodeInline, Link } from '../../components/post components/Post';\r\n\r\nconst Input = React.forwardRef((props, ref) => (\r\n  <input ref={ref} {...props} />\r\n));\r\n\r\nfunction InputWithFocus() {\r\n  const ref = React.useRef();\r\n  const focus = () => ref.current.focus();\r\n\r\n  return (\r\n    <>\r\n      <Input\r\n        ref={ref}\r\n        placeholder=\"my input\"\r\n        style={{ padding: '5px', margin: '5px' }}\r\n      />\r\n      <button onClick={focus}>Focus</button>\r\n    </>\r\n  );\r\n}\r\n\r\nconst toRender = <InputWithFocus />\r\n\r\nexport const forwardRef = {\r\n  title: (\r\n    <>\r\n      <CodeInline>forwardRef()</CodeInline> & input + focus\r\n    </>\r\n  ),\r\n  date: '2021.09.26',\r\n  id: 'fhfjnxzxr',\r\n  tagsArr: ['react', 'useRef', 'forwardRef', 'input', 'focus', 'basics', 'hook', 'DOM'],\r\n  abstract: 'abstract from the article',\r\n  articlesArr: [\r\n    {\r\n      type: 'text',\r\n      val: <>\r\n        To pass DOM element to a custom component via <CodeInline>React.useRef()</CodeInline> {' '}\r\n        we need to wrap a component into <CodeInline>React.forwardRef()</CodeInline> {' '}\r\n        <Link link={'https://reactjs.org/docs/refs-and-the-dom.html#refs-and-function-components'} text={'function'}/>.\r\n      </>,\r\n    },\r\n    {\r\n      type: 'code',\r\n      val: `\r\n        const Input = React.forwardRef((props, ref) => (\r\n          <input ref={ref} {...props} />\r\n        ));\r\n        \r\n        function InputWithFocus() {\r\n          const ref = React.useRef();\r\n          const focus = () => ref.current.focus();\r\n        \r\n          return (\r\n            <>\r\n              <Input\r\n                ref={ref}\r\n                placeholder=\"my input\"\r\n                style={{ padding: '5px', margin: '5px' }}\r\n              />\r\n              <button onClick={focus}>Focus</button>\r\n            </>\r\n          );\r\n        }\r\n\r\n        const toRender = <InputWithFocus />\r\n      `,\r\n    },\r\n    {\r\n      type: 'output',\r\n      val: toRender,\r\n    },\r\n  ],\r\n};\r\n","import React, { useState } from 'react';\r\nimport { CodeInline } from '../../components/post components/Post';\r\n\r\nconst greenCss = { color: 'green' }\r\nconst redCss = { color: 'red' }\r\nconst marginCss = { margin: '10px' }\r\n\r\nfunction StateIsImmutable() {\r\n  const [state, setState] = useState([1, 2, 3]);\r\n  return (\r\n    <div>\r\n      <span>State value: </span> <span style={greenCss}>{JSON.stringify(state)}</span>\r\n      <div style={marginCss}>\r\n        <button\r\n          onClick={() => {\r\n            state.push(state[state.length - 1] + 1); \r\n            // incorrect\r\n            // state is updated, but not rendered\r\n\r\n            console.log(state)\r\n          }}\r\n        >\r\n          Add value directly to the state array\r\n        </button>\r\n        <span style={{...marginCss, ...redCss}}></span>\r\n      </div>\r\n      <div style={marginCss}>\r\n        <button\r\n          onClick={() => {\r\n            setState([...state, state[state.length - 1] + 1]);\r\n            console.log(state);\r\n          }}\r\n        >\r\n          Assign to the state a copy of array with additional value\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst toRender = <StateIsImmutable />\r\n\r\nexport const immutableState = {\r\n  title: 'React state is immutable',\r\n  date: '2021.09.28',\r\n  id: '456htj',\r\n  tagsArr: ['react', 'state', 'useState', 'immutable', 'basics', 'hook'],\r\n  abstract: 'abstract from the article',\r\n  articlesArr: [\r\n    {\r\n      type: 'text',\r\n      val: (\r\n        <>\r\n          If you mutate data like <CodeInline>myData.a.b.push(10)</CodeInline>{' '}\r\n          there is no way of determining which data has changed since the\r\n          previous copy has been overwritten\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      type: 'text',\r\n      val: (\r\n        <>\r\n          Instead, you need to create a new copy of{' '}\r\n          <CodeInline>myData</CodeInline>\r\n          and change only the parts of it that need to be changed. For state\r\n          data React can compare the old copy with the new one.\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      type: 'code',\r\n      val: \r\n      `\r\n        import React, { useState } from 'react';\r\n\r\n        const greenCss = { color: 'green' }\r\n        const redCss = { color: 'red' }\r\n        const marginCss = { margin: '10px' }\r\n\r\n        function StateIsImmutable() {\r\n          const [state, setState] = useState([1, 2, 3]);\r\n          return (\r\n            <div>\r\n              <span>State value: </span> <span style={greenCss}>{JSON.stringify(state)}</span>\r\n              <div style={marginCss}>\r\n                <button\r\n                  onClick={() => {\r\n                    state.push(state[state.length - 1] + 1); \r\n                    // incorrect\r\n                    // state is updated, but not rendered\r\n                    console.log(state)\r\n                  }}\r\n                >\r\n                  Add value directly to the state array\r\n                </button>\r\n                <span style={{...marginCss, ...redCss}}>state is updated, but not rendered!</span>\r\n              </div>\r\n              <div style={marginCss}>\r\n                <button\r\n                  onClick={() => {\r\n                    setState([...state, state[state.length - 1] + 1]);\r\n                    console.log(state)\r\n                  }}\r\n                >\r\n                  Assign to the state a copy of array with additional value\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        }\r\n\r\n        const toRender = <StateIsImmutable />\r\n      `,\r\n    },\r\n    {\r\n      type: 'output',\r\n      val: toRender,\r\n    },\r\n  ],\r\n};\r\n","import React from 'react';\r\nimport { CodeInline } from '../../components/post components/Post';\r\n\r\nexport const jsVsJsx = {\r\n  title: 'JS vs JSX',\r\n  date: '2021.09.23',\r\n  id: '5sdfg',\r\n  tagsArr: ['react', 'jsx', 'createElement', 'basics'],\r\n  abstract: 'abstract from the article',\r\n  articlesArr: [\r\n    {\r\n      type: 'text',\r\n      val: <>\r\n        In React we generate html by javascript. We can use \r\n        <CodeInline>React.createElement()</CodeInline> function from the React \r\n        library to add an HTML element or we can use JSX syntax.\r\n      </>\r\n    },\r\n    { \r\n      type: 'text', \r\n      val: <>\r\n        Native <span style={{ fontWeight: 600 }}> JS </span>\r\n      </>  \r\n    },\r\n    { \r\n      type: 'code', \r\n      val: `\r\n        import React from 'react';\r\n\r\n        React.createElement('div', {},\r\n          React.createElement(\r\n            'button', \r\n            {\r\n              disabled: false,\r\n              onClick: () => {\r\n                alert('clicked')\r\n              } \r\n            }, \r\n            'Click me'\r\n          )\r\n        )\r\n      `\r\n    },\r\n    { \r\n      type: 'output', \r\n      val: React.createElement('div', {},\r\n        React.createElement(\r\n          'button', \r\n          {\r\n            disabled: false,\r\n            onClick: () => {\r\n              alert('clicked')\r\n            }\r\n          }, \r\n          'Click me'\r\n        )\r\n      ) \r\n    },\r\n    { \r\n      type: 'text', \r\n      val: 'JSX' \r\n    },\r\n    { \r\n      type: 'code', \r\n      val: `\r\n        import React from 'react';\r\n\r\n        <div>\r\n          <button \r\n            disabled={false} \r\n            onClick={() => alert('clicked')}\r\n          >\r\n            Click me\r\n          </button>\r\n        </div>\r\n      ` \r\n    },\r\n    { \r\n      type: 'output', \r\n      val: \r\n        <div>\r\n          <button \r\n            disabled={false} \r\n            onClick={() => alert('clicked')}\r\n          >\r\n            Click me\r\n          </button>\r\n        </div>\r\n    },\r\n  ],\r\n};","import React from 'react';\r\nimport { CodeInline } from '../../components/post components/Post';\r\n\r\nfunction Component1(props) {\r\n  return (\r\n    <div>\r\n      props.prop1 = {props.prop1} <br/>\r\n      props.prop2 = {props.prop2} <br/>\r\n      props.prop3 = {props.prop3} <br/>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst toRender1 = <Component1 prop1='hello' prop2='my' prop3='friend'/>\r\n\r\nfunction Component2({ prop1, prop2, prop3 }) {\r\n  return (\r\n    <div>\r\n      prop1 = {prop1} <br/>\r\n      prop2 = {prop2} <br/>\r\n      prop3 = {prop3} <br/>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst toRender2 = <Component2 prop1='hello' prop2='my' prop3='friend'/>\r\n\r\nfunction Component3({ prop1, prop2, prop3 }) {\r\n  return (\r\n    <div>\r\n      prop1 = {prop1} <br/>\r\n      prop2 = {prop2} <br/>\r\n      prop3 = {prop3} <br/>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst userProps = {\r\n  prop1: 'Hello',\r\n  prop2: 'my',\r\n  prop3: 'friend',\r\n}\r\n\r\nconst toRender3 = <Component3 {...userProps}/>\r\n\r\nexport const passProps = {\r\n  title: 'How to pass props',\r\n  date: '2021.09.29',\r\n  id: 'hgjer',\r\n  tagsArr: ['react', 'props', 'component', 'basics'],\r\n  abstract: 'abstract from the article',\r\n  articlesArr: [\r\n    {\r\n      type: 'text',\r\n      val: (\r\n        <>\r\n          We can pass props into a component and take them from the <CodeInline>props</CodeInline> object.\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      type: 'code',\r\n      val: `\r\n        function Component1(props) {\r\n          return (\r\n            <div>\r\n              props.prop1 = {props.prop1} <br/> // hello\r\n              props.prop2 = {props.prop2} <br/> // my\r\n              props.prop3 = {props.prop3} <br/> // friend\r\n            </div>\r\n          );\r\n        }\r\n\r\n        const toRender1 = <Component1 prop1='hello' prop2='my' prop3='friend'/>\r\n      `,\r\n    },\r\n    {\r\n      type: 'code',\r\n      val: `\r\n        <Component1 prop1='hello' prop2='my' prop3='friend' />\r\n      `,\r\n    },\r\n    {\r\n      type: 'output',\r\n      val: toRender1,\r\n    },\r\n\r\n    {\r\n      type: 'text',\r\n      val: (\r\n        <>\r\n          <CodeInline>props</CodeInline> object can be destructured in a component.\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      type: 'code',\r\n      val: `\r\n        function Component2({ prop1, prop2, prop3 }) {\r\n          return (\r\n            <div>\r\n              prop1 = {prop1} <br/> // hello\r\n              prop2 = {prop2} <br/> // my\r\n              prop3 = {prop3} <br/> // friend\r\n            </div>\r\n          );\r\n        }\r\n\r\n        const toRender2 = <Component2 prop1='hello' prop2='my' prop3='friend'/>\r\n      `,\r\n    },\r\n    {\r\n      type: 'code',\r\n      val: `\r\n        <Component2 prop1='hello' prop2='my' prop3='friend'/>\r\n      `,\r\n    },\r\n    {\r\n      type: 'output',\r\n      val: toRender2,\r\n    },\r\n    {\r\n      type: 'text',\r\n      val: (\r\n        <>\r\n          We can pass wrapped props at ones using spread operator\r\n          <CodeInline>{'{...props}'}</CodeInline>\r\n          .\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      type: 'code',\r\n      val: `\r\n        function Component3({ prop1, prop2, prop3 }) {\r\n          return (\r\n            <div>\r\n              prop1 = {prop1} <br/>\r\n              prop2 = {prop2} <br/>\r\n              prop3 = {prop3} <br/>\r\n            </div>\r\n          );\r\n        }\r\n        \r\n        const userProps = {\r\n          prop1: 'Hello',\r\n          prop2: 'my',\r\n          prop3: 'friend',\r\n        }\r\n        \r\n        const toRender3 = <Component3 {...userProps}/>\r\n      `,\r\n    },\r\n    {\r\n      type: 'output',\r\n      val: toRender3,\r\n    },\r\n  ],\r\n};\r\n","import React from 'react';\r\nimport { CodeInline } from '../../components/post components/Post';\r\n\r\nfunction Parent() {\r\n  const [state, setState] = React.useState(0);\r\n\r\n  return (\r\n    <div style={{ background: 'lightyellow', padding: '20px' }}>\r\n      <h1>Parent Component</h1>\r\n      <br />\r\n      <div>Count state variable: {state}</div>\r\n      <br />\r\n      <Child state={state} setState={setState} />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Child(props) {\r\n  return (\r\n    <div style={{ background: 'lightgrey', padding: '20px' }}>\r\n      <h1>Child Component</h1>\r\n      <br />\r\n      <button onClick={() => props.setState(props.state + 1)}>\r\n        Update from child component\r\n      </button>\r\n      <br />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst toRender = <Parent />;\r\n\r\nexport const updateValueFromChildComponent = {\r\n  title: 'Update value from a child component',\r\n  date: '2021.09.29',\r\n  id: 'e56g',\r\n  tagsArr: ['react', 'props', 'state', 'useState', 'component', 'child', 'parent', 'basics'],\r\n  abstract: 'abstract from the article',\r\n  articlesArr: [\r\n    {\r\n      type: 'text',\r\n      val: <>To update the state in a Parent component from a Child component we need to pass <CodeInline>setState</CodeInline> function via props to a child component.</>,\r\n    },\r\n    {\r\n      type: 'code',\r\n      val: `\r\n        function Parent() {\r\n          const [state, setState] = React.useState(0);\r\n        \r\n          return (\r\n            <div style={{ background: 'lightyellow', padding: '20px' }}>\r\n              <h1>Parent Component</h1>\r\n              <br />\r\n              <div>Count state variable: {state}</div>\r\n              <br />\r\n              <Child state={state} setState={setState} />\r\n            </div>\r\n          );\r\n        }\r\n        \r\n        function Child(props) {\r\n          return (\r\n            <div style={{ background: 'lightgrey', padding: '20px' }}>\r\n              <h1>Child Component</h1>\r\n              <br />\r\n              <button onClick={() => props.setState(props.state + 1)}>\r\n                Update from child component\r\n              </button>\r\n              <br />\r\n            </div>\r\n          );\r\n        }\r\n        \r\n        const toRender = <Parent />;\r\n      `,\r\n    },\r\n    {\r\n      type: 'output',\r\n      val: toRender,\r\n    },\r\n  ],\r\n};\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledContainer = styled.div`\r\n  width: 90%;\r\n  border: 1px solid grey;\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  margin: 0px auto;\r\n  padding: 5px;\r\n\r\n  form {\r\n    margin: 10px;\r\n    text-align: center;\r\n\r\n    input {\r\n      padding: 3px;\r\n    }\r\n\r\n    button {\r\n      margin-left: 10px;\r\n      width: 50px;\r\n      padding: 3px;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  .toDoItem {\r\n    margin: 5px 0px;\r\n    padding: 5px;\r\n    border-bottom: 1px dotted grey;\r\n\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  .delBtn {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nfunction ToDoApp() {\r\n  function getToDoList() {\r\n    if (!localStorage.getItem('toDoArr')) {\r\n      localStorage.setItem(\r\n        'toDoArr',\r\n        JSON.stringify([\r\n          {\r\n            toDoText: 'wipe the dust',\r\n            id: Math.random(),\r\n          },\r\n          {\r\n            toDoText: 'walk the dog out',\r\n            id: Math.random(),\r\n          },\r\n          {\r\n            toDoText: 'call parents',\r\n            id: Math.random(),\r\n          },\r\n        ])\r\n      );\r\n    }\r\n\r\n    return JSON.parse(localStorage.getItem('toDoArr'));\r\n  }\r\n\r\n  const [toDoListState, setToDoListState] = useState(getToDoList);\r\n\r\n  return (\r\n    <StyledContainer>\r\n      <AddItemForm\r\n        toDoListState={toDoListState}\r\n        setToDoListState={setToDoListState}\r\n        getToDoList={getToDoList}\r\n      />\r\n      <ToDoList\r\n        toDoListState={toDoListState}\r\n        setToDoListState={setToDoListState}\r\n        getToDoList={getToDoList}\r\n      />\r\n    </StyledContainer>\r\n  );\r\n}\r\n\r\nfunction AddItemForm({ toDoListState, setToDoListState, getToDoList }) {\r\n  const [inputState, setInputState] = useState('');\r\n\r\n  function addNewItem(e) {\r\n    e.preventDefault();\r\n    if (!inputState) return;\r\n    const newList = [\r\n      {\r\n        toDoText: inputState,\r\n        id: Math.random(),\r\n      },\r\n      ...toDoListState,\r\n    ];\r\n    localStorage.setItem('toDoArr', JSON.stringify(newList));\r\n    setToDoListState(getToDoList());\r\n    setInputState('');\r\n  }\r\n\r\n  return (\r\n    <form>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"what to do?\"\r\n        value={inputState}\r\n        onChange={e => setInputState(e.target.value)}\r\n      />\r\n      <button onClick={addNewItem}>Add</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nfunction ToDoList({ setToDoListState, toDoListState, getToDoList }) {\r\n  return (\r\n    <div className=\"toDoList\">\r\n      {toDoListState.map(toDoItem => (\r\n        <ToDoItem\r\n          toDoText={toDoItem.toDoText}\r\n          key={toDoItem.id}\r\n          id={toDoItem.id}\r\n          toDoListState={toDoListState}\r\n          setToDoListState={setToDoListState}\r\n          getToDoList={getToDoList}\r\n        ></ToDoItem>\r\n      ))}\r\n      {toDoListState.length === 0 ? 'Nothing to do' : ''}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ToDoItem({\r\n  toDoText,\r\n  id,\r\n  toDoListState,\r\n  setToDoListState,\r\n  getToDoList,\r\n}) {\r\n  function removeItem() {\r\n    const newList = toDoListState.filter(o => o.id !== id);\r\n    localStorage.setItem('toDoArr', JSON.stringify(newList));\r\n    setToDoListState(getToDoList());\r\n  }\r\n\r\n  return (\r\n    <div className=\"toDoItem\">\r\n      <div className=\"toDoText\">{toDoText}</div>\r\n      <button className=\"delBtn\" onClick={removeItem}>\r\n        Remove\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst toRender = <ToDoApp />\r\n\r\nexport const toDoList = {\r\n  title: 'ToDo app',\r\n  date: '2021.09.26',\r\n  id: '45uykqcv',\r\n  tagsArr: ['react', 'ToDo', 'basics'],\r\n  abstract: 'abstract from the article',\r\n  articlesArr: [\r\n    {\r\n      type: 'text',\r\n      val: `Let's make the simplest todo list with local data storage.`,\r\n    },\r\n    {\r\n      type: 'code',\r\n      val: `\r\n        import React, { useState } from 'react';\r\n        import './styles.css';\r\n\r\n        function ToDoApp() {\r\n          function getToDoList() {\r\n            if (!localStorage.getItem('toDoArr')) {\r\n              localStorage.setItem(\r\n                'toDoArr',\r\n                JSON.stringify([\r\n                  {\r\n                    toDoText: 'wipe the dust',\r\n                    id: Math.random(),\r\n                  },\r\n                  {\r\n                    toDoText: 'walk the dog out',\r\n                    id: Math.random(),\r\n                  },\r\n                  {\r\n                    toDoText: 'call parents',\r\n                    id: Math.random(),\r\n                  },\r\n                ])\r\n              );\r\n            }\r\n\r\n            return JSON.parse(localStorage.getItem('toDoArr'));\r\n          }\r\n\r\n          const [toDoListState, setToDoListState] = useState(getToDoList);\r\n\r\n          return (\r\n            <div className=\"toDoApp\">\r\n              <AddItemForm\r\n                toDoListState={toDoListState}\r\n                setToDoListState={setToDoListState}\r\n                getToDoList={getToDoList}\r\n              ></AddItemForm>\r\n              <ToDoList\r\n                toDoListState={toDoListState}\r\n                setToDoListState={setToDoListState}\r\n                getToDoList={getToDoList}\r\n              ></ToDoList>\r\n            </div>\r\n          );\r\n        }\r\n\r\n        function AddItemForm({ toDoListState, setToDoListState, getToDoList }) {\r\n          const [inputState, setInputState] = useState('');\r\n\r\n          function addNewItem(e) {\r\n            e.preventDefault();\r\n            if (!inputState) return;\r\n            const newList = [\r\n              {\r\n                toDoText: inputState,\r\n                id: Math.random(),\r\n              },\r\n              ...toDoListState,\r\n            ];\r\n            localStorage.setItem('toDoArr', JSON.stringify(newList));\r\n            setToDoListState(getToDoList());\r\n            setInputState('');\r\n          }\r\n\r\n          return (\r\n            <form>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"what to do?\"\r\n                value={inputState}\r\n                onChange={e => setInputState(e.target.value)}\r\n              />\r\n              <button onClick={addNewItem}>Add</button>\r\n            </form>\r\n          );\r\n        }\r\n\r\n        function ToDoList({ setToDoListState, toDoListState, getToDoList }) {\r\n          return (\r\n            <div className=\"toDoList\">\r\n              {toDoListState.map(toDoItem => (\r\n                <ToDoItem\r\n                  toDoText={toDoItem.toDoText}\r\n                  key={toDoItem.id}\r\n                  id={toDoItem.id}\r\n                  toDoListState={toDoListState}\r\n                  setToDoListState={setToDoListState}\r\n                  getToDoList={getToDoList}\r\n                ></ToDoItem>\r\n              ))}\r\n              {toDoListState.length === 0 ? 'Nothing to do' : ''}\r\n            </div>\r\n          );\r\n        }\r\n\r\n        function ToDoItem({\r\n          toDoText,\r\n          id,\r\n          toDoListState,\r\n          setToDoListState,\r\n          getToDoList,\r\n        }) {\r\n          function removeItem() {\r\n            const newList = toDoListState.filter(o => o.id !== id);\r\n            localStorage.setItem('toDoArr', JSON.stringify(newList));\r\n            setToDoListState(getToDoList());\r\n          }\r\n\r\n          return (\r\n            <div className=\"toDoItem\">\r\n              <div className=\"toDoText\">{toDoText}</div>\r\n              <button className=\"delBtn\" onClick={removeItem}>\r\n                Remove\r\n              </button>\r\n            </div>\r\n          );\r\n        }\r\n\r\n        const toRender = <ToDoApp />\r\n      `,\r\n    },\r\n    {\r\n      type: 'output',\r\n      val: toRender\r\n    },\r\n  ],\r\n};\r\n","import React, { useState } from 'react';\r\nimport { CodeInline } from '../../components/post components/Post';\r\n\r\nfunction InputWithState() {\r\n  const [inpVal, setInpVal] = useState('initial text');\r\n\r\n  return (\r\n    <>\r\n      <h1>{inpVal}</h1>\r\n      <input\r\n        type=\"text\"\r\n        value={inpVal}\r\n        onChange={e => setInpVal(e.target.value)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nconst toRender = <InputWithState />\r\n\r\nexport const useStateAndInput = {\r\n  title: (\r\n    <>\r\n      <CodeInline>useState()</CodeInline> & input\r\n    </>\r\n  ),\r\n  date: '2021.09.26',\r\n  id: '76j',\r\n  tagsArr: ['react', 'state', 'useState', 'input', 'basics', 'hook'],\r\n  abstract: 'abstract from the article',\r\n  articlesArr: [\r\n    {\r\n      type: 'text',\r\n      val: (\r\n        <>\r\n          We have to use <CodeInline>useState()</CodeInline> to be able to see\r\n          an input changes on the screen.\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      type: 'text',\r\n      val: 'Otherwise react does not know what to render.',\r\n    },\r\n    {\r\n      type: 'code',\r\n      val: `\r\n        import React, { useState } from 'react';\r\n\r\n        function InputWithState() {\r\n          const [inpVal, setInpVal] = useState('initial text');\r\n\r\n          return (\r\n            <>\r\n              <h1>{inpVal}</h1>\r\n              <input\r\n                type=\"text\"\r\n                value={inpVal}\r\n                onChange={e => setInpVal(e.target.value)}\r\n              />\r\n            </>\r\n          );\r\n        }\r\n\r\n        const toRender = <InputWithState />\r\n      `,\r\n    },\r\n    {\r\n      type: 'output',\r\n      val: toRender\r\n    },\r\n  ],\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Link, CodeInline } from '../../components/post components/Post';\r\n\r\nconst btnCss = {padding: '5px 20px', margin: '10px 10px 0px 0px', cursor: 'pointer',}\r\n\r\nfunction ComponentWithoutState() {\r\n  let likes = 0;\r\n\r\n  function increment() {\r\n    likes += 1\r\n    alert(likes)\r\n  }\r\n\r\n  function decrement() {\r\n    likes -= 1\r\n    alert(likes)\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <h1>{likes}</h1>\r\n      <button onClick={increment} style={btnCss}>+1</button>\r\n      <button onClick={decrement} style={btnCss}>-1</button>\r\n    </>\r\n  )\r\n}\r\n\r\nconst toRender1 = <ComponentWithoutState />\r\n\r\nfunction ComponentWithState() {\r\n\r\n  const [likes, setLikes] = useState(0)\r\n\r\n  function increment() {\r\n    setLikes(likes + 1) \r\n  }\r\n  \r\n  function decrement() {\r\n    setLikes(likes - 1) \r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>{likes}</h1>\r\n      <button onClick={increment} style={btnCss}>+1</button>\r\n      <button onClick={decrement} style={btnCss}>-1</button>\r\n    </>\r\n  )\r\n}\r\n\r\nconst toRender2 = <ComponentWithState/>\r\n\r\nexport const whyToUseState = {\r\n  title: <>Why to use <CodeInline>useState()</CodeInline></>,\r\n  date: '2021.09.25',\r\n  id: '34sss',\r\n  tagsArr: ['react', 'state', 'useState', 'basics', 'hook'],\r\n  abstract: 'abstract from the article',\r\n  articlesArr: [\r\n    {\r\n      type: 'text',\r\n      val: <>Let's create an incrementor.</>,\r\n    }, \r\n    {\r\n      type: 'code',\r\n      val: `\r\n        import React from 'react'\r\n        const btnCss = {padding: '5px 20px', margin: '10px 10px 0px 0px', cursor: 'pointer',}\r\n\r\n        function ComponentWithoutState() {\r\n          let likes = 0;\r\n        \r\n          function increment() {\r\n            likes += 1\r\n            alert(likes)\r\n          }\r\n        \r\n          function decrement() {\r\n            likes -= 1\r\n            alert(likes)\r\n          }\r\n          \r\n          return (\r\n            <>\r\n              <h1>{likes}</h1>\r\n              <button onClick={increment} style={btnCss}>+1</button>\r\n              <button onClick={decrement} style={btnCss}>-1</button>\r\n            </>\r\n          )\r\n        }\r\n\r\n        const toRender1 = <ComponentWithoutState/>\r\n      `\r\n    },\r\n    {\r\n      type: 'text',\r\n      val: `We can see value change in alert, but not on the screen.`,\r\n    },\r\n    {\r\n      type: 'output',\r\n      val: toRender1\r\n    },\r\n    {\r\n      type: 'text',\r\n      val: <>As far as react renders only changes in virtual DOM, we need \r\n      to tell him about changes. It can be done with <CodeInline>useState()</CodeInline>  \r\n      {' '} <Link link={'https://reactjs.org/docs/hooks-state.html'}>hook</Link>.</>,\r\n    },\r\n    {\r\n      type: 'code',\r\n      val: `\r\n        import React, { useState } from 'react'\r\n        const btnCss = {padding: '5px 20px', marginRight: '10px', cursor: 'pointer',}\r\n\r\n        const [count, setCount] = useState(0)\r\n\r\n        function ComponentWithState() {\r\n\r\n          const [likes, setLikes] = useState(0)\r\n        \r\n          function increment() {\r\n            setLikes(likes + 1) \r\n          }\r\n          \r\n          function decrement() {\r\n            setLikes(likes - 1) \r\n          }\r\n        \r\n          return (\r\n            <>\r\n              <h1>{likes}</h1>\r\n              <button onClick={increment} style={btnCss}>+1</button>\r\n              <button onClick={decrement} style={btnCss}>-1</button>\r\n            </>\r\n          )\r\n        }\r\n\r\n        const toRender2 = <ComponentWithState/>\r\n      `\r\n    },\r\n    {\r\n      type: 'output',\r\n      val: toRender2,\r\n    },\r\n    {\r\n      type: 'text',\r\n      val: (<>\r\n        We initialize <CodeInline>likes</CodeInline> state by <CodeInline>const [likes, setLikes] = useState(0)</CodeInline>\r\n      </>)\r\n    },\r\n    {\r\n      type: 'text',\r\n      val: (<>\r\n        <CodeInline>setLikes</CodeInline> is a function to change a state value.\r\n      </>)\r\n    },\r\n    {\r\n      type: 'text',\r\n      val: (<>\r\n        We pass a new state value as an argument <CodeInline>setLikes(likes + 1)</CodeInline>\r\n      </>)\r\n    },\r\n    {\r\n      type: 'text',\r\n      val: (<>\r\n        Initial state <CodeInline>0</CodeInline> is passed as an argument in <CodeInline>useState(0)</CodeInline> \r\n      </>)\r\n    }\r\n\r\n  ],\r\n};\r\n","// import React, { useState, useEffect } from 'react'\r\nimport { classVsFunctionComponent } from './classVsFunctionComponent/classVsFunctionComponent'\r\nimport { controlledVsUncontrolledComponent } from './controlledVsUncontrolledComponent/controlledVsUncontrolledComponent'\r\nimport { forwardLotsOfProps } from './forwardLotsOfProps/forwardLotsOfProps'\r\nimport { forwardRef } from './forwardRef/forwardRef'\r\nimport { immutableState } from './immutableState/immutabilityOfState'\r\nimport { jsVsJsx } from './jsVsJsx/jsVsJsx'\r\nimport { passProps } from './passProps/passProps'\r\nimport { updateValueFromChildComponent } from './updateValueFromChildComponent/updateValueFromChildComponent'\r\nimport { toDoList } from './toDoList/toDoList'\r\nimport { useStateAndInput } from './useStateAndInput/useStateAndInput'\r\nimport { whyToUseState } from './whyToUseState/whyToUseState'\r\n\r\nlet posts = [\r\n  updateValueFromChildComponent,\r\n  forwardRef,\r\n  controlledVsUncontrolledComponent,\r\n  forwardLotsOfProps,\r\n  passProps,\r\n  immutableState,\r\n  toDoList,\r\n  classVsFunctionComponent,\r\n  useStateAndInput,\r\n  whyToUseState,\r\n  jsVsJsx,\r\n]\r\n\r\nposts.forEach((o, index) => {\r\n  o.sequentialNum = posts.length - index\r\n})\r\n\r\nexport const allPosts = posts","import Mark from 'mark.js';\r\nimport Prism from 'prismjs';\r\nimport React, { useEffect, useRef, useState, useMemo} from 'react';\r\nimport uuid from 'react-uuid';\r\n//import './App.css';\r\nimport styled from 'styled-components';\r\nimport { NavBar } from './components/nav/Nav.js';\r\nimport { Post } from './components/post components/Post.js';\r\nimport Search from './components/search/Search.js';\r\nimport { allPosts } from './posts/allPosts.js';\r\nconsole.log(allPosts)\r\n\r\nconst StyledApp = styled.div`\r\n  text-align: left;\r\n  /* background-image: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\r\n  background-image: linear-gradient(to top, #e6e9f0 0%, #eef1f5 100%); */\r\n\r\n  background: #c9ccd3;\r\n  background-image: linear-gradient(\r\n    -180deg,\r\n    rgba(255, 255, 255, 0.5) 0%,\r\n    rgba(0, 0, 0, 0.5) 100%\r\n  );\r\n  background-blend-mode: lighten;\r\n\r\n  min-height: 100vh;\r\n  color: whitesmoke;\r\n`;\r\n\r\nconst StyledMain = styled.main`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding-bottom: 30px;\r\n`;\r\n\r\nfunction App() {\r\n  console.log('App rendered');\r\n\r\n  const [showFoundContainerState, setShowFoundContainerState] = useState(false);\r\n  const [postsOnScreenState, setPostsOnScreenState] = useState(allPosts)\r\n  const [searchValState, setSearchValState] = useState('');\r\n\r\n  Prism.plugins.NormalizeWhitespace.setDefaults({\r\n    'remove-trailing': true,\r\n    'remove-indent': true,\r\n    'left-trim': true,\r\n    'right-trim': true,\r\n    'break-lines': 600, //max number of characters in a line\r\n  });\r\n\r\n  // [] - run only on load\r\n  useEffect(() => {\r\n    Prism.highlightAll();\r\n\r\n    // highlight found words\r\n    var context = document.querySelector('main');\r\n    var instance = new Mark(context);\r\n    instance.unmark();\r\n    instance.mark(searchValState); // will mark the keyword \"test\"\r\n\r\n  }, [postsOnScreenState]);\r\n\r\n  \r\n\r\n  function returnPosts() {\r\n    return postsOnScreenState.map((item, index) => (\r\n      <Post post={item} key={item.id} num={allPosts.length - index} />\r\n    ));\r\n  }\r\n\r\n  // do not re-render posts on screen when search dropdown menu toggles\r\n  const returnPostsMemo = useMemo(() => {\r\n    return returnPosts()\r\n  }, [postsOnScreenState])\r\n\r\n  return (\r\n    <StyledApp \r\n      // close search dropdown menu if clicked outside\r\n      onClick={() => setShowFoundContainerState(false)}\r\n    >\r\n      <NavBar />\r\n      <Search\r\n        allPosts={allPosts}\r\n        showFoundContainerState={showFoundContainerState}\r\n        setShowFoundContainerState={setShowFoundContainerState}\r\n        postsOnScreenState={postsOnScreenState}\r\n        setPostsOnScreenState={setPostsOnScreenState}\r\n        searchValState={searchValState}\r\n        setSearchValState={setSearchValState}\r\n      />\r\n      \r\n      <StyledMain>{returnPostsMemo}</StyledMain>\r\n    </StyledApp>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './index.css';\r\nimport App from './App';\r\nimport {createGlobalStyle} from 'styled-components'\r\n\r\nconst StyleReset = createGlobalStyle `\r\n  * {\r\n    box-sizing: border-box;\r\n    margin: 0px;\r\n    padding: 0px;\r\n  }\r\n\r\n  \r\n  a {\r\n    text-decoration: none;\r\n  }\r\n\r\n\r\n  body {\r\n    margin: 0;\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n      sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n\r\n  code {\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\r\n      monospace;\r\n  }\r\n`\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <StyleReset />\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}